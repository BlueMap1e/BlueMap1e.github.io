<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>OpenSSL CLI 密钥对生成工具 个人使用经验</title>
    <url>/2023/11/15/OpenSSL-CLI-%E5%AF%86%E9%92%A5%E5%AF%B9%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7-%E4%B8%AA%E4%BA%BA%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一篇OpenSSL 密钥对生成工具个人使用经验，不定期更新。</p>
<span id="more"></span>

<hr>
<h2 id="获取帮助"><a href="#获取帮助" class="headerlink" title="获取帮助"></a>获取帮助</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl genpkey -h</span><br></pre></td></tr></table></figure>

<p>输出如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Usage: genpkey [options]</span><br><span class="line"></span><br><span class="line">General options:</span><br><span class="line"> -<span class="built_in">help</span>               Display this summary</span><br><span class="line"> -engine val         Use engine, possibly a hardware device</span><br><span class="line"> -paramfile infile   Parameters file</span><br><span class="line"> -algorithm val      The public key algorithm</span><br><span class="line"> -quiet              Do not output status <span class="keyword">while</span> generating keys</span><br><span class="line"> -pkeyopt val        Set the public key algorithm option as opt:value</span><br><span class="line"> -config infile      Load a configuration file (this may load modules)</span><br><span class="line"></span><br><span class="line">Output options:</span><br><span class="line"> -out outfile        Output file</span><br><span class="line"> -outform PEM|DER    output format (DER or PEM)</span><br><span class="line"> -pass val           Output file pass phrase <span class="built_in">source</span></span><br><span class="line"> -genparam           Generate parameters, not key</span><br><span class="line"> -text               Print the <span class="keyword">in</span> text</span><br><span class="line"> -*                  Cipher to use to encrypt the key</span><br><span class="line"></span><br><span class="line">Provider options:</span><br><span class="line"> -provider-path val  Provider load path (must be before <span class="string">&#x27;provider&#x27;</span> argument <span class="keyword">if</span> required)</span><br><span class="line"> -provider val       Provider to load (can be specified multiple <span class="built_in">times</span>)</span><br><span class="line"> -propquery val      Property query used when fetching algorithms</span><br><span class="line">Order of options may be important!  See the documentation.</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="简单的生成密钥对指令"><a href="#简单的生成密钥对指令" class="headerlink" title="简单的生成密钥对指令"></a>简单的生成密钥对指令</h2><hr>
<h3 id="私钥生成"><a href="#私钥生成" class="headerlink" title="私钥生成"></a>私钥生成</h3><p>为了生成一个密钥对，至少需要指定一个算法，指定输出文件的名称。</p>
<p>例如以下命令，它将会生成一个Ed25519私钥文件，文件名是<code>private-key-Ed25519.pem</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl genpkey -algorithm Ed25519 -out private-key-Ed25519.pem</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="公钥提取"><a href="#公钥提取" class="headerlink" title="公钥提取"></a>公钥提取</h3><p>可以从私钥文件中提取公钥。</p>
<p>例如以下命令，它会尝试从<code>private-key-Ed25519.pem</code>私钥文件中提取对应的Ed25519公钥文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl pkey -<span class="keyword">in</span> private-key-Ed25519.pem -pubout -out public-key-Ed25519.pem</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="查看公钥与私钥内容"><a href="#查看公钥与私钥内容" class="headerlink" title="查看公钥与私钥内容"></a>查看公钥与私钥内容</h3><p>可以用<code>pkey</code>指令访问OpenSSL的私钥文件，可以输出私钥、公钥的算法与内容：</p>
<p>例如以下命令，它会尝试从<code>private-key-Ed25519.pem</code>文件中读取算法、私钥内容、公钥内容，并显示在屏幕上：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl pkey -<span class="keyword">in</span> private-key-Ed25519.pem -text -noout</span><br></pre></td></tr></table></figure>

<p>一个示例输出如下：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">ED25519 Private-Key:</span><br><span class="line">priv:</span><br><span class="line">    ea:f7:<span class="number">04</span>:a2:<span class="number">20</span>:b6:e8:<span class="number">65</span>:<span class="number">40</span>:<span class="number">65</span>:ad:<span class="number">44</span>:df:b4:<span class="number">9</span>f:</span><br><span class="line">    <span class="number">9</span>f:<span class="number">9</span>b:<span class="number">6</span>c:b6:<span class="number">8</span>d:<span class="number">92</span>:<span class="number">66</span>:a9:<span class="number">73</span>:<span class="number">96</span>:cb:ae:aa:bd:<span class="number">52</span>:</span><br><span class="line">    <span class="number">28</span>:<span class="number">69</span></span><br><span class="line">pub:</span><br><span class="line">    <span class="number">42</span>:a3:<span class="number">68</span>:<span class="number">18</span>:<span class="number">8</span>e:df:<span class="number">3</span>e:<span class="number">0</span>c:c0:<span class="number">49</span>:<span class="number">29</span>:ef:e3:<span class="number">27</span>:c7:</span><br><span class="line">    <span class="number">31</span>:<span class="number">75</span>:b1:<span class="number">39</span>:<span class="number">43</span>:f4:<span class="number">26</span>:<span class="number">2</span>c:<span class="number">38</span>:<span class="number">07</span>:d4:d9:<span class="number">43</span>:e1:a1:</span><br><span class="line">    <span class="number">70</span>:<span class="number">45</span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="总体选项"><a href="#总体选项" class="headerlink" title="总体选项"></a>总体选项</h2><hr>
<h3 id="engine"><a href="#engine" class="headerlink" title="-engine"></a>-engine</h3><p>指定引擎，通常没必要（实则我也不会）</p>
<hr>
<h3 id="paramfile"><a href="#paramfile" class="headerlink" title="-paramfile"></a>-paramfile</h3><p>输入参数文件</p>
<hr>
<h3 id="algorithm"><a href="#algorithm" class="headerlink" title="-algorithm"></a>-algorithm</h3><p>指定算法，目前支持的算法有<code>RSA</code>, <code>RSA-PSS</code>, <code>EC</code>, <code>X25519</code>, <code>X448</code>, <code>Ed25519</code>, <code>Ed448</code>。（版本<code>3.1.3</code>）</p>
<p>举个例子，生成RSA-2048私钥（这里不用指定参数是因为RSA默认2048位）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl genpkey -algorithm RSA -out RSA-2048-Private-Key.pem</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="quiet"><a href="#quiet" class="headerlink" title="-quiet"></a>-quiet</h3><p>生成密钥时不输出信息，例如熵池等等。</p>
<hr>
<h3 id="pkeyopt"><a href="#pkeyopt" class="headerlink" title="-pkeyopt"></a>-pkeyopt</h3><p>修改算法的安全参数，这里很难一一列举，具体可以去看OpenSSL的文档：<a href="https://www.openssl.org/docs/manmaster/man1/openssl-genpkey.html#KEY-GENERATION-OPTIONS">&#x2F;docs&#x2F;manmaster&#x2F;man1&#x2F;openssl-genpkey.html</a></p>
<p>安全参数是否可用需要根据选择的算法来判断。</p>
<p>例如，这一串命令可以生成一个RSA-4096私钥：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl genpkey -algorithm RSA -pkeyopt rsa_keygen_bits:4096 -out RSA-4096-Private-Key.pem</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="config"><a href="#config" class="headerlink" title="-config"></a>-config</h3><p>外部导入配置文件，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl genpkey -algorithm RSA -out RSA-4096-Private-Key.pem -config my-config.cnf</span><br></pre></td></tr></table></figure>

<p>Config文件，我个人还没弄清楚怎么写，这就不做误导性示范了。</p>
<hr>
<h2 id="输出选项"><a href="#输出选项" class="headerlink" title="输出选项"></a>输出选项</h2><hr>
<h3 id="out"><a href="#out" class="headerlink" title="-out"></a>-out</h3><p>指定输出文件名，例如输出为<code>RSA-2048-Private-Key.pem</code>:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl genpkey -algorithm RSA -out RSA-2048-Private-Key.pem</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="outform"><a href="#outform" class="headerlink" title="-outform"></a>-outform</h3><p>指定输出文件格式，支持两种格式——<code>PEM</code>和<code>DER</code></p>
<p>**PEM(Privacy Enhanced Mail)**：可读的文本格式，包括边界标记、数据类型，编码为Base64。</p>
<p>**DER(Distinguished Encoding Rules)**：不可读的二进制格式，格式紧凑，无边界标记。</p>
<p>通常而言，为了提高兼容性和可读性，PEM是常见的选择，也是默认选项。</p>
<p>如果要以DER格式输出文件，一个例子如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl genpkey -algorithm RSA -outform DER -out RSA-2048-Private-Key.der</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="pass"><a href="#pass" class="headerlink" title="-pass"></a>-pass</h3><p>类似于对称加密的密钥，可以通过各种方式指定输出密钥文件的密码短语（Pass Phrase），例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl genpkey -algorithm X25519 -out X25519-Private-Key.pem -pass pass:your_password</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="genparam"><a href="#genparam" class="headerlink" title="-genparam"></a>-genparam</h3><p>只生成参数而不生成密钥，此时<code>genpkey</code>指令可以兼容更多的算法，其中额外的有<code>DH</code>，<code>DSA</code>：</p>
<p>例如，生成DSA参数：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl genpkey -algorithm DSA -genparam</span><br></pre></td></tr></table></figure>

<p>一个示例输出如下：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">..+.....+..+.......+.+......+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*</span><br><span class="line">...........................+.....+.+....+...................+.............+........+.......+........................+.+...........+.+.....+......+..............+.....................+...........+....+...+.+........+.....+...+..+..........+..+.+.....+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*</span><br><span class="line">---<span class="attr">--BEGIN</span> DSA PARAMETERS-----</span><br><span class="line">MIICKAKCAQEAruL2N9/nisKseg6CFjB/mXNC0FFRTcnecvbF+<span class="number">9</span>eD6UepnH7mv0K1</span><br><span class="line">+RFL8ECrHGxlYgAkLA9MN+ZiQQ7BSE6qQt0CEGMkgIW6GFUPt6opupB5Ql+qmEBo</span><br><span class="line">uivQr44/VJKjC0vzli85I+UD2f24xrroqssAf4n9B4t22Bg6dxV2AGAfDLdzsNwQ</span><br><span class="line">GITaruJmEj6Xkgyx3rx3KTvQfLtiHdMUJ9rBs5JonomNrEuX5kjf55chFub9IYDF</span><br><span class="line">Vpjsp57hvEJmDU6kQKihkax69V+NmF4T8cs3kAukYfLn/VubbF+FOEZuzQQsAO5n</span><br><span class="line">tGCedKsKmXCtxCgCqZu+FLIxil+A0w36OQIdAI4/RI2+Im2ZhBKGdtJ2Y8a9ndsU</span><br><span class="line">w5bAokSt+tECggEAEct/e8totsdL3RkD+qMq31Gk58yZoda876Uej6YJYYgt7RwB</span><br><span class="line">CCzOEYP/Hf/ditPSpJ4kFc8/qFp0nHAq4pctZKtywVE3T2XVwdzgBF0uLwIb505G</span><br><span class="line">o92Gcb/eEir8mBxSOvVT6X1hmZsnwHehWyasYYcNrjdorH9UvQ9VwAE5nnkK/HLH</span><br><span class="line">KxQ9P7MAdc6dGYxjFjW36ljlRCUvvNeeVPc+J5a0/JJxfm19YLatWaCnpfp1nHes</span><br><span class="line">YsQ3QdB6LKWd7OFwP6lw+OEKWRc3XhczfUBzOBPqj/QBUfHCQX6PgUJyLgiZTD/N</span><br><span class="line">YGOQzq0L9umxt/lrDQbrIKIuDLyWxe8gVyQ41g==</span><br><span class="line">---<span class="attr">--END</span> DSA PARAMETERS-----</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="text"><a href="#text" class="headerlink" title="-text"></a>-text</h3><p>把整个算法的过程结果直接全部输出到stdout，也就是打印到屏幕上，其中包括各种中间参数和密钥例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl genpkey -algorithm RSA -text</span><br></pre></td></tr></table></figure>

<p>一个示例输出如下：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="linespan><br><span class="line">..........+++++++++++++++++++++++++++++++++++++++*...+.............................+...+...+....+......+.....+.............+.....+..........+..+...+.+...+...+.....+.......+++++++++++++++++++++++++++++++++++++++*...............+....+........................+.....+.+.....+.......+..+.............+.....+....+......+........+.......+...............+.....+.........+...+.+..++++++</span><br><span class="line">---<span class="attr">--BEGIN</span> PRIVATE KEY-----</span><br><span class="line">MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCo7n8puayHyAh0</span><br><span class="line">lU6/QfL9XrnyXcMKs4onmdPntVP2UO17jHvYXStNKhLKJkZKEta0yEKihdZdOzmN</span><br><span class="line">AJd2Er5uVWOixQAwphFurajknfEerfe6dOKiTXObWNjgwcHw/xUOT7FKNop8h5DG</span><br><span class="line">X56OwHzWQMma9fWarqxEYR36b8pIno/D7+rKZxrZaJObWoexu/KQT0JCusW1qgTM</span><br><span class="line">i3XFXw4/Lzv/joP/knoxmAIzGb5+YNRAL9TIZioA3AwgiRJrgQNdB9HQTijZplbJ</span><br><span class="line"><span class="number">705</span>eEwVoUSM1AddlS+wV2uhVSSThM/i87MQtSbsvfkUZauYLioJSfxaGWW4Y3Ybe</span><br><span class="line"><span class="number">7</span>ej4ELufAgMBAAECggEAG44bi/DPZa6JQosAN05Ilm+XISOOJva2OFNtL0Ryl6EH</span><br><span class="line">u7lkkhxQbdvJCNRJbte30fFAfUYbe0Wn04ofKpFQIqsm/<span class="number">2</span>vm5giQm18UR4ZDyF9U</span><br><span class="line">I0Phm9vKWbKaXb79JZRWGOmC37oZyMpMIS+Dq4FWW5RhzjcEguCvFNBKlYkak9GV</span><br><span class="line">eKYWdNLA0au4AXRqVmaI7YmGxakHSpVHPIGULk33dlll3/iLNQS3YH9vqvoe3GK8</span><br><span class="line"><span class="number">87</span>ekSAAWTsOZUiJ0MAWMhfkfEDjG3zFq632rg2S+m4e2J1pGVcXPTuHjTSdacWCM</span><br><span class="line">DNekPsKEBByMi00aZtcogxO6zHm121EoHPulcK26oQKBgQDYRq9JQFOCk6ZpeCeb</span><br><span class="line">U6slj+QcAnc95XaXtdg1Kh17IISTLJD1p3tSnbziBWmmugpL9P8tJC63ZcdadYqn</span><br><span class="line">cMzYctNSgMuOgNWKBtXPH4qxWJ8JL8I4Ft8NOiajfVonSjGz+emNzWnNUdDYx5PP</span><br><span class="line">w2WkD82mbAOOUu81Uj4h5WWi+QKBgQDH9avwENMi60WARd1vb+jfS78yuSf3zTe9</span><br><span class="line">s5XgSr2hAHjX0xODAOAEiX253Ube83n9oEkhHMKTcQfzrIgoJ3G5UZ6Pd43tiqrp</span><br><span class="line">ejygyxlOpH+grSiwHc7i3WZWx31kjBCmoFgCQUBfH4UUYzwOqvZgoC3G4lVvYug/</span><br><span class="line"><span class="number">33S</span>RqXZhVwKBgHI8I6nVSEbYJjXfOUxZzTRx5FLHGqSe5x0K98BdFmVKr7vs9kRK</span><br><span class="line">ymDA4Fuh8EQYUAf+yCnXyrUkFUA6hZobgpdxTx1s2hfTBPd61MQqLN+vp5D6oONv</span><br><span class="line">cTFTXcVNGKlYDxi5EBvOO+wvItjd0b0TwEP/<span class="number">9</span>OfKdbZfJ+pKHndY625BAoGAIlif</span><br><span class="line">fO/W5GOXH45gl7iYPmqrX9IP/<span class="selector-tag">G</span>+CiJIlR05vPg1vtFqsOk9XK1BWiStp9ffKV3dF</span><br><span class="line">uGtRPLQokoFrLcKAtT1AyBHYDhpIeywk59Wa9jgpN/cmSwIDvFIdNwCzGCc64PQf</span><br><span class="line">ydtdbDlkyXi2IyrYgQZidov/<span class="number">8s</span>8BZ59BTZfXHqcCgYEAtciV66BhhLSJ0P2hn453</span><br><span class="line">Q2/XvHXU68CKhl/<span class="number">8s</span>G8CyrPxO6Wk3oCIeZPhV0k8HAoU00r1L+j4uwY43/WDJtR5</span><br><span class="line">ljEn5xndTNmd0WWfaV1BruM7ql0I/URwpE6D6rsFq4SFHnKkVsB1Hb6d7YxRt+ct</span><br><span class="line">kjGDW1ZkJzDWKlf7Lf9oKqc=</span><br><span class="line">---<span class="attr">--END</span> PRIVATE KEY-----</span><br><span class="line">Private-Key: (<span class="number">2048</span> bit, <span class="number">2</span> primes)</span><br><span class="line">modulus:</span><br><span class="line">    <span class="number">00</span>:a8:ee:<span class="number">7</span>f:<span class="number">29</span>:b9:ac:<span class="number">87</span>:c8:<span class="number">08</span>:<span class="number">74</span>:<span class="number">95</span>:<span class="number">4</span>e:bf:<span class="number">41</span>:</span><br><span class="line">    f2:fd:<span class="number">5</span>e:b9:f2:<span class="number">5</span>d:c3:<span class="number">0</span>a:b3:<span class="number">8</span>a:<span class="number">27</span>:<span class="number">99</span>:d3:e7:b5:</span><br><span class="line">    <span class="number">53</span>:f6:<span class="number">50</span>:ed:<span class="number">7</span>b:<span class="number">8</span>c:<span class="number">7</span>b:d8:<span class="number">5</span>d:<span class="number">2</span>b:<span class="number">4</span>d:<span class="number">2</span>a:<span class="number">12</span>:ca:<span class="number">26</span>:</span><br><span class="line">    <span class="number">46</span>:<span class="number">4</span>a:<span class="number">12</span>:d6:b4:c8:<span class="number">42</span>:a2:<span class="number">85</span>:d6:<span class="number">5</span>d:<span class="number">3</span>b:<span class="number">39</span>:<span class="number">8</span>d:<span class="number">00</span>:</span><br><span class="line">    <span class="number">97</span>:<span class="number">76</span>:<span class="number">12</span>:be:<span class="number">6</span>e:<span class="number">55</span>:<span class="number">63</span>:a2:c5:<span class="number">00</span>:<span class="number">30</span>:a6:<span class="number">11</span>:<span class="number">6</span>e:ad:</span><br><span class="line">    a8:e4:<span class="number">9</span>d:f1:<span class="number">1</span>e:ad:f7:ba:<span class="number">74</span>:e2:a2:<span class="number">4</span>d:<span class="number">73</span>:<span class="number">9</span>b:<span class="number">58</span>:</span><br><span class="line">    d8:e0:c1:c1:f0:ff:<span class="number">15</span>:<span class="number">0</span>e:<span class="number">4</span>f:b1:<span class="number">4</span>a:<span class="number">36</span>:<span class="number">8</span>a:<span class="number">7</span>c:<span class="number">87</span>:</span><br><span class="line">    <span class="number">90</span>:c6:<span class="number">5</span>f:<span class="number">9</span>e:<span class="number">8</span>e:c0:<span class="number">7</span>c:d6:<span class="number">40</span>:c9:<span class="number">9</span>a:f5:f5:<span class="number">9</span>a:ae:</span><br><span class="line">    ac:<span class="number">44</span>:<span class="number">61</span>:<span class="number">1</span>d:fa:<span class="number">6</span>f:ca:<span class="number">48</span>:<span class="number">9</span>e:<span class="number">8</span>f:c3:ef:ea:ca:<span class="number">67</span>:</span><br><span class="line">    <span class="number">1</span>a:d9:<span class="number">68</span>:<span class="number">93</span>:<span class="number">9</span>b:<span class="number">5</span>a:<span class="number">87</span>:b1:bb:f2:<span class="number">90</span>:<span class="number">4</span>f:<span class="number">42</span>:<span class="number">42</span>:ba:</span><br><span class="line">    c5:b5:aa:<span class="number">04</span>:cc:<span class="number">8</span>b:<span class="number">75</span>:c5:<span class="number">5</span>f:<span class="number">0</span>e:<span class="number">3</span>f:<span class="number">2</span>f:<span class="number">3</span>b:ff:<span class="number">8</span>e:</span><br><span class="line">    <span class="number">83</span>:ff:<span class="number">92</span>:<span class="number">7</span>a:<span class="number">31</span>:<span class="number">98</span>:<span class="number">02</span>:<span class="number">33</span>:<span class="number">19</span>:be:<span class="number">7</span>e:<span class="number">60</span>:d4:<span class="number">40</span>:<span class="number">2</span>f:</span><br><span class="line">    d4:c8:<span class="number">66</span>:<span class="number">2</span>a:<span class="number">00</span>:dc:<span class="number">0</span>c:<span class="number">20</span>:<span class="number">89</span>:<span class="number">12</span>:<span class="number">6</span>b:<span class="number">81</span>:<span class="number">03</span>:<span class="number">5</span>d:<span class="number">07</span>:</span><br><span class="line">    d1:d0:<span class="number">4</span>e:<span class="number">28</span>:d9:a6:<span class="number">56</span>:c9:ef:<span class="number">4</span>e:<span class="number">5</span>e:<span class="number">13</span>:<span class="number">05</span>:<span class="number">68</span>:<span class="number">51</span>:</span><br><span class="line">    <span class="number">23</span>:<span class="number">35</span>:<span class="number">01</span>:d7:<span class="number">65</span>:<span class="number">4</span>b:ec:<span class="number">15</span>:da:e8:<span class="number">55</span>:<span class="number">49</span>:<span class="number">24</span>:e1:<span class="number">33</span>:</span><br><span class="line">    f8:bc:ec:c4:<span class="number">2</span>d:<span class="number">49</span>:bb:<span class="number">2</span>f:<span class="number">7</span>e:<span class="number">45</span>:<span class="number">19</span>:<span class="number">6</span>a:e6:<span class="number">0</span>b:<span class="number">8</span>a:</span><br><span class="line">    <span class="number">82</span>:<span class="number">52</span>:<span class="number">7</span>f:<span class="number">16</span>:<span class="number">86</span>:<span class="number">59</span>:<span class="number">6</span>e:<span class="number">18</span>:dd:<span class="number">86</span>:de:ed:e8:f8:<span class="number">10</span>:</span><br><span class="line">    bb:<span class="number">9</span>f</span><br><span class="line">publicExponent: <span class="number">65537</span> (<span class="number">0</span>x10001)</span><br><span class="line">privateExponent:</span><br><span class="line">    <span class="number">1</span>b:<span class="number">8</span>e:<span class="number">1</span>b:<span class="number">8</span>b:f0:cf:<span class="number">65</span>:ae:<span class="number">89</span>:<span class="number">42</span>:<span class="number">8</span>b:<span class="number">00</span>:<span class="number">37</span>:<span class="number">4</span>e:<span class="number">48</span>:</span><br><span class="line">    <span class="number">96</span>:<span class="number">6</span>f:<span class="number">97</span>:<span class="number">21</span>:<span class="number">23</span>:<span class="number">8</span>e:<span class="number">26</span>:f6:b6:<span class="number">38</span>:<span class="number">53</span>:<span class="number">6</span>d:<span class="number">2</span>f:<span class="number">44</span>:<span class="number">72</span>:</span><br><span class="line">    <span class="number">97</span>:a1:<span class="number">07</span>:bb:b9:<span class="number">64</span>:<span class="number">92</span>:<span class="number">1</span>c:<span class="number">50</span>:<span class="number">6</span>d:db:c9:<span class="number">08</span>:d4:<span class="number">49</span>:</span><br><span class="line">    <span class="number">6</span>e:d7:b7:d1:f1:<span class="number">40</span>:<span class="number">7</span>d:<span class="number">46</span>:<span class="number">1</span>b:<span class="number">7</span>b:<span class="number">45</span>:a7:d3:<span class="number">8</span>a:<span class="number">1</span>f:</span><br><span class="line">    <span class="number">2</span>a:<span class="number">91</span>:<span class="number">50</span>:<span class="number">22</span>:ab:<span class="number">26</span>:ff:<span class="number">6</span>b:e6:e6:<span class="number">08</span>:<span class="number">90</span>:<span class="number">9</span>b:<span class="number">5</span>f:<span class="number">14</span>:</span><br><span class="line">    <span class="number">47</span>:<span class="number">86</span>:<span class="number">43</span>:c8:<span class="number">5</span>f:<span class="number">54</span>:<span class="number">23</span>:<span class="number">43</span>:e1:<span class="number">9</span>b:db:ca:<span class="number">59</span>:b2:<span class="number">9</span>a:</span><br><span class="line">    <span class="number">5</span>d:be:fd:<span class="number">25</span>:<span class="number">94</span>:<span class="number">56</span>:<span class="number">18</span>:e9:<span class="number">82</span>:df:ba:<span class="number">19</span>:c8:ca:<span class="number">4</span>c:</span><br><span class="line">    <span class="number">21</span>:<span class="number">2</span>f:<span class="number">83</span>:ab:<span class="number">81</span>:<span class="number">56</span>:<span class="number">5</span>b:<span class="number">94</span>:<span class="number">61</span>:ce:<span class="number">37</span>:<span class="number">04</span>:<span class="number">82</span>:e0:af:</span><br><span class="line">    <span class="number">14</span>:d0:<span class="number">4</span>a:<span class="number">95</span>:<span class="number">89</span>:<span class="number">1</span>a:<span class="number">93</span>:d1:<span class="number">95</span>:<span class="number">78</span>:a6:<span class="number">16</span>:<span class="number">74</span>:d2:c0:</span><br><span class="line">    d1:ab:b8:<span class="number">01</span>:<span class="number">74</span>:<span class="number">6</span>a:<span class="number">56</span>:<span class="number">66</span>:<span class="number">88</span>:ed:<span class="number">89</span>:<span class="number">86</span>:c5:a9:<span class="number">07</span>:</span><br><span class="line">    <span class="number">4</span>a:<span class="number">95</span>:<span class="number">47</span>:<span class="number">3</span>c:<span class="number">81</span>:<span class="number">94</span>:<span class="number">2</span>e:<span class="number">4</span>d:f7:<span class="number">76</span>:<span class="number">59</span>:<span class="number">65</span>:df:f8:<span class="number">8</span>b:</span><br><span class="line">    <span class="number">35</span>:<span class="number">04</span>:b7:<span class="number">60</span>:<span class="number">7</span>f:<span class="number">6</span>f:aa:fa:<span class="number">1</span>e:dc:<span class="number">62</span>:bc:f3:b7:a4:</span><br><span class="line">    <span class="number">48</span>:<span class="number">00</span>:<span class="number">16</span>:<span class="number">4</span>e:c3:<span class="number">99</span>:<span class="number">52</span>:<span class="number">22</span>:<span class="number">74</span>:<span class="number">30</span>:<span class="number">05</span>:<span class="number">8</span>c:<span class="number">85</span>:f9:<span class="number">1</span>f:</span><br><span class="line">    <span class="number">10</span>:<span class="number">38</span>:c6:df:<span class="number">31</span>:<span class="number">6</span>a:eb:<span class="number">7</span>d:ab:<span class="number">83</span>:<span class="number">64</span>:be:<span class="number">9</span>b:<span class="number">87</span>:b6:</span><br><span class="line">    <span class="number">27</span>:<span class="number">5</span>a:<span class="number">46</span>:<span class="number">55</span>:c5:cf:<span class="number">4</span>e:e1:e3:<span class="number">4</span>d:<span class="number">27</span>:<span class="number">5</span>a:<span class="number">71</span>:<span class="number">60</span>:<span class="number">8</span>c:</span><br><span class="line">    <span class="number">0</span>c:d7:a4:<span class="number">3</span>e:c2:<span class="number">84</span>:<span class="number">04</span>:<span class="number">1</span>c:<span class="number">8</span>c:<span class="number">8</span>b:<span class="number">4</span>d:<span class="number">1</span>a:<span class="number">66</span>:d7:<span class="number">28</span>:</span><br><span class="line">    <span class="number">83</span>:<span class="number">13</span>:ba:cc:<span class="number">79</span>:b5:db:<span class="number">51</span>:<span class="number">28</span>:<span class="number">1</span>c:fb:a5:<span class="number">70</span>:ad:ba:</span><br><span class="line">    a1</span><br><span class="line">prime1:</span><br><span class="line">    <span class="number">00</span>:d8:<span class="number">46</span>:af:<span class="number">49</span>:<span class="number">40</span>:<span class="number">53</span>:<span class="number">82</span>:<span class="number">93</span>:a6:<span class="number">69</span>:<span class="number">78</span>:<span class="number">27</span>:<span class="number">9</span>b:<span class="number">53</span>:</span><br><span class="line">    ab:<span class="number">25</span>:<span class="number">8</span>f:e4:<span class="number">1</span>c:<span class="number">02</span>:<span class="number">77</span>:<span class="number">3</span>d:e5:<span class="number">76</span>:<span class="number">97</span>:b5:d8:<span class="number">35</span>:<span class="number">2</span>a:</span><br><span class="line">    <span class="number">1</span>d:<span class="number">7</span>b:<span class="number">20</span>:<span class="number">84</span>:<span class="number">93</span>:<span class="number">2</span>c:<span class="number">90</span>:f5:a7:<span class="number">7</span>b:<span class="number">52</span>:<span class="number">9</span>d:bc:e2:<span class="number">05</span>:</span><br><span class="line">    <span class="number">69</span>:a6:ba:<span class="number">0</span>a:<span class="number">4</span>b:f4:ff:<span class="number">2</span>d:<span class="number">24</span>:<span class="number">2</span>e:b7:<span class="number">65</span>:c7:<span class="number">5</span>a:<span class="number">75</span>:</span><br><span class="line">    <span class="number">8</span>a:a7:<span class="number">70</span>:cc:d8:<span class="number">72</span>:d3:<span class="number">52</span>:<span class="number">80</span>:cb:<span class="number">8</span>e:<span class="number">80</span>:d5:<span class="number">8</span>a:<span class="number">06</span>:</span><br><span class="line">    d5:cf:<span class="number">1</span>f:<span class="number">8</span>a:b1:<span class="number">58</span>:<span class="number">9</span>f:<span class="number">09</span>:<span class="number">2</span>f:c2:<span class="number">38</span>:<span class="number">16</span>:df:<span class="number">0</span>d:<span class="number">3</span>a:</span><br><span class="line">    <span class="number">26</span>:a3:<span class="number">7</span>d:<span class="number">5</span>a:<span class="number">27</span>:<span class="number">4</span>a:<span class="number">31</span>:b3:f9:e9:<span class="number">8</span>d:cd:<span class="number">69</span>:cd:<span class="number">51</span>:</span><br><span class="line">    d0:d8:c7:<span class="number">93</span>:cf:c3:<span class="number">65</span>:a4:<span class="number">0</span>f:cd:a6:<span class="number">6</span>c:<span class="number">03</span>:<span class="number">8</span>e:<span class="number">52</span>:</span><br><span class="line">    ef:<span class="number">35</span>:<span class="number">52</span>:<span class="number">3</span>e:<span class="number">21</span>:e5:<span class="number">65</span>:a2:f9</span><br><span class="line">prime2:</span><br><span class="line">    <span class="number">00</span>:c7:f5:ab:f0:<span class="number">10</span>:d3:<span class="number">22</span>:eb:<span class="number">45</span>:<span class="number">80</span>:<span class="number">45</span>:dd:<span class="number">6</span>f:<span class="number">6</span>f:</span><br><span class="line">    e8:df:<span class="number">4</span>b:bf:<span class="number">32</span>:b9:<span class="number">27</span>:f7:cd:<span class="number">37</span>:bd:b3:<span class="number">95</span>:e0:<span class="number">4</span>a:</span><br><span class="line">    bd:a1:<span class="number">00</span>:<span class="number">78</span>:d7:d3:<span class="number">13</span>:<span class="number">83</span>:<span class="number">00</span>:e0:<span class="number">04</span>:<span class="number">89</span>:<span class="number">7</span>d:b9:dd:</span><br><span class="line">    <span class="number">46</span>:de:f3:<span class="number">79</span>:fd:a0:<span class="number">49</span>:<span class="number">21</span>:<span class="number">1</span>c:c2:<span class="number">93</span>:<span class="number">71</span>:<span class="number">07</span>:f3:ac:</span><br><span class="line">    <span class="number">88</span>:<span class="number">28</span>:<span class="number">27</span>:<span class="number">71</span>:b9:<span class="number">51</span>:<span class="number">9</span>e:<span class="number">8</span>f:<span class="number">77</span>:<span class="number">8</span>d:ed:<span class="number">8</span>a:aa:e9:<span class="number">7</span>a:</span><br><span class="line">    <span class="number">3</span>c:a0:cb:<span class="number">19</span>:<span class="number">4</span>e:a4:<span class="number">7</span>f:a0:ad:<span class="number">28</span>:b0:<span class="number">1</span>d:ce:e2:dd:</span><br><span class="line">    <span class="number">66</span>:<span class="number">56</span>:c7:<span class="number">7</span>d:<span class="number">64</span>:<span class="number">8</span>c:<span class="number">10</span>:a6:a0:<span class="number">58</span>:<span class="number">02</span>:<span class="number">41</span>:<span class="number">40</span>:<span class="number">5</span>f:<span class="number">1</span>f:</span><br><span class="line">    <span class="number">85</span>:<span class="number">14</span>:<span class="number">63</span>:<span class="number">3</span>c:<span class="number">0</span>e:aa:f6:<span class="number">60</span>:a0:<span class="number">2</span>d:c6:e2:<span class="number">55</span>:<span class="number">6</span>f:<span class="number">62</span>:</span><br><span class="line">    e8:<span class="number">3</span>f:df:<span class="number">74</span>:<span class="number">91</span>:a9:<span class="number">76</span>:<span class="number">61</span>:<span class="number">57</span></span><br><span class="line">exponent1:</span><br><span class="line">    <span class="number">72</span>:<span class="number">3</span>c:<span class="number">23</span>:a9:d5:<span class="number">48</span>:<span class="number">46</span>:d8:<span class="number">26</span>:<span class="number">35</span>:df:<span class="number">39</span>:<span class="number">4</span>c:<span class="number">59</span>:cd:</span><br><span class="line">    <span class="number">34</span>:<span class="number">71</span>:e4:<span class="number">52</span>:c7:<span class="number">1</span>a:a4:<span class="number">9</span>e:e7:<span class="number">1</span>d:<span class="number">0</span>a:f7:c0:<span class="number">5</span>d:<span class="number">16</span>:</span><br><span class="line">    <span class="number">65</span>:<span class="number">4</span>a:af:bb:ec:f6:<span class="number">44</span>:<span class="number">4</span>a:ca:<span class="number">60</span>:c0:e0:<span class="number">5</span>b:a1:f0:</span><br><span class="line">    <span class="number">44</span>:<span class="number">18</span>:<span class="number">50</span>:<span class="number">07</span>:fe:c8:<span class="number">29</span>:d7:ca:b5:<span class="number">24</span>:<span class="number">15</span>:<span class="number">40</span>:<span class="number">3</span>a:<span class="number">85</span>:</span><br><span class="line">    <span class="number">9</span>a:<span class="number">1</span>b:<span class="number">82</span>:<span class="number">97</span>:<span class="number">71</span>:<span class="number">4</span>f:<span class="number">1</span>d:<span class="number">6</span>c:da:<span class="number">17</span>:d3:<span class="number">04</span>:f7:<span class="number">7</span>a:d4:</span><br><span class="line">    c4:<span class="number">2</span>a:<span class="number">2</span>c:df:af:a7:<span class="number">90</span>:fa:a0:e3:<span class="number">6</span>f:<span class="number">71</span>:<span class="number">31</span>:<span class="number">53</span>:<span class="number">5</span>d:</span><br><span class="line">    c5:<span class="number">4</span>d:<span class="number">18</span>:a9:<span class="number">58</span>:<span class="number">0</span>f:<span class="number">18</span>:b9:<span class="number">10</span>:<span class="number">1</span>b:ce:<span class="number">3</span>b:ec:<span class="number">2</span>f:<span class="number">22</span>:</span><br><span class="line">    d8:dd:d1:bd:<span class="number">13</span>:c0:<span class="number">43</span>:ff:f4:e7:ca:<span class="number">75</span>:b6:<span class="number">5</span>f:<span class="number">27</span>:</span><br><span class="line">    ea:<span class="number">4</span>a:<span class="number">1</span>e:<span class="number">77</span>:<span class="number">58</span>:eb:<span class="number">6</span>e:<span class="number">41</span></span><br><span class="line">exponent2:</span><br><span class="line">    <span class="number">22</span>:<span class="number">58</span>:<span class="number">9</span>f:<span class="number">7</span>c:ef:d6:e4:<span class="number">63</span>:<span class="number">97</span>:<span class="number">1</span>f:<span class="number">8</span>e:<span class="number">60</span>:<span class="number">97</span>:b8:<span class="number">98</span>:</span><br><span class="line">    <span class="number">3</span>e:<span class="number">6</span>a:ab:<span class="number">5</span>f:d2:<span class="number">0</span>f:fc:<span class="number">6</span>f:<span class="number">82</span>:<span class="number">88</span>:<span class="number">92</span>:<span class="number">25</span>:<span class="number">47</span>:<span class="number">4</span>e:<span class="number">6</span>f:</span><br><span class="line">    <span class="number">3</span>e:<span class="number">0</span>d:<span class="number">6</span>f:b4:<span class="number">5</span>a:ac:<span class="number">3</span>a:<span class="number">4</span>f:<span class="number">57</span>:<span class="number">2</span>b:<span class="number">50</span>:<span class="number">56</span>:<span class="number">89</span>:<span class="number">2</span>b:<span class="number">69</span>:</span><br><span class="line">    f5:f7:ca:<span class="number">57</span>:<span class="number">77</span>:<span class="number">45</span>:b8:<span class="number">6</span>b:<span class="number">51</span>:<span class="number">3</span>c:b4:<span class="number">28</span>:<span class="number">92</span>:<span class="number">81</span>:<span class="number">6</span>b:</span><br><span class="line">    <span class="number">2</span>d:c2:<span class="number">80</span>:b5:<span class="number">3</span>d:<span class="number">40</span>:c8:<span class="number">11</span>:d8:<span class="number">0</span>e:<span class="number">1</span>a:<span class="number">48</span>:<span class="number">7</span>b:<span class="number">2</span>c:<span class="number">24</span>:</span><br><span class="line">    e7:d5:<span class="number">9</span>a:f6:<span class="number">38</span>:<span class="number">29</span>:<span class="number">37</span>:f7:<span class="number">26</span>:<span class="number">4</span>b:<span class="number">02</span>:<span class="number">03</span>:bc:<span class="number">52</span>:<span class="number">1</span>d:</span><br><span class="line">    <span class="number">37</span>:<span class="number">00</span>:b3:<span class="number">18</span>:<span class="number">27</span>:<span class="number">3</span>a:e0:f4:<span class="number">1</span>f:c9:db:<span class="number">5</span>d:<span class="number">6</span>c:<span class="number">39</span>:<span class="number">64</span>:</span><br><span class="line">    c9:<span class="number">78</span>:b6:<span class="number">23</span>:<span class="number">2</span>a:d8:<span class="number">81</span>:<span class="number">06</span>:<span class="number">62</span>:<span class="number">76</span>:<span class="number">8</span>b:ff:f2:cf:<span class="number">01</span>:</span><br><span class="line">    <span class="number">67</span>:<span class="number">9</span>f:<span class="number">41</span>:<span class="number">4</span>d:<span class="number">97</span>:d7:<span class="number">1</span>e:a7</span><br><span class="line">coefficient:</span><br><span class="line">    <span class="number">00</span>:b5:c8:<span class="number">95</span>:eb:a0:<span class="number">61</span>:<span class="number">84</span>:b4:<span class="number">89</span>:d0:fd:a1:<span class="number">9</span>f:<span class="number">8</span>e:</span><br><span class="line">    <span class="number">77</span>:<span class="number">43</span>:<span class="number">6</span>f:d7:bc:<span class="number">75</span>:d4:eb:c0:<span class="number">8</span>a:<span class="number">86</span>:<span class="number">5</span>f:fc:b0:<span class="number">6</span>f:</span><br><span class="line">    <span class="number">02</span>:ca:b3:f1:<span class="number">3</span>b:a5:a4:de:<span class="number">80</span>:<span class="number">88</span>:<span class="number">79</span>:<span class="number">93</span>:e1:<span class="number">57</span>:<span class="number">49</span>:</span><br><span class="line">    <span class="number">3</span>c:<span class="number">1</span>c:<span class="number">0</span>a:<span class="number">14</span>:d3:<span class="number">4</span>a:f5:<span class="number">2</span>f:e8:f8:bb:<span class="number">06</span>:<span class="number">38</span>:df:f5:</span><br><span class="line">    <span class="number">83</span>:<span class="number">26</span>:d4:<span class="number">79</span>:<span class="number">96</span>:<span class="number">31</span>:<span class="number">27</span>:e7:<span class="number">19</span>:dd:<span class="number">4</span>c:d9:<span class="number">9</span>d:d1:<span class="number">65</span>:</span><br><span class="line">    <span class="number">9</span>f:<span class="number">69</span>:<span class="number">5</span>d:<span class="number">41</span>:ae:e3:<span class="number">3</span>b:aa:<span class="number">5</span>d:<span class="number">08</span>:fd:<span class="number">44</span>:<span class="number">70</span>:a4:<span class="number">4</span>e:</span><br><span class="line">    <span class="number">83</span>:ea:bb:<span class="number">05</span>:ab:<span class="number">84</span>:<span class="number">85</span>:<span class="number">1</span>e:<span class="number">72</span>:a4:<span class="number">56</span>:c0:<span class="number">75</span>:<span class="number">1</span>d:be:</span><br><span class="line">    <span class="number">9</span>d:ed:<span class="number">8</span>c:<span class="number">51</span>:b7:e7:<span class="number">2</span>d:<span class="number">92</span>:<span class="number">31</span>:<span class="number">83</span>:<span class="number">5</span>b:<span class="number">56</span>:<span class="number">64</span>:<span class="number">27</span>:<span class="number">30</span>:</span><br><span class="line">    d6:<span class="number">2</span>a:<span class="number">57</span>:fb:<span class="number">2</span>d:ff:<span class="number">68</span>:<span class="number">2</span>a:a7</span><br></pre></td></tr></table></figure>

<hr>
<h3 id=""><a href="#" class="headerlink" title="-*"></a>-*</h3><p>这个指令的意思是可以自己指定用于保护密钥文件的对称加密算法，当然前提是当前版本的OpenSSL支持。</p>
<p>例如，使用<code>AES-128-CTR</code>对这个密钥文件进行加密：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl genpkey -algorithm RSA -AES-128-CTR -out RSA-2048-Encrypted-Private-Key.pem</span><br></pre></td></tr></table></figure>

<hr>
]]></content>
      <categories>
        <category>Tech</category>
        <category>Crypto</category>
      </categories>
      <tags>
        <tag>OpenSSL</tag>
        <tag>Crypto</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenSSL CLI 对称加密算法 个人使用经验</title>
    <url>/2023/11/08/OpenSSL-CLI-%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95-%E4%B8%AA%E4%BA%BA%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一篇简单的OpenSSL 对称加密使用经验，偶尔更新。</p>
<span id="more"></span>

<hr>
<h2 id="获取帮助"><a href="#获取帮助" class="headerlink" title="获取帮助"></a>获取帮助</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -h</span><br></pre></td></tr></table></figure>

<p>输入如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Usage: enc [options]</span><br><span class="line"></span><br><span class="line">General options:</span><br><span class="line"> -<span class="built_in">help</span>               Display this summary</span><br><span class="line"> -list               List ciphers</span><br><span class="line"> -ciphers            Alias <span class="keyword">for</span> -list</span><br><span class="line"> -e                  Encrypt</span><br><span class="line"> -d                  Decrypt</span><br><span class="line"> -p                  Print the iv/key</span><br><span class="line"> -P                  Print the iv/key and <span class="built_in">exit</span></span><br><span class="line"> -engine val         Use engine, possibly a hardware device</span><br><span class="line"></span><br><span class="line">Input options:</span><br><span class="line"> -<span class="keyword">in</span> infile          Input file</span><br><span class="line"> -k val              Passphrase</span><br><span class="line"> -kfile infile       Read passphrase from file</span><br><span class="line"></span><br><span class="line">Output options:</span><br><span class="line"> -out outfile        Output file</span><br><span class="line"> -pass val           Passphrase <span class="built_in">source</span></span><br><span class="line"> -v                  Verbose output</span><br><span class="line"> -a                  Base64 encode/decode, depending on encryption flag</span><br><span class="line"> -<span class="built_in">base64</span>             Same as option -a</span><br><span class="line"> -A                  Used with -[<span class="built_in">base64</span>|a] to specify <span class="built_in">base64</span> buffer as a single line</span><br><span class="line"></span><br><span class="line">Encryption options:</span><br><span class="line"> -nopad              Disable standard block padding</span><br><span class="line"> -salt               Use salt <span class="keyword">in</span> the KDF (default)</span><br><span class="line"> -nosalt             Do not use salt <span class="keyword">in</span> the KDF</span><br><span class="line"> -debug              Print debug info</span><br><span class="line"> -bufsize val        Buffer size</span><br><span class="line"> -K val              Raw key, <span class="keyword">in</span> hex</span><br><span class="line"> -S val              Salt, <span class="keyword">in</span> hex</span><br><span class="line"> -iv val             IV <span class="keyword">in</span> hex</span><br><span class="line"> -md val             Use specified digest to create a key from the passphrase</span><br><span class="line"> -iter +int          Specify the iteration count and force the use of PBKDF2</span><br><span class="line">                     Default: 10000</span><br><span class="line"> -pbkdf2             Use password-based key derivation <span class="keyword">function</span> 2 (PBKDF2)</span><br><span class="line">                     Use -iter to change the iteration count from 10000</span><br><span class="line"> -none               Don<span class="string">&#x27;t encrypt</span></span><br><span class="line"><span class="string"> -*                  Any supported cipher</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Random state options:</span></span><br><span class="line"><span class="string"> -rand val           Load the given file(s) into the random number generator</span></span><br><span class="line"><span class="string"> -writerand outfile  Write random data to the specified file</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Provider options:</span></span><br><span class="line"><span class="string"> -provider-path val  Provider load path (must be before &#x27;</span>provider<span class="string">&#x27; argument if required)</span></span><br><span class="line"><span class="string"> -provider val       Provider to load (can be specified multiple times)</span></span><br><span class="line"><span class="string"> -propquery val      Property query used when fetching algorithms</span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="列出支持的加密算法"><a href="#列出支持的加密算法" class="headerlink" title="列出支持的加密算法"></a>列出支持的加密算法</h2><p>可以通过<code>-list</code>或<code>-ciphers</code>参数来列出当前版本OpenSSL支持的对称加密算法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -list</span><br></pre></td></tr></table></figure>

<p>或：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -ciphers</span><br></pre></td></tr></table></figure>

<p>个人使用的OpenSSL版本是3.1.2，它的输出如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Supported ciphers:</span><br><span class="line">-aes-128-cbc               -aes-128-cfb               -aes-128-cfb1</span><br><span class="line">-aes-128-cfb8              -aes-128-ctr               -aes-128-ecb</span><br><span class="line">-aes-128-ofb               -aes-192-cbc               -aes-192-cfb</span><br><span class="line">-aes-192-cfb1              -aes-192-cfb8              -aes-192-ctr</span><br><span class="line">-aes-192-ecb               -aes-192-ofb               -aes-256-cbc</span><br><span class="line">-aes-256-cfb               -aes-256-cfb1              -aes-256-cfb8</span><br><span class="line">-aes-256-ctr               -aes-256-ecb               -aes-256-ofb</span><br><span class="line">-aes128                    -aes128-wrap               -aes192</span><br><span class="line">-aes192-wrap               -aes256                    -aes256-wrap</span><br><span class="line">-aria-128-cbc              -aria-128-cfb              -aria-128-cfb1</span><br><span class="line">-aria-128-cfb8             -aria-128-ctr              -aria-128-ecb</span><br><span class="line">-aria-128-ofb              -aria-192-cbc              -aria-192-cfb</span><br><span class="line">-aria-192-cfb1             -aria-192-cfb8             -aria-192-ctr</span><br><span class="line">-aria-192-ecb              -aria-192-ofb              -aria-256-cbc</span><br><span class="line">-aria-256-cfb              -aria-256-cfb1             -aria-256-cfb8</span><br><span class="line">-aria-256-ctr              -aria-256-ecb              -aria-256-ofb</span><br><span class="line">-aria128                   -aria192                   -aria256</span><br><span class="line">-bf                        -bf-cbc                    -bf-cfb</span><br><span class="line">-bf-ecb                    -bf-ofb                    -blowfish</span><br><span class="line">-camellia-128-cbc          -camellia-128-cfb          -camellia-128-cfb1</span><br><span class="line">-camellia-128-cfb8         -camellia-128-ctr          -camellia-128-ecb</span><br><span class="line">-camellia-128-ofb          -camellia-192-cbc          -camellia-192-cfb</span><br><span class="line">-camellia-192-cfb1         -camellia-192-cfb8         -camellia-192-ctr</span><br><span class="line">-camellia-192-ecb          -camellia-192-ofb          -camellia-256-cbc</span><br><span class="line">-camellia-256-cfb          -camellia-256-cfb1         -camellia-256-cfb8</span><br><span class="line">-camellia-256-ctr          -camellia-256-ecb          -camellia-256-ofb</span><br><span class="line">-camellia128               -camellia192               -camellia256</span><br><span class="line">-cast                      -cast-cbc                  -cast5-cbc</span><br><span class="line">-cast5-cfb                 -cast5-ecb                 -cast5-ofb</span><br><span class="line">-chacha20                  -des                       -des-cbc</span><br><span class="line">-des-cfb                   -des-cfb1                  -des-cfb8</span><br><span class="line">-des-ecb                   -des-ede                   -des-ede-cbc</span><br><span class="line">-des-ede-cfb               -des-ede-ecb               -des-ede-ofb</span><br><span class="line">-des-ede3                  -des-ede3-cbc              -des-ede3-cfb</span><br><span class="line">-des-ede3-cfb1             -des-ede3-cfb8             -des-ede3-ecb</span><br><span class="line">-des-ede3-ofb              -des-ofb                   -des3</span><br><span class="line">-des3-wrap                 -desx                      -desx-cbc</span><br><span class="line">-id-aes128-wrap            -id-aes128-wrap-pad        -id-aes192-wrap</span><br><span class="line">-id-aes192-wrap-pad        -id-aes256-wrap            -id-aes256-wrap-pad</span><br><span class="line">-id-smime-alg-CMS3DESwrap  -idea                      -idea-cbc</span><br><span class="line">-idea-cfb                  -idea-ecb                  -idea-ofb</span><br><span class="line">-rc2                       -rc2-128                   -rc2-40</span><br><span class="line">-rc2-40-cbc                -rc2-64                    -rc2-64-cbc</span><br><span class="line">-rc2-cbc                   -rc2-cfb                   -rc2-ecb</span><br><span class="line">-rc2-ofb                   -rc4                       -rc4-40</span><br><span class="line">-seed                      -seed-cbc                  -seed-cfb</span><br><span class="line">-seed-ecb                  -seed-ofb                  -sm4</span><br><span class="line">-sm4-cbc                   -sm4-cfb                   -sm4-ctr</span><br><span class="line">-sm4-ecb                   -sm4-ofb</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="对称加密算法命名规则的简单介绍"><a href="#对称加密算法命名规则的简单介绍" class="headerlink" title="对称加密算法命名规则的简单介绍"></a>对称加密算法命名规则的简单介绍</h3><hr>
<h4 id="可变密钥长度-分组加密算法"><a href="#可变密钥长度-分组加密算法" class="headerlink" title="可变密钥长度 分组加密算法"></a>可变密钥长度 分组加密算法</h4><p>一个可变密钥长度的分组加密算法参数通常由三部分组成，<strong>对称加密算法</strong> - <strong>密钥长度</strong> - <strong>分组密码工作模式</strong>。</p>
<p>举个例子：<code>AES-128-CTR</code></p>
<p><strong>AES</strong>：<strong>对称加密算法</strong> 为 <strong>高级加密标准（Advanced Encryption Standard，AES）</strong>，它支持128位、192位和256位的密钥长度</p>
<p><strong>128</strong>：<strong>密钥长度</strong> 指定为 <strong>128位</strong></p>
<p><strong>CTR</strong>：<strong>分组密码工作模式</strong> 是 <strong>计数器模式（Counter Mode, CTR）</strong></p>
<hr>
<h4 id="固定密钥长度-分组加密算法"><a href="#固定密钥长度-分组加密算法" class="headerlink" title="固定密钥长度 分组加密算法"></a>固定密钥长度 分组加密算法</h4><p>一个固定密钥长度的分组加密算法参数通常由两部分组成，<strong>对称加密算法</strong> - <strong>分组密码工作模式</strong>。</p>
<p>举个例子：<code>SM4-CFB</code></p>
<p><strong>SM4</strong>：<strong>对称加密算法</strong> 为 <strong>商密-4</strong>，它的 <strong>密钥长度默认固定为128位</strong></p>
<p><strong>CFB</strong>：<strong>分组密码工作模式</strong> 是 <strong>密文反馈模式（Cipher FeedBack，CFB）</strong></p>
<hr>
<h4 id="流密码"><a href="#流密码" class="headerlink" title="流密码"></a>流密码</h4><p>一个流密码的参数通常就是对称加密算法本身：<strong>对称加密算法</strong>。</p>
<p>举个例子：<code>Chacha20</code></p>
<p>Chacha20：<strong>对称加密算法</strong> 为 <strong>Chacha20</strong></p>
<hr>
<h4 id="默认ECB模式"><a href="#默认ECB模式" class="headerlink" title="默认ECB模式"></a>默认ECB模式</h4><p>当使用分组密码对称加密算法时不指定分组密码工作模式，OpenSSL将会默认使用 <strong>ECB模式</strong> 对文件进行加密。</p>
<p>举个例子：<code>BF</code></p>
<p><code>BF</code>：<strong>对称加密算法</strong> 为 <strong>Blowfish</strong>，默认分组密码工作模式是 <strong>电子密码本模式（Electronic CodeBlock)<strong>，注意，这一模式是</strong>不安全的</strong>。</p>
<hr>
<h3 id="对称加密算法-简单介绍"><a href="#对称加密算法-简单介绍" class="headerlink" title="对称加密算法 简单介绍"></a>对称加密算法 简单介绍</h3><hr>
<h4 id="AES"><a href="#AES" class="headerlink" title="AES"></a>AES</h4><p>高级加密标准（Advanced Encryption Standard，AES），NIST标准，原型是Rjindael，属于SPN密码。</p>
<p>目前世界上最流行的加密算法，具有高度的安全性、高度的兼容性、强大的性能和广泛的硬件加速支持，是绝大多数情况下对称加密算法的首选。密文分组128位，密钥长度可选128位，192位或256位，对应的SPN迭代轮次分别为10轮、12轮与14轮。</p>
<hr>
<h4 id="ARIA"><a href="#ARIA" class="headerlink" title="ARIA"></a>ARIA</h4><p>ARIA是韩国密码学研究者基于AES修改而来的一种SPN密码，原型是AES。</p>
<p>韩国用于取代AES而设计的加密算法，具有高度安全性和较好的性能，密文分组128位，密钥长度可选128位，192位或256位，对应的SPN迭代轮次分别是12轮、14轮和16轮。</p>
<hr>
<h4 id="BF（Blowfish）"><a href="#BF（Blowfish）" class="headerlink" title="BF（Blowfish）"></a>BF（Blowfish）</h4><p>Blowfish是<em>Bruce Schneier</em>设计的一种Feistel密码。</p>
<p>一个相对较老的对称加密算法，密文分组64位，密钥长度可选32-448位，迭代固定16轮。目前仍然具有能够接受的安全性，最优的密文分析只能破解4轮BF，或将14轮BF与伪随机序列区分开来。但由于密文分组仅有64位，研究表明可能存在生日攻击问题。作者Bruce Schneier本人建议使用TwoFish进行替代。</p>
<hr>
<h4 id="Camellia"><a href="#Camellia" class="headerlink" title="Camellia"></a>Camellia</h4><p>卡梅利亚（Camellia）是日本NTT和MEC设计的一款Feistel加密算法，其计算量和安全性基本与AES相当，名称意为“山茶”。</p>
<p>一个常见的加密算法，具有高度的安全性、较为广泛的支持、强大的性能，是AES的一种替代算法。密文分组128位，密钥长度可选128位、192位或256位，对应Feistel迭代轮次分别为18轮，24轮与24轮。</p>
<hr>
<h4 id="CAST-CAST5-CAST-128"><a href="#CAST-CAST5-CAST-128" class="headerlink" title="CAST &#x2F; CAST5 &#x2F; CAST-128"></a>CAST &#x2F; CAST5 &#x2F; CAST-128</h4><p>CAST是 <em>Carlisle Adams</em> 和 <em>Stafford Tavares</em> 设计的一款Feistel密码，在加拿大常用。</p>
<p>CAST5的密文分组为64位，密钥长度40-128位，步长8位。80位以下采用12轮迭代，80位及以上采用16轮迭代。被GPG，PGP和OpenSSL等支持。</p>
<hr>
<h4 id="Chacha20"><a href="#Chacha20" class="headerlink" title="Chacha20"></a>Chacha20</h4><p>Chacha20是Daniel Julius Bernstein设计的一种流密码算法，是Salsa20的改进版本。</p>
<p>Chacha20采用128位或256位密钥，ARX结构，512位状态位和20轮重复，具有高度的安全性。由于Chacha20是流密码算法，因此具有低延迟、高性能、算力需求低的优点，适合在移动设备上、ARM架构处理器与嵌入式设备上使用。常常与Poly1305校验码一同使用。</p>
<hr>
<h4 id="DES"><a href="#DES" class="headerlink" title="DES"></a>DES</h4><p>数据加密标准（Data Encryption Standard, DES），上古加密算法，上世纪70年代由DES开发，已经过时。</p>
<p>DES采用56位密钥和64位密文分组，Feistel结构16轮迭代。在目前的算力下，蛮力攻击（穷举法）攻破DES已经成为可能。线性分析和选择明文攻击均能有效削弱DES的安全性。</p>
<hr>
<h4 id="DES-EDE-DES3-（3DES）"><a href="#DES-EDE-DES3-（3DES）" class="headerlink" title="DES-EDE &#x2F; DES3 （3DES）"></a>DES-EDE &#x2F; DES3 （3DES）</h4><p>三重数据加密标准（Triple Data Encryption Standard, 3DES）或DES-EDE（Data Encryption Standard - Encryption Decryption Encryption）是对DES的加强，通过三个使用不同密钥的DES分别对原始数据进行加密、解密、加密得到密文（密钥选项1），将密钥空间扩展到2^168^，但由于中途相遇攻击，其安全性实际为2^112^。</p>
<p>当然，也存在K2 &#x3D; K1（密钥选项2）和K3 &#x3D; K2 &#x3D; K1（密钥选项3）的3DES版本。其中，根据NIST的评估，密钥选项2的有效安全性仅有约2^80^，而密钥选项3明显不合理，第二轮解密和第一轮加密直接抵消，因此相当于DES。密钥选项2与密钥选项3均已经弃用。目前的3DES或DES-EDE默认使用密钥选项1。</p>
<p>3DES对于目前的算力和密码分析手段仍然属于安全的，但是其性能和理论安全性仍然弱于AES。其主要优势在于能与支持DES的老式通信系统兼容。如有可能，应尽量升级到AES。</p>
<hr>
<h4 id="DESX"><a href="#DESX" class="headerlink" title="DESX"></a>DESX</h4><p>使用64位密钥的DES，其中仍然是56位用于加密，8位用于校验。不推荐。</p>
<hr>
<h4 id="IDEA"><a href="#IDEA" class="headerlink" title="IDEA"></a>IDEA</h4><p>国际数据加密算法（International Data Encryption Algorithm，IDEA），最早称为改良建议加密标准（Improved Proposed Encryption Standard，IPES），是1991年提出的一种Feistel密码。</p>
<p>IDEA的密文分组长度为64位，密钥长度为128位，迭代轮次为8.5。目前IDEA被认为是一种不再安全的加密算法，尽管目前最优的攻击方式复杂度仍然来到2^126.1^，超过了目前的常规算力破解能力。（资料来源：维基百科）</p>
<hr>
<h4 id="RC2-ARC2"><a href="#RC2-ARC2" class="headerlink" title="RC2 &#x2F; ARC2"></a>RC2 &#x2F; ARC2</h4><p>RC2（Rivest Cipher 2）是Ron Rivest设计的基于不平衡Feistel结构的分组加密算法，目前已经过时，面对相关密钥攻击脆弱。</p>
<p>RC2的分组长度为64位，密钥长度1-128位。它采用16轮不平衡Feistel结构的混淆操作和2轮扰乱操作。</p>
<hr>
<h4 id="RC4-ARC4-ARCFOUR"><a href="#RC4-ARC4-ARCFOUR" class="headerlink" title="RC4 &#x2F; ARC4 &#x2F; ARCFOUR"></a>RC4 &#x2F; ARC4 &#x2F; ARCFOUR</h4><p>RC4（Rivest Cipher 4）是Ron Rivest设计的一种流密码，曾经非常流行，被广泛用于SSL和WPA等协议，但目前已经过时。</p>
<p>RC4采用40-2048位的密钥，以及2064位的状态位（1684个有效状态位）对数据进行加密，拥有很快的加密速度。但是它的密钥流能够被与伪随机序列区分开来。在2015年，比利时的密码研究员宣布了RC4的破解，能够在75小时内取得Cookie的内容。目前现代的密码学协议通常已经弃用RC4。</p>
<hr>
<h4 id="SEED"><a href="#SEED" class="headerlink" title="SEED"></a>SEED</h4><p>SEED是韩国KISA研发的一种Feistel密码。</p>
<p>SEED的密文分组为128位，密钥长度固定为128位，迭代轮数16轮，目前仍然具有较高的安全性。</p>
<hr>
<h4 id="SM4-SMS4"><a href="#SM4-SMS4" class="headerlink" title="SM4 &#x2F; SMS4"></a>SM4 &#x2F; SMS4</h4><p>SM4（商密-4）是中国国密算法系列中的对称加密算法，属于Feistel密码。</p>
<p>SM4的分组长度为128位，密钥长度固定为128位，采用非对称Feistel结构32轮迭代，具有很强的安全性和较高的性能，广泛用于中国标准WLAN WAPI和TLS。</p>
<hr>
<h2 id="基本加解密指令"><a href="#基本加解密指令" class="headerlink" title="基本加解密指令"></a>基本加解密指令</h2><hr>
<h3 id="简单的加密指令"><a href="#简单的加密指令" class="headerlink" title="简单的加密指令"></a>简单的加密指令</h3><p>一个最简单的加密文件的示例如下，该指令通过<code>AES-128-CTR</code>加密算法对<code>plaintext.txt</code>文件进行加密：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -e -AES-128-CTR -<span class="keyword">in</span> plaintext.txt -out ciphertext.txt</span><br></pre></td></tr></table></figure>

<p>OpenSSL此时会提醒你输入密码：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">enter AES-<span class="number">128</span>-CTR encryption password:</span><br></pre></td></tr></table></figure>

<p>输入密钥后，OpenSSL会提醒你输入确认密码：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">Verifying - enter AES-<span class="number">128</span>-CTR encryption password:</span><br></pre></td></tr></table></figure>

<p>如果确认密码与密码一致，那么文件将开始加密。但是，这种加密方式已经过时，OpenSSL此时会弹出提示：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">*** WARNING : deprecated key derivation used.</span><br><span class="line">Using -iter or -pbkdf2 would be better.</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="简单的解密指令"><a href="#简单的解密指令" class="headerlink" title="简单的解密指令"></a>简单的解密指令</h3><p>一个最简单的解密文件的示例如下，该指令尝试通过<code>AES-128-CTR</code>加密算法对<code>ciphertext.txt</code>文件进行解密：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -d -AES-128-CTR -<span class="keyword">in</span> ciphertext.txt -out decryptedtext.txt</span><br></pre></td></tr></table></figure>

<p>OpenSSL此时会提醒你输入密码：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">enter AES-<span class="number">128</span>-CTR decryption password:</span><br></pre></td></tr></table></figure>

<p>密码如果正确，OpenSSL将会解密文件。但它仍然会提醒你这种加密方式已经过时，会弹出提示：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">*** WARNING : deprecated key derivation used.</span><br><span class="line">Using -iter or -pbkdf2 would be better.</span><br></pre></td></tr></table></figure>

<h3 id="PBKDF2、迭代次数与盐"><a href="#PBKDF2、迭代次数与盐" class="headerlink" title="PBKDF2、迭代次数与盐"></a>PBKDF2、迭代次数与盐</h3><p>OpenSSL目前并不鼓励直接使用字符串作为密钥，而是推荐使用PBKDF2生成加密密钥。</p>
<p><code>openssl enc</code>有这两个KDF参数：</p>
<p><code>-PBKDF2</code>：PBKDF2（Password-Based Key Derivation Function 2）是一种密钥推到函数，它能够从用户提供的密码中推导出实际的加密密钥，能够有效增强密码安全性，避免爆破原始密码。</p>
<p><code>-iter</code>：迭代次数（Iterations）指定了PBKDF2的迭代轮数，迭代轮数越高，密码的安全性相对就越高，但也会消耗更多的计算资源。一般建议设置在80000以上。（建议来源：Bitwarden）</p>
<p><code>-salt</code>：盐（Salt）是一个随机生成的唯一值，它在每一轮迭代中与输入值连接在一起参加KDF迭代，进一步增加了彩虹表攻击和爆破的难度。这个选项是<strong>默认开启</strong>的。</p>
<h3 id="示例：使用PBKDF2与盐进行加解密"><a href="#示例：使用PBKDF2与盐进行加解密" class="headerlink" title="示例：使用PBKDF2与盐进行加解密"></a>示例：使用PBKDF2与盐进行加解密</h3><p>以下这条指令通过<code>AES-128-CTR</code>加密算法对<code>plaintext.txt</code>文件进行加密，使用加盐PBKDF2，迭代次数80000，输出文件为ciphertext.txt。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -e -AES-128-CTR -pbkdf2 -iter 80000 -salt -<span class="keyword">in</span> plaintext.txt -out ciphertext.txt</span><br></pre></td></tr></table></figure>

<p>以下这条指令通过<code>AES-128-CTR</code>加密算法对<code>ciphert.txt</code>文件进行解密，使用加盐PBKDF2，迭代次数80000，输出文件为decryptedtext.txt。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -d -AES-128-CTR -pbkdf2 -iter 80000 -salt -<span class="keyword">in</span> ciphertext.txt -out decryptedrtext.txt</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="总体选择参数"><a href="#总体选择参数" class="headerlink" title="总体选择参数"></a>总体选择参数</h2><hr>
<h3 id="help"><a href="#help" class="headerlink" title="-help"></a>-help</h3><p>陈列<code>OpenSSL enc</code>指令的帮助：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -h</span><br></pre></td></tr></table></figure>

<p>或：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -<span class="built_in">help</span></span><br></pre></td></tr></table></figure>

<p>它的输出如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Usage: enc [options]</span><br><span class="line"></span><br><span class="line">General options:</span><br><span class="line"> -<span class="built_in">help</span>               Display this summary</span><br><span class="line"> -list               List ciphers</span><br><span class="line"> -ciphers            Alias <span class="keyword">for</span> -list</span><br><span class="line"> -e                  Encrypt</span><br><span class="line"> -d                  Decrypt</span><br><span class="line"> -p                  Print the iv/key</span><br><span class="line"> -P                  Print the iv/key and <span class="built_in">exit</span></span><br><span class="line"> -engine val         Use engine, possibly a hardware device</span><br><span class="line"></span><br><span class="line">Input options:</span><br><span class="line"> -<span class="keyword">in</span> infile          Input file</span><br><span class="line"> -k val              Passphrase</span><br><span class="line"> -kfile infile       Read passphrase from file</span><br><span class="line"></span><br><span class="line">Output options:</span><br><span class="line"> -out outfile        Output file</span><br><span class="line"> -pass val           Passphrase <span class="built_in">source</span></span><br><span class="line"> -v                  Verbose output</span><br><span class="line"> -a                  Base64 encode/decode, depending on encryption flag</span><br><span class="line"> -<span class="built_in">base64</span>             Same as option -a</span><br><span class="line"> -A                  Used with -[<span class="built_in">base64</span>|a] to specify <span class="built_in">base64</span> buffer as a single line</span><br><span class="line"></span><br><span class="line">Encryption options:</span><br><span class="line"> -nopad              Disable standard block padding</span><br><span class="line"> -salt               Use salt <span class="keyword">in</span> the KDF (default)</span><br><span class="line"> -nosalt             Do not use salt <span class="keyword">in</span> the KDF</span><br><span class="line"> -debug              Print debug info</span><br><span class="line"> -bufsize val        Buffer size</span><br><span class="line"> -K val              Raw key, <span class="keyword">in</span> hex</span><br><span class="line"> -S val              Salt, <span class="keyword">in</span> hex</span><br><span class="line"> -iv val             IV <span class="keyword">in</span> hex</span><br><span class="line"> -md val             Use specified digest to create a key from the passphrase</span><br><span class="line"> -iter +int          Specify the iteration count and force the use of PBKDF2</span><br><span class="line">                     Default: 10000</span><br><span class="line"> -pbkdf2             Use password-based key derivation <span class="keyword">function</span> 2 (PBKDF2)</span><br><span class="line">                     Use -iter to change the iteration count from 10000</span><br><span class="line"> -none               Don<span class="string">&#x27;t encrypt</span></span><br><span class="line"><span class="string"> -*                  Any supported cipher</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Random state options:</span></span><br><span class="line"><span class="string"> -rand val           Load the given file(s) into the random number generator</span></span><br><span class="line"><span class="string"> -writerand outfile  Write random data to the specified file</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Provider options:</span></span><br><span class="line"><span class="string"> -provider-path val  Provider load path (must be before &#x27;</span>provider<span class="string">&#x27; argument if required)</span></span><br><span class="line"><span class="string"> -provider val       Provider to load (can be specified multiple times)</span></span><br><span class="line"><span class="string"> -propquery val      Property query used when fetching algorithms</span></span><br></pre></td></tr></table></figure>

<hr>
<h3 id="list-或-ciphers"><a href="#list-或-ciphers" class="headerlink" title="-list 或 -ciphers"></a>-list 或 -ciphers</h3><p>列出OpenSSL支持的对称加密算法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -list</span><br></pre></td></tr></table></figure>

<p>或：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -ciphers</span><br></pre></td></tr></table></figure>

<p>以OpenSSL 3.1.2版本为例，它的输出如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Supported ciphers:</span><br><span class="line">-aes-128-cbc               -aes-128-cfb               -aes-128-cfb1</span><br><span class="line">-aes-128-cfb8              -aes-128-ctr               -aes-128-ecb</span><br><span class="line">-aes-128-ofb               -aes-192-cbc               -aes-192-cfb</span><br><span class="line">-aes-192-cfb1              -aes-192-cfb8              -aes-192-ctr</span><br><span class="line">-aes-192-ecb               -aes-192-ofb               -aes-256-cbc</span><br><span class="line">-aes-256-cfb               -aes-256-cfb1              -aes-256-cfb8</span><br><span class="line">-aes-256-ctr               -aes-256-ecb               -aes-256-ofb</span><br><span class="line">-aes128                    -aes128-wrap               -aes192</span><br><span class="line">-aes192-wrap               -aes256                    -aes256-wrap</span><br><span class="line">-aria-128-cbc              -aria-128-cfb              -aria-128-cfb1</span><br><span class="line">-aria-128-cfb8             -aria-128-ctr              -aria-128-ecb</span><br><span class="line">-aria-128-ofb              -aria-192-cbc              -aria-192-cfb</span><br><span class="line">-aria-192-cfb1             -aria-192-cfb8             -aria-192-ctr</span><br><span class="line">-aria-192-ecb              -aria-192-ofb              -aria-256-cbc</span><br><span class="line">-aria-256-cfb              -aria-256-cfb1             -aria-256-cfb8</span><br><span class="line">-aria-256-ctr              -aria-256-ecb              -aria-256-ofb</span><br><span class="line">-aria128                   -aria192                   -aria256</span><br><span class="line">-bf                        -bf-cbc                    -bf-cfb</span><br><span class="line">-bf-ecb                    -bf-ofb                    -blowfish</span><br><span class="line">-camellia-128-cbc          -camellia-128-cfb          -camellia-128-cfb1</span><br><span class="line">-camellia-128-cfb8         -camellia-128-ctr          -camellia-128-ecb</span><br><span class="line">-camellia-128-ofb          -camellia-192-cbc          -camellia-192-cfb</span><br><span class="line">-camellia-192-cfb1         -camellia-192-cfb8         -camellia-192-ctr</span><br><span class="line">-camellia-192-ecb          -camellia-192-ofb          -camellia-256-cbc</span><br><span class="line">-camellia-256-cfb          -camellia-256-cfb1         -camellia-256-cfb8</span><br><span class="line">-camellia-256-ctr          -camellia-256-ecb          -camellia-256-ofb</span><br><span class="line">-camellia128               -camellia192               -camellia256</span><br><span class="line">-cast                      -cast-cbc                  -cast5-cbc</span><br><span class="line">-cast5-cfb                 -cast5-ecb                 -cast5-ofb</span><br><span class="line">-chacha20                  -des                       -des-cbc</span><br><span class="line">-des-cfb                   -des-cfb1                  -des-cfb8</span><br><span class="line">-des-ecb                   -des-ede                   -des-ede-cbc</span><br><span class="line">-des-ede-cfb               -des-ede-ecb               -des-ede-ofb</span><br><span class="line">-des-ede3                  -des-ede3-cbc              -des-ede3-cfb</span><br><span class="line">-des-ede3-cfb1             -des-ede3-cfb8             -des-ede3-ecb</span><br><span class="line">-des-ede3-ofb              -des-ofb                   -des3</span><br><span class="line">-des3-wrap                 -desx                      -desx-cbc</span><br><span class="line">-id-aes128-wrap            -id-aes128-wrap-pad        -id-aes192-wrap</span><br><span class="line">-id-aes192-wrap-pad        -id-aes256-wrap            -id-aes256-wrap-pad</span><br><span class="line">-id-smime-alg-CMS3DESwrap  -idea                      -idea-cbc</span><br><span class="line">-idea-cfb                  -idea-ecb                  -idea-ofb</span><br><span class="line">-rc2                       -rc2-128                   -rc2-40</span><br><span class="line">-rc2-40-cbc                -rc2-64                    -rc2-64-cbc</span><br><span class="line">-rc2-cbc                   -rc2-cfb                   -rc2-ecb</span><br><span class="line">-rc2-ofb                   -rc4                       -rc4-40</span><br><span class="line">-seed                      -seed-cbc                  -seed-cfb</span><br><span class="line">-seed-ecb                  -seed-ofb                  -sm4</span><br><span class="line">-sm4-cbc                   -sm4-cfb                   -sm4-ctr</span><br><span class="line">-sm4-ecb                   -sm4-ofb</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="e"><a href="#e" class="headerlink" title="-e"></a>-e</h3><p>加密指令，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -AES-128-CTR -e -pbkdf2 -iter 80000 -salt -<span class="keyword">in</span> plaintext.txt -out ciphertext.txt</span><br></pre></td></tr></table></figure>

<p>这条指令通过<code>AES-128-CTR</code>加密算法对<code>plaintext.txt</code>进行加密，输出到<code>ciphertext.txt</code>当中，密钥派生函数采用<code>PBKDF2</code>，迭代次数<code>80000</code>，加盐。</p>
<h3 id="d"><a href="#d" class="headerlink" title="-d"></a>-d</h3><p>解密指令，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -AES-128-CTR -d -pbkdf2 -iter 80000 -salt ciphertext.txt -out decrypted.txt</span><br></pre></td></tr></table></figure>

<p>这条指令通过<code>AES-128-CTR</code>加密算法对<code>ciphertext.txt</code>进行解密，输出到<code>decrypted.txt</code>当中，密钥派生函数采用<code>PBKDF2</code>，迭代次数<code>80000</code>，加盐。</p>
<h3 id="p-或-P"><a href="#p-或-P" class="headerlink" title="-p 或 -P"></a>-p 或 -P</h3><p>输出IV（Initialization Vector，初始化向量）和密钥，加盐也会输出盐值。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -p -AES-128-CTR -e -pbkdf2 -iter 80000 -salt -<span class="keyword">in</span> plaintext.txt -out ciphertext.txt</span><br></pre></td></tr></table></figure>

<p>它的输出为：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">salt=EEADC4C2FABA433D</span><br><span class="line">key=BD956B91B899D59A02DA992B65908A6F</span><br><span class="line">iv =<span class="number">6</span>AC35A79C1EE8C7192680E294696D279</span><br></pre></td></tr></table></figure>

<h3 id="engine"><a href="#engine" class="headerlink" title="-engine"></a>-engine</h3><p>指定加密引擎，一般来说并不需要这么做，除非你有特殊需求。</p>
<hr>
<h2 id="输入参数"><a href="#输入参数" class="headerlink" title="输入参数"></a>输入参数</h2><hr>
<h3 id="in"><a href="#in" class="headerlink" title="-in"></a>-in</h3><p>指定输入文档，例如<code>-in plaintext.txt</code>就是指以<code>plaintext.txt</code>文件作为输入。</p>
<hr>
<h3 id="k"><a href="#k" class="headerlink" title="-k"></a>-k</h3><p>指定加密密钥，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -e -AES-128-CTR -pbkdf2 -iter 80000 -salt -k your_awesome_password -<span class="keyword">in</span> plaintext.txt -out ciphertext.txt</span><br></pre></td></tr></table></figure>

<p>其中<code>-k your_awesome_password</code>就指定了初始密钥为”your_awesome_password”</p>
<hr>
<h3 id="kfile"><a href="#kfile" class="headerlink" title="-kfile"></a>-kfile</h3><p>从指定文件的第一行中导入密钥，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -e -AES-128-CTR -pbkdf2 -iter 80000 -salt -kfile your_awesome_password.bin -<span class="keyword">in</span> plaintext.txt -out ciphertext.txt</span><br></pre></td></tr></table></figure>

<p>其中<code>-kfile your_awesome_password.bin</code>就指定了初始密钥从<code>your_awesome_password.bin</code>这个文件的第一行中导入。</p>
<hr>
<h2 id="输出参数"><a href="#输出参数" class="headerlink" title="输出参数"></a>输出参数</h2><hr>
<h3 id="out"><a href="#out" class="headerlink" title="-out"></a>-out</h3><p>指定输出文档，例如<code>-out ciphertext.txt</code>就是指输出到<code>ciphertext.txt</code>这个文件中。如果没有这个文件，那么就新建。</p>
<hr>
<h3 id="pass"><a href="#pass" class="headerlink" title="pass"></a>pass</h3><p>指定密码的来源。</p>
<h4 id="直接在命令行中提供密码"><a href="#直接在命令行中提供密码" class="headerlink" title="直接在命令行中提供密码"></a>直接在命令行中提供密码</h4><p>例如这条命令，直接指定密码为<code>your_awesome_password</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -AES-128-CTR -e -pass pass:your_awesome_password -<span class="keyword">in</span> plaintext.txt -out ciphertext.txt</span><br></pre></td></tr></table></figure>

<h4 id="从文件中读取密码"><a href="#从文件中读取密码" class="headerlink" title="从文件中读取密码"></a>从文件中读取密码</h4><p>例如这条命令，从<code>password.txt</code>中的第一行读取密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -AES-128-CTR -e -pass file:password.txt -<span class="keyword">in</span> plaintext.txxt -out ciphertext.txt</span><br></pre></td></tr></table></figure>

<h4 id="使用环境变量提供密码"><a href="#使用环境变量提供密码" class="headerlink" title="使用环境变量提供密码"></a>使用环境变量提供密码</h4><p>例如这条命令，将尝试从系统的<code>OPENSSL_PASSWORD</code>环境变量读取密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -AES-128-CTR -e -pass <span class="built_in">env</span>:OPENSSL_PASSWORD -<span class="keyword">in</span> plaintext.txt -out ciphertext.txt</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="v"><a href="#v" class="headerlink" title="-v"></a>-v</h3><p>输出详细信息，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -v -e -AES-128-CTR -pbkdf2 -iter 80000 -salt -k your_awesome_password -<span class="keyword">in</span> plaintext.txt -out ciphertext.txt</span><br></pre></td></tr></table></figure>

<p>这是它的输出：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">bufsize=<span class="number">8192</span></span><br><span class="line">bytes read   :       <span class="number">64</span></span><br><span class="line">bytes written:       <span class="number">80</span></span><br></pre></td></tr></table></figure>

<hr>
<h3 id="a-或-base64"><a href="#a-或-base64" class="headerlink" title="-a 或 -base64"></a>-a 或 -base64</h3><p>Base64编解码选项，如果是加密则将输出进行Base64编码，如果是解密则对输入先进行Base64解码。</p>
<p>例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -<span class="built_in">base64</span> -e -AES-128-CTR -pbkdf2 -iter 80000 -salt -k your_awesome_password -<span class="keyword">in</span> plaintext.txt -out ciphertext.txt</span><br></pre></td></tr></table></figure>

<p>这样你就会得到Base64编码的输出，而不是一堆乱码了：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">U2FsdGVkX18mc9HLpslcxebFcULw/x3pPduiYwtum8dFM0AFH0h0o3Wri6K4LXVF</span><br><span class="line">HFj/F0SeXy4Ma3odakvf2oRuM8C4CGPHICzSq2/X830=</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="A"><a href="#A" class="headerlink" title="-A"></a>-A</h3><p>与<code>-a</code>或<code>-base64</code>一同使用，将Base64编码的缓冲区输出为单行文本。对于需要嵌入单行数据或者脚本的场景或许很有用。</p>
<p>例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -A -<span class="built_in">base64</span> -e -AES-128-CTR -pbkdf2 -iter 80000 -salt -k your_awesome_password -<span class="keyword">in</span> plaintext.txt -out ciphertext.txt</span><br></pre></td></tr></table></figure>

<p>得到的输出：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">U2FsdGVkX19CVxeyE43LfGZf9QR73J7HXEYgc2PmfcElfbIwwvrUS1VRrCfKUqjkL9k2ldAVxTXdmf0c41rluoMKY+On4rKwzRpZlY2Vv84=</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="加密选项"><a href="#加密选项" class="headerlink" title="加密选项"></a>加密选项</h2><hr>
<h3 id="nopad"><a href="#nopad" class="headerlink" title="-nopad"></a>-nopad</h3><p>禁用分组加密算法的块填充。此时如果数据长度不是分组大小的整数倍，可能会出错。</p>
<hr>
<h3 id="salt"><a href="#salt" class="headerlink" title="-salt"></a>-salt</h3><p>为KDF加盐，默认就是开启的。</p>
<p>例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -e -AES-128-CTR -pbkdf2 -iter 80000 -salt -<span class="keyword">in</span> plaintext.txt -out ciphertext.txt</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="nosalt"><a href="#nosalt" class="headerlink" title="-nosalt"></a>-nosalt</h3><p>手动指定KDF不使用盐，<strong>不推荐</strong>且<strong>不安全</strong>，这会削弱加密面对彩虹表攻击和爆破攻击的强度。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -e -AES-128-CTR -pbkdf2 -iter 80000 -nosalt -<span class="keyword">in</span> plaintext.txt -out ciphertext.txt</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="debug"><a href="#debug" class="headerlink" title="-debug"></a>-debug</h3><p>输出调试信息，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -e -debug -AES-128-CTR -pass pass:your_awesome_password -pbkdf2 -iter 80000 -salt -<span class="keyword">in</span> plaintext.txt -out ciphertext.txt</span><br></pre></td></tr></table></figure>

<p>一个示例输出是：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">in plaintext<span class="selector-class">.txt</span> -out ciphertext<span class="selector-class">.txt</span></span><br><span class="line">BIO<span class="selector-attr">[0x1e9bc5cf7f0]</span>: <span class="built_in">write</span>(<span class="number">0</span>,<span class="number">8</span>) - FILE pointer</span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5cf7f0]: write return <span class="number">1</span> processed: <span class="number">8</span></span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5cf7f0]: <span class="built_in">write</span>(<span class="number">0</span>,<span class="number">8</span>) - FILE pointer</span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5cf7f0]: write return <span class="number">1</span> processed: <span class="number">8</span></span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5e02a0]: <span class="built_in">ctrl</span>(<span class="number">6</span>) - cipher</span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5cf7f0]: <span class="built_in">ctrl</span>(<span class="number">6</span>) - FILE pointer</span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5cf7f0]: ctrl return <span class="number">0</span></span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5e02a0]: ctrl return <span class="number">0</span></span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5d0600]: <span class="built_in">ctrl</span>(<span class="number">10</span>) - FILE pointer</span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5d0600]: ctrl return <span class="number">0</span></span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5d0600]: <span class="built_in">ctrl</span>(<span class="number">2</span>) - FILE pointer</span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5d0600]: ctrl return <span class="number">0</span></span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5d0600]: <span class="built_in">read</span>(<span class="number">0</span>,<span class="number">8192</span>) - FILE pointer</span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5d0600]: read return <span class="number">1</span> processed: <span class="number">64</span></span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5e02a0]: <span class="built_in">write</span>(<span class="number">0</span>,<span class="number">64</span>) - cipher</span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5cf7f0]: <span class="built_in">write</span>(<span class="number">0</span>,<span class="number">64</span>) - FILE pointer</span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5cf7f0]: write return <span class="number">1</span> processed: <span class="number">64</span></span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5e02a0]: write return <span class="number">1</span> processed: <span class="number">64</span></span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5d0600]: <span class="built_in">ctrl</span>(<span class="number">10</span>) - FILE pointer</span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5d0600]: ctrl return <span class="number">0</span></span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5d0600]: <span class="built_in">ctrl</span>(<span class="number">2</span>) - FILE pointer</span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5d0600]: ctrl return <span class="number">1</span></span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5e02a0]: <span class="built_in">ctrl</span>(<span class="number">11</span>) - cipher</span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5cf7f0]: <span class="built_in">ctrl</span>(<span class="number">11</span>) - FILE pointer</span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5cf7f0]: ctrl return <span class="number">1</span></span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5e02a0]: ctrl return <span class="number">1</span></span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5d0600]: Free - FILE pointer</span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5cf7f0]: Free - FILE pointer</span><br><span class="line">BIO[<span class="number">0</span>x1e9bc5e02a0]: Free - cipher</span><br></pre></td></tr></table></figure>

<p>这其实是OpenSSL API给出的一些日志信息，其中涉及到C语言的操作，希望了解底层实现或者需要功能调试的可能会用到这个选项。</p>
<hr>
<h3 id="bufsize"><a href="#bufsize" class="headerlink" title="-bufsize"></a>-bufsize</h3><p>手动调整OpenSSL缓冲区的大小，这个值默认情况下是8192B，个人认为大多数情况下没必要修改。</p>
<p>更大的缓冲区在处理大文件时能减少IO次数，提升性能，但会引起更大的内存开销；更小的缓冲区处理小文件时能节省内存，但是处理大文件时IO次数会提高，性能会受到影响。</p>
<p>一个示例，把缓冲区修改为1024B：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -e -AES-128-CTR -pass pass:your_awesome_password -pbkdf2 -iter 80000 -salt -bufsize 1024 -<span class="keyword">in</span> plaintext.txt -out ciphertext.txt</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="K"><a href="#K" class="headerlink" title="-K"></a>-K</h3><p>手动指定初始密钥（Raw Key），绕过KDF。输入形式为16进制。必须与<code>-iv</code>一同使用。</p>
<p>（PS：个人观点，<strong>除非你十分清楚你在做什么，否则不建议这么做</strong>）</p>
<p>例如，将Raw Key手动覆盖为<code>dc76d65a6ccf7f33fd8ecb7fe640e272</code>，将IV手动覆盖为<code>12caf7e7136907d82c6a01a0e3b7fc16</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -e -AES-128-CTR -K dc76d65a6ccf7f33fd8ecb7fe640e272 -iv 12caf7e7136907d82c6a01a0e3b7fc16 -<span class="keyword">in</span> plaintext.txt -out ciphertext.txt</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="iv"><a href="#iv" class="headerlink" title="-iv"></a>-iv</h3><p>手动指定初始化向量（Initialization Vector, IV），绕过自带的IV发生器。输入形式为16进制。</p>
<p>（PS：个人观点，<strong>除非你十分清楚你在做什么，否则不建议这么做</strong>）</p>
<p>例如，将Raw Key手动覆盖为<code>dc76d65a6ccf7f33fd8ecb7fe640e272</code>，将IV手动覆盖为<code>12caf7e7136907d82c6a01a0e3b7fc16</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -e -AES-128-CTR -K dc76d65a6ccf7f33fd8ecb7fe640e272 -iv 12caf7e7136907d82c6a01a0e3b7fc16 -<span class="keyword">in</span> plaintext.txt -out ciphertext.txt</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="S"><a href="#S" class="headerlink" title="-S"></a>-S</h3><p>手动指定KDF的盐值（Salt），绕过自带的Salt发生器。输入形式为16进制。</p>
<p>（PS：个人观点，<strong>除非你十分清楚你在做什么，否则不建议这么做</strong>）</p>
<p>例如，将盐值手动覆盖为<code>4351431709882387</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -e -AES-128-CTR -pass pass:your_awesome_password -pbkdf2 -iter 80000 -salt -S 4351431709882387 -<span class="keyword">in</span> plaintext.txt -out ciphertext.txt</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="md"><a href="#md" class="headerlink" title="-md"></a>-md</h3><p>手动指定KDF使用的散列算法，绕过默认的散列算法。一般而言，没必要。</p>
<p>（PS：个人观点，<strong>除非你十分清楚你在做什么，否则不建议这么做</strong>）</p>
<p>例如，将散列算法手动修改为<code>SM3</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -e -AES-128-CTR -pass pass:your_awesome_password -pbkdf2 -iter 80000 -salt -md SM3 -<span class="keyword">in</span> plaintext.txt -out ciphertext.txt</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="iter"><a href="#iter" class="headerlink" title="-iter"></a>-iter</h3><p>手动指定KDF的迭代次数，覆盖默认的迭代次数（10000）。</p>
<p>例如，将KDF的迭代次数手动修改为<code>80000</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -e -AES-128-CTR -pass pass:your_awesome_password -pbkdf2 -iter 80000 -salt -<span class="keyword">in</span> plaintext.txt -out ciphertext.txt</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="pbkdf2"><a href="#pbkdf2" class="headerlink" title="-pbkdf2"></a>-pbkdf2</h3><p>使用PBKDF2来生成初始密钥，这是一种良好的安全实践：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -e -AES-128-CTR -pass pass:your_awesome_password -pbkdf2 -iter 80000 -salt -<span class="keyword">in</span> plaintext.txt -out ciphertext.txt</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="none"><a href="#none" class="headerlink" title="-none"></a>-none</h3><p>不进行加密，通常是调试时使用的。</p>
<hr>
<h2 id="随机状态选项"><a href="#随机状态选项" class="headerlink" title="随机状态选项"></a>随机状态选项</h2><hr>
<h3 id="rand"><a href="#rand" class="headerlink" title="-rand"></a>-rand</h3><p>将选定的文件加载到随机数生成器当中，提供额外的安全性。最好使用可靠的随机源，例如在Linux系统上：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -e -AES-128-CTR -pass pass:your_awesome_password -pbkdf2 -iter 80000 -salt -<span class="keyword">in</span> plaintext.txt -out ciphertext.txt -rand /dev/urandom</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="writerand"><a href="#writerand" class="headerlink" title="writerand"></a>writerand</h3><p>向选定的文件输出生成的随机数据。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl enc -e -AES-128-CTR -pass pass:your_awesome_password -pbkdf2 -iter 80000 -salt -<span class="keyword">in</span> plaintext.txt -out ciphertext.txt -writerand random.txt</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Tech</category>
        <category>Crypto</category>
      </categories>
      <tags>
        <tag>OpenSSL</tag>
        <tag>Crypto</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenSSL CLI 散列函数 个人使用经验</title>
    <url>/2023/11/06/OpenSSL-CLI-%E6%95%A3%E5%88%97%E5%87%BD%E6%95%B0-%E4%B8%AA%E4%BA%BA%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一篇简单的OpenSSL 散列使用经验，偶尔更新。</p>
<span id="more"></span>

<hr>
<h2 id="获取帮助"><a href="#获取帮助" class="headerlink" title="获取帮助"></a>获取帮助</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl dgst -h</span><br></pre></td></tr></table></figure>

<p>输出如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Usage: dgst [options] [file...]</span><br><span class="line"></span><br><span class="line">General options:</span><br><span class="line"> -<span class="built_in">help</span>               Display this summary</span><br><span class="line"> -list               List digests</span><br><span class="line"> -engine val         Use engine e, possibly a hardware device</span><br><span class="line"> -engine_impl        Also use engine given by -engine <span class="keyword">for</span> digest operations</span><br><span class="line"> -passin val         Input file pass phrase <span class="built_in">source</span></span><br><span class="line"></span><br><span class="line">Output options:</span><br><span class="line"> -c                  Print the digest with separating colons</span><br><span class="line"> -r                  Print the digest <span class="keyword">in</span> coreutils format</span><br><span class="line"> -out outfile        Output to filename rather than stdout</span><br><span class="line"> -keyform format     Key file format (ENGINE, other values ignored)</span><br><span class="line"> -hex                Print as hex dump</span><br><span class="line"> -binary             Print <span class="keyword">in</span> binary form</span><br><span class="line"> -xoflen +int        Output length <span class="keyword">for</span> XOF algorithms. To obtain the maximum security strength <span class="built_in">set</span> this to 32 (or greater) <span class="keyword">for</span> SHAKE128, and 64 (or greater) <span class="keyword">for</span> SHAKE256</span><br><span class="line"> -d                  Print debug info</span><br><span class="line"> -debug              Print debug info</span><br><span class="line"></span><br><span class="line">Signing options:</span><br><span class="line"> -sign val           Sign digest using private key</span><br><span class="line"> -verify val         Verify a signature using public key</span><br><span class="line"> -prverify val       Verify a signature using private key</span><br><span class="line"> -sigopt val         Signature parameter <span class="keyword">in</span> n:v form</span><br><span class="line"> -signature infile   File with signature to verify</span><br><span class="line"> -hmac val           Create hashed MAC with key</span><br><span class="line"> -mac val            Create MAC (not necessarily HMAC)</span><br><span class="line"> -macopt val         MAC algorithm parameters <span class="keyword">in</span> n:v form or key</span><br><span class="line"> -*                  Any supported digest</span><br><span class="line"> -fips-fingerprint   Compute HMAC with the key used <span class="keyword">in</span> OpenSSL-FIPS fingerprint</span><br><span class="line"></span><br><span class="line">Random state options:</span><br><span class="line"> -rand val           Load the given file(s) into the random number generator</span><br><span class="line"> -writerand outfile  Write random data to the specified file</span><br><span class="line"></span><br><span class="line">Provider options:</span><br><span class="line"> -provider-path val  Provider load path (must be before <span class="string">&#x27;provider&#x27;</span> argument <span class="keyword">if</span> required)</span><br><span class="line"> -provider val       Provider to load (can be specified multiple <span class="built_in">times</span>)</span><br><span class="line"> -propquery val      Property query used when fetching algorithms</span><br><span class="line"></span><br><span class="line">Parameters:</span><br><span class="line"> file                Files to digest (optional; default is stdin)</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="计算文件摘要"><a href="#计算文件摘要" class="headerlink" title="计算文件摘要"></a>计算文件摘要</h2><p>这是<code>openssl dgst</code>中最简单也是最常见的命令，例如计算一个文件的SHA-256摘要：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl dgst -SHA-256 _config.yml</span><br></pre></td></tr></table></figure>

<p>此命令通过SHA-256散列算法计算当前工作目录下<code>_config.yml</code>文件的摘要，这是它的输出：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SHA2-256(_config.yml)= 10d90acf0a106d5258830937cf59bb8ecc3078c91efaecccd2212b9a8b93f98b</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="列出散列算法"><a href="#列出散列算法" class="headerlink" title="列出散列算法"></a>列出散列算法</h2><p>OpenSSL可以使用以下指令列出其支持的散列算法，根据版本而异：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl dgst -list</span><br></pre></td></tr></table></figure>

<p>个人使用的OpenSSL是3.1.2，它的输出如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Supported digests:</span><br><span class="line">-blake2b512                -blake2s256                -md4</span><br><span class="line">-md5                       -md5-sha1                  -mdc2</span><br><span class="line">-ripemd                    -ripemd160                 -rmd160</span><br><span class="line">-sha1                      -sha224                    -sha256</span><br><span class="line">-sha3-224                  -sha3-256                  -sha3-384</span><br><span class="line">-sha3-512                  -sha384                    -sha512</span><br><span class="line">-sha512-224                -sha512-256                -shake128</span><br><span class="line">-shake256                  -sm3                       -ssl3-md5</span><br><span class="line">-ssl3-sha1                 -whirlpool</span><br></pre></td></tr></table></figure>

<h3 id="散列算法简单介绍"><a href="#散列算法简单介绍" class="headerlink" title="散列算法简单介绍"></a>散列算法简单介绍</h3><h4 id="BLAKE2B-512"><a href="#BLAKE2B-512" class="headerlink" title="BLAKE2B-512"></a>BLAKE2B-512</h4><p>基于Chacha20的一种非常强大的散列函数，强度超过SHA-2，接近SHA-3，同时运行效率超过SHA-3，输出为512位。</p>
<h4 id="BLAKE2S-256"><a href="#BLAKE2S-256" class="headerlink" title="BLAKE2S-256"></a>BLAKE2S-256</h4><p>基于Chacha20的一种非常强大的散列函数，强度超过SHA-2，接近SHA-3，同时运行效率超过SHA-3，输出为256位。</p>
<h4 id="MD4"><a href="#MD4" class="headerlink" title="MD4"></a>MD4</h4><p>Ron Rivest设计的一种散列函数，输出128位，已经被证明存在碰撞。</p>
<h4 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a>MD5</h4><p>Ron Rivest设计的一种散列函数，输出128位，已经被证明存在碰撞。虽然非常常用，但是已经过时。</p>
<h4 id="SSL3-MD5"><a href="#SSL3-MD5" class="headerlink" title="SSL3-MD5"></a>SSL3-MD5</h4><p>就是MD5。</p>
<h4 id="MD5-SHA-1"><a href="#MD5-SHA-1" class="headerlink" title="MD5-SHA-1"></a>MD5-SHA-1</h4><p>一种双重散列，计算MD5值的SHA-1摘要以避免这两个算法各自的弱点。个人觉得不如SHA-256，这个用法也不常见。</p>
<h4 id="MDC-2"><a href="#MDC-2" class="headerlink" title="MDC-2"></a>MDC-2</h4><p>基于分组密码的一种散列函数，输出取决于底层使用的分组密码。</p>
<h4 id="RIPEMD"><a href="#RIPEMD" class="headerlink" title="RIPEMD"></a>RIPEMD</h4><p>基于MD4设计的一种散列算法，输出默认为160位，不常见，并且存在碰撞。</p>
<h4 id="RIPEMD-160"><a href="#RIPEMD-160" class="headerlink" title="RIPEMD-160"></a>RIPEMD-160</h4><p>RIPEMD的160位版本，也就是默认实现。</p>
<h4 id="RMD-160"><a href="#RMD-160" class="headerlink" title="RMD-160"></a>RMD-160</h4><p>就是RIPEMD-160。</p>
<h4 id="SHA-1"><a href="#SHA-1" class="headerlink" title="SHA-1"></a>SHA-1</h4><p>NIST发布的一个早期散列算法，输出为160位，极为常见，虽然安全性比MD5要高一些，但仍然存在碰撞和前缀冲突攻击。</p>
<h4 id="SSL3-SHA-1"><a href="#SSL3-SHA-1" class="headerlink" title="SSL3-SHA-1"></a>SSL3-SHA-1</h4><p>就是SHA-1。</p>
<h4 id="SHA-224"><a href="#SHA-224" class="headerlink" title="SHA-224"></a>SHA-224</h4><p>NIST SHA-2散列算法标准之一，采用SHA-256不同的初始值并截断输出而来，输出224位。安全性强大。</p>
<h4 id="SHA-256"><a href="#SHA-256" class="headerlink" title="SHA-256"></a>SHA-256</h4><p>NIST SHA-2散列算法标准之一，最为常见的散列函数之一，输出256位，安全性强大，常用于HMAC、文件校验等。</p>
<h4 id="SHA-384"><a href="#SHA-384" class="headerlink" title="SHA-384"></a>SHA-384</h4><p>NIST SHA-2散列算法标准之一，采用SHA-512不同的初始值并截断输出而来，输出384位，安全性强大。</p>
<h4 id="SHA-512"><a href="#SHA-512" class="headerlink" title="SHA-512"></a>SHA-512</h4><p>NIST SHA-2散列算法标准之一，最为常见的散列函数之一，输出512位，安全性强大，常用于HMAC、文件校验等。</p>
<h4 id="SHA-512-224"><a href="#SHA-512-224" class="headerlink" title="SHA-512-224"></a>SHA-512-224</h4><p>把SHA-512的输出截断为224位得到，常用于HMAC。</p>
<h4 id="SHA-512-256"><a href="#SHA-512-256" class="headerlink" title="SHA-512-256"></a>SHA-512-256</h4><p>把SHA-512的输出截断为256位得到，常用于HMAC。</p>
<h4 id="SHA-3-224"><a href="#SHA-3-224" class="headerlink" title="SHA-3-224"></a>SHA-3-224</h4><p>NIST SHA-3散列算法标准之一，可用于替换SHA-224，输出224位。SHA-3通常被认为比SHA-2更安全。</p>
<h4 id="SHA-3-256"><a href="#SHA-3-256" class="headerlink" title="SHA-3-256"></a>SHA-3-256</h4><p>NIST SHA-3散列算法标准之一，可用于替换SHA-256，输出256位。SHA-3通常被认为比SHA-2更安全。</p>
<h4 id="SHA-3-384"><a href="#SHA-3-384" class="headerlink" title="SHA-3-384"></a>SHA-3-384</h4><p>NIST SHA-3散列算法标准之一，可用于替换SHA-384，输出384位。SHA-3通常被认为比SHA-2更安全。</p>
<h4 id="SHA-3-384-1"><a href="#SHA-3-384-1" class="headerlink" title="SHA-3-384"></a>SHA-3-384</h4><p>NIST SHA-3散列算法标准之一，可用于替换SHA-512，输出512位。SHA-3通常被认为比SHA-2更安全。</p>
<h4 id="SHAKE-128"><a href="#SHAKE-128" class="headerlink" title="SHAKE-128"></a>SHAKE-128</h4><p>NIST SHA-3散列算法标准之一，输出可扩展，默认128位。</p>
<h4 id="SHAKE-256"><a href="#SHAKE-256" class="headerlink" title="SHAKE-256"></a>SHAKE-256</h4><p>NIST SHA-3散列算法标准之一，输出可扩展，默认256位。</p>
<h4 id="SM3"><a href="#SM3" class="headerlink" title="SM3"></a>SM3</h4><p>国密算法散列函数，输出256位，设计方面强度对标SHA-256，安全性可靠，但并未经过广泛验证，使用场景有限。</p>
<h4 id="Whirlpool"><a href="#Whirlpool" class="headerlink" title="Whirlpool"></a>Whirlpool</h4><p>一个基于大幅修改的AES结构的散列算法，输出512位，安全性非常强大。</p>
<hr>
<h2 id="输出选项说明"><a href="#输出选项说明" class="headerlink" title="输出选项说明"></a>输出选项说明</h2><h3 id="c"><a href="#c" class="headerlink" title="-c"></a>-c</h3><p>通过冒号，逐字节分隔16进制输出，两个十六进制数为一组，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl dgst -SHA-256 -c _config.yml</span><br></pre></td></tr></table></figure>

<p>输出如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SHA2-256(_config.yml)= 10:d9:0a:cf:0a:10:6d:52:58:83:09:37:cf:59:bb:8e:cc:30:78:c9:1e:fa:ec:cc:d2:21:2b:9a:8b:93:f9:8b</span><br></pre></td></tr></table></figure>

<h3 id="r"><a href="#r" class="headerlink" title="-r"></a>-r</h3><p>以Coreutils格式打印摘要，使其更容易与GNU工具集成，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl dgst -SHA-256 -r _config.yml</span><br></pre></td></tr></table></figure>

<p>输出如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">10d90acf0a106d5258830937cf59bb8ecc3078c91efaecccd2212b9a8b93f98b *_config.yml</span><br></pre></td></tr></table></figure>

<h3 id="out-outfile"><a href="#out-outfile" class="headerlink" title="-out outfile"></a>-out outfile</h3><p>将摘要输出到一个文件中，而非stdout，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl dgst -SHA-256 -out hash.txt _config.yml</span><br></pre></td></tr></table></figure>

<p>摘要值将被输出到<code>hash.txt</code>文件当中。</p>
<h3 id="keyform-format"><a href="#keyform-format" class="headerlink" title="-keyform format"></a>-keyform format</h3><p>指定密钥文件格式，可以接受PEM, DER, ENG等格式，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl dgst -SHA-256 -sign private_key.pem -keyform PEM -out signature,bin data.txt</span><br></pre></td></tr></table></figure>

<h3 id="hex"><a href="#hex" class="headerlink" title="-hex"></a>-hex</h3><p>以16进制输出摘要，这个是默认行为，一般来说不加也是这样，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl dgst -SHA-256 _config.yml</span><br></pre></td></tr></table></figure>

<p>和</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl dgst -SHA-256 -hex _config.yml</span><br></pre></td></tr></table></figure>

<p>它们的输出一样：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SHA2-256(_config.yml)= 10d90acf0a106d5258830937cf59bb8ecc3078c91efaecccd2212b9a8b93f98b</span><br></pre></td></tr></table></figure>

<h3 id="binary"><a href="#binary" class="headerlink" title="-binary"></a>-binary</h3><p>以二进制输出摘要，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl dgst -SHA-256 -binary _config.yml</span><br></pre></td></tr></table></figure>

<p>此时一般会看到一团乱码，因为它会尝试以UTF-8之类的字符集进行解析：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">??mRX?7蟉粠?x?桃!+殝擓</span><br></pre></td></tr></table></figure>

<p>可以尝试把它输出到文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl dgst -SHA-256 -binary -out hash.bin _config.yml</span><br></pre></td></tr></table></figure>

<h3 id="xoflen-int"><a href="#xoflen-int" class="headerlink" title="-xoflen +int"></a>-xoflen +int</h3><p>对于可扩展输出函数（eXtendable-Output Functions)，例如SHAKE-128，SHAKE-256等，指定其输出长度。</p>
<p>例如，这是默认的SHAKE-128：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl dgst -SHAKE-128 _config.yml</span><br></pre></td></tr></table></figure>

<p>它的输出为128位：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SHAKE-128(_config.yml)= 963197743bcc929737752110337fffd9</span><br></pre></td></tr></table></figure>

<p>使用<code>xoflen +int</code>用户可以随意地调节它的输出字节数，对于SHAKE-128而言至多32字节（256位），对于SHAKE-256而言至多64字节（512位）。</p>
<p>例如，将输出调节为24字节（192位）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl dgst -SHAKE-128 -xoflen 24 _config.yml</span><br></pre></td></tr></table></figure>

<p>输出如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SHAKE-128(_config.yml)= 963197743bcc929737752110337fffd9662119d7a9b5c158</span><br></pre></td></tr></table></figure>

<p>将输出调节为32字节（256位）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl dgst -SHAKE-128 -xoflen 32 _config.yml</span><br></pre></td></tr></table></figure>

<p>输出如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SHAKE-128(_config.yml)= 963197743bcc929737752110337fffd9662119d7a9b5c1589e93f9295bf8087a</span><br></pre></td></tr></table></figure>

<h3 id="d-或-debug"><a href="#d-或-debug" class="headerlink" title="-d 或 -debug"></a>-d 或 -debug</h3><p>输出debug信息，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl dgst -SHA-256 -d _config.yml</span><br></pre></td></tr></table></figure>

<p>输出为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">BIO[0x1fd3574d080]: ctrl(6) - FILE pointer</span><br><span class="line">BIO[0x1fd3574d080]: ctrl <span class="built_in">return</span> 0</span><br><span class="line">BIO[0x1fd3574d080]: ctrl(108) - FILE pointer</span><br><span class="line">BIO[0x1fd3574d080]: ctrl <span class="built_in">return</span> 1</span><br><span class="line">BIO[0x1fd3574d080]: ctrl(10) - FILE pointer</span><br><span class="line">BIO[0x1fd3574d080]: ctrl <span class="built_in">return</span> 0</span><br><span class="line">BIO[0x1fd3574d080]: ctrl(2) - FILE pointer</span><br><span class="line">BIO[0x1fd3574d080]: ctrl <span class="built_in">return</span> 0</span><br><span class="line">BIO[0x1fd3574d080]: <span class="built_in">read</span>(0,8192) - FILE pointer</span><br><span class="line">BIO[0x1fd3574d080]: <span class="built_in">read</span> <span class="built_in">return</span> 1 processed: 3814</span><br><span class="line">BIO[0x1fd3574d080]: ctrl(10) - FILE pointer</span><br><span class="line">BIO[0x1fd3574d080]: ctrl <span class="built_in">return</span> 0</span><br><span class="line">BIO[0x1fd3574d080]: ctrl(2) - FILE pointer</span><br><span class="line">BIO[0x1fd3574d080]: ctrl <span class="built_in">return</span> 1</span><br><span class="line">SHA2-256(_config.yml)= 10d90acf0a106d5258830937cf59bb8ecc3078c91efaecccd2212b9a8b93f98b</span><br><span class="line">BIO[0x1fd3574d080]: ctrl(1) - FILE pointer</span><br><span class="line">BIO[0x1fd3574d080]: ctrl <span class="built_in">return</span> 0</span><br><span class="line">BIO[0x1fd3574d080]: Free - FILE pointer</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Tech</category>
        <category>Crypto</category>
      </categories>
      <tags>
        <tag>OpenSSL</tag>
        <tag>Crypto</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenSSL CLI 随机数生成器 个人使用经验</title>
    <url>/2023/11/14/OpenSSL-CLI-%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%94%9F%E6%88%90%E5%99%A8-%E4%B8%AA%E4%BA%BA%E4%BD%BF%E7%94%A8%E7%BB%8F%E9%AA%8C/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一篇简单的OpenSSL CLI 随机数生成器使用经验，不定期更新。</p>
<span id="more"></span>

<hr>
<h2 id="获取帮助"><a href="#获取帮助" class="headerlink" title="获取帮助"></a>获取帮助</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl rand -h</span><br></pre></td></tr></table></figure>

<p>输出如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Usage: rand [options] num</span><br><span class="line"></span><br><span class="line">General options:</span><br><span class="line"> -<span class="built_in">help</span>               Display this summary</span><br><span class="line"> -engine val         Use engine, possibly a hardware device</span><br><span class="line"></span><br><span class="line">Output options:</span><br><span class="line"> -out outfile        Output file</span><br><span class="line"> -<span class="built_in">base64</span>             Base64 encode output</span><br><span class="line"> -hex                Hex encode output</span><br><span class="line"></span><br><span class="line">Random state options:</span><br><span class="line"> -rand val           Load the given file(s) into the random number generator</span><br><span class="line"> -writerand outfile  Write random data to the specified file</span><br><span class="line"></span><br><span class="line">Provider options:</span><br><span class="line"> -provider-path val  Provider load path (must be before <span class="string">&#x27;provider&#x27;</span> argument <span class="keyword">if</span> required)</span><br><span class="line"> -provider val       Provider to load (can be specified multiple <span class="built_in">times</span>)</span><br><span class="line"> -propquery val      Property query used when fetching algorithms</span><br><span class="line"></span><br><span class="line">Parameters:</span><br><span class="line"> num                 Number of bytes to generate</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="生成随机数"><a href="#生成随机数" class="headerlink" title="生成随机数"></a>生成随机数</h2><p>一个最基本的OpenSSL rand指令大致是这样的：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl rand -hex 32</span><br></pre></td></tr></table></figure>

<p>这个指令让OpenSSL生成一个32字节（256位）的随机数，并以16进制的形式进行输出。</p>
<p>一个输出示例是这样：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="number">993500</span>b078f18f45a87176f27b75a836d55a674de4981eec9c3016b7c40adb81</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="总体选项"><a href="#总体选项" class="headerlink" title="总体选项"></a>总体选项</h2><hr>
<h3 id="help-或-h"><a href="#help-或-h" class="headerlink" title="-help 或 -h"></a>-help 或 -h</h3><p>获取帮助，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl rand -<span class="built_in">help</span></span><br></pre></td></tr></table></figure>

<p>或：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl rand -h</span><br></pre></td></tr></table></figure>

<p>个人使用的OpenSSL版本是3.1.2，它的输出如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Usage: rand [options] num</span><br><span class="line"></span><br><span class="line">General options:</span><br><span class="line"> -<span class="built_in">help</span>               Display this summary</span><br><span class="line"> -engine val         Use engine, possibly a hardware device</span><br><span class="line"></span><br><span class="line">Output options:</span><br><span class="line"> -out outfile        Output file</span><br><span class="line"> -<span class="built_in">base64</span>             Base64 encode output</span><br><span class="line"> -hex                Hex encode output</span><br><span class="line"></span><br><span class="line">Random state options:</span><br><span class="line"> -rand val           Load the given file(s) into the random number generator</span><br><span class="line"> -writerand outfile  Write random data to the specified file</span><br><span class="line"></span><br><span class="line">Provider options:</span><br><span class="line"> -provider-path val  Provider load path (must be before <span class="string">&#x27;provider&#x27;</span> argument <span class="keyword">if</span> required)</span><br><span class="line"> -provider val       Provider to load (can be specified multiple <span class="built_in">times</span>)</span><br><span class="line"> -propquery val      Property query used when fetching algorithms</span><br><span class="line"></span><br><span class="line">Parameters:</span><br><span class="line"> num                 Number of bytes to generate</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="engine"><a href="#engine" class="headerlink" title="engine"></a>engine</h3><p>使用指定的引擎来产生随机数。</p>
<p>你可以首先尝试使用OpenSSL的engine指令来查一下本机支持的引擎：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl engine -t</span><br></pre></td></tr></table></figure>

<p>如果你的机器是Intel CPU，那么一般会有RDRAND引擎，输出类似于这样：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">(rdrand) Intel RDRAND engine</span><br><span class="line">     <span class="selector-attr">[ available ]</span></span><br><span class="line">(dynamic) Dynamic engine loading support</span><br><span class="line">     <span class="selector-attr">[ unavailable ]</span></span><br></pre></td></tr></table></figure>

<p>那么此时你可以使用Intel的RDRAND引擎作为熵源之一来生成随机数，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl rand -engine rdrand -hex 32</span><br></pre></td></tr></table></figure>

<p>一个示例输出如下：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">Engine &quot;rdrand&quot; set.</span><br><span class="line"><span class="number">7</span>ad8327169d40997c58d350f7e03d6805b2de240303ab5501fe7081719e8e150</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="输出选项"><a href="#输出选项" class="headerlink" title="输出选项"></a>输出选项</h2><hr>
<h3 id="out"><a href="#out" class="headerlink" title="-out"></a>-out</h3><p>把生成的随机数据写入到指定的位置，例如，写入到<code>rand.bin</code>文件中：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl rand -out rand.bin 32</span><br></pre></td></tr></table></figure>

<p>它会向<code>rand.bin</code>写入32字节（256位）的随机数据。</p>
<hr>
<h3 id="base64"><a href="#base64" class="headerlink" title="-base64"></a>-base64</h3><p>输出以Base64进行编码，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl rand -<span class="built_in">base64</span> 32</span><br></pre></td></tr></table></figure>

<p>一个示例输出为：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">LyAhQ/wFwbvpAhibZUb1zUbQWyKQ/DNgjDO5A+cmgsI=</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="hex"><a href="#hex" class="headerlink" title="-hex"></a>-hex</h3><p>输出为16进制，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl rand -hex 32</span><br></pre></td></tr></table></figure>

<p>示例输出为：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">LyAhQ/wFwbvpAhibZUb1zUbQWyKQ/DNgjDO5A+cmgsI=</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="随机状态选项"><a href="#随机状态选项" class="headerlink" title="随机状态选项"></a>随机状态选项</h2><hr>
<h3 id="rand"><a href="#rand" class="headerlink" title="-rand"></a>-rand</h3><p>把指定的文件加入到随机数生成器的熵源当中，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl rand -<span class="built_in">base64</span> -rand rand.bin 32</span><br></pre></td></tr></table></figure>

<p>示例输出为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">VwphXVGWk+ImerchS+rlR6VCy6EFNuiqjV9NU88Ty1Y=</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="writerand"><a href="#writerand" class="headerlink" title="-writerand"></a>-writerand</h3><p>向指定文件写入随机数据，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl rand -writerand rand.bin 32</span><br></pre></td></tr></table></figure>

<p>它会向<code>rand.bin</code>写入32字节（256位）的随机数据。</p>
<hr>
<h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><h3 id="num"><a href="#num" class="headerlink" title="num"></a>num</h3><p>附在指令的最后，单位为字节，代表希望生成的随机数长度，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl rand 32</span><br></pre></td></tr></table></figure>

<p>这代表生成32字节（256位）的随机数。</p>
<hr>
]]></content>
      <categories>
        <category>Tech</category>
        <category>Crypto</category>
      </categories>
      <tags>
        <tag>OpenSSL</tag>
        <tag>Crypto</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>一个极简的BitTorrent使用教程</title>
    <url>/2024/09/23/%E4%B8%80%E4%B8%AA%E6%9E%81%E7%AE%80%E7%9A%84BitTorrent%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>本文是一篇完全面向技术小白的新手教程。</p>
<p>作为技术用户，阅读这篇文章可能导致你<strong>血压升高</strong>。请<strong>谨慎阅读</strong>。</p>
<span id="more"></span>

<hr>
<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p>请问你是否遇到过以下问题：</p>
<h3 id="磁力链接"><a href="#磁力链接" class="headerlink" title="磁力链接"></a>磁力链接</h3><p>群友在转发的聊天记录中包含了这样的一串看不懂的东西：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">magnet:?xt=urn:btih:93827283defcd6519e6ec7967048b6e8fae7f661</span><br></pre></td></tr></table></figure>

<p>把它输入浏览器后，却没有反应？</p>
<h3 id="种子文件"><a href="#种子文件" class="headerlink" title="种子文件"></a>种子文件</h3><p>你在下载某个资源之后，得到了这样一个文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">10e3d3b6a62b5698bdebb34f31bcd70389ee9a6a.torrent</span><br></pre></td></tr></table></figure>

<p>点击后却打不开，没办法解压，也找不到exe？</p>
<h3 id="求助方式"><a href="#求助方式" class="headerlink" title="求助方式"></a>求助方式</h3><p>你是否进行过类似的求助：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">可以私发我一份吗？</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">可以给个安装包吗？</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">解压密码是多少？</span><br></pre></td></tr></table></figure>



<p>不用担心，本期教程就是解决这些问题的。</p>
<hr>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>本教程<strong>不讲解原理</strong>，你只需要按照以下步骤进行<strong>操作</strong>，就可以获得磁力链接和种子文件指定的资源。</p>
<hr>
<h3 id="下载qBittorrent"><a href="#下载qBittorrent" class="headerlink" title="下载qBittorrent"></a>下载qBittorrent</h3><p>点击这个链接，下载qBittorrent。</p>
<p>注意选取对应的系统版本。对于大多数需要看这篇教程的用户，你的系统版本应该是<strong>Windows x64</strong> 。</p>
<p><a href="https://www.qbittorrent.org/download">qBittorrent Official Website</a></p>
<hr>
<h3 id="安装qBittorrent"><a href="#安装qBittorrent" class="headerlink" title="安装qBittorrent"></a>安装qBittorrent</h3><p>下载完成后，双击qBittorrent的安装包，跟着一步步安装qBittorrent。</p>
<p>接受许可协议。</p>
<p>勾选 创建桌面快捷方式。</p>
<p>点击安装。</p>
<hr>
<h3 id="使用qBittorrent"><a href="#使用qBittorrent" class="headerlink" title="使用qBittorrent"></a>使用qBittorrent</h3><p>打开qBittorrent，进入主界面。</p>
<hr>
<h3 id="磁力链接-下载"><a href="#磁力链接-下载" class="headerlink" title="磁力链接 下载"></a>磁力链接 下载</h3><p>要下载磁力链接指定的资源，点击qBittorrent界面左上角这个蓝色的小按钮。</p>
<img src="/2024/09/23/%E4%B8%80%E4%B8%AA%E6%9E%81%E7%AE%80%E7%9A%84BitTorrent%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/qBittorrentMagnet.png" class="" title="qBittorrentMagnet">

<p>把那串magnet开头的字符串复制进来，例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">magnet:?xt=urn:btih:93827283defcd6519e6ec7967048b6e8fae7f661</span><br></pre></td></tr></table></figure>

<p>点击下载，选择目录（你也可以不选择），然后点击确定。</p>
<p>资源就会逐渐下载到本地。</p>
<hr>
<h3 id="种子文件-下载"><a href="#种子文件-下载" class="headerlink" title="种子文件 下载"></a>种子文件 下载</h3><p>要下载种子文件指定的资源，点击qBittorrent界面左上角这个蓝色的小按钮。</p>
<img src="/2024/09/23/%E4%B8%80%E4%B8%AA%E6%9E%81%E7%AE%80%E7%9A%84BitTorrent%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/qBittorrentTorrent.png" class="" title="qBittorrentTorrent">

<p>在本地找到你之前拿到的.torrent文件，或者直接拖到qBittorrent的界面上也行。</p>
<p>可以选择目录，也可以不选择，点击确定。</p>
<p>资源就会逐渐下载到本地。</p>
<hr>
<h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><p>下载完毕后，记得关闭qBittorrent客户端。如果你不关闭，也是可以的，它会耗费你一些上传网络带宽，你可以理解为做了一项<strong>公益事业</strong>。</p>
<p>这样，磁力链接和种子文件对应的资源就下载到本地了，是不是很容易。</p>
<hr>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>本文用简单的语言介绍了如何使用qBittorrent下载磁力链接和种子文件对应的文件。</p>
]]></content>
      <categories>
        <category>Tech</category>
        <category>Network</category>
      </categories>
      <tags>
        <tag>Network</tag>
      </tags>
  </entry>
  <entry>
    <title>从零开始的小黄油制作—— Milovana EOS Editor教程（1） 账号注册与初识UI</title>
    <url>/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/</url>
    <content><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p><strong>EOS Editor</strong>是<strong>Milovana</strong>的一个Web UI，可以用于制作简单的互动小游戏。</p>
<p>本文主要介绍如何<strong>注册</strong>Milovana平台，以及简单介绍一下EOS Editor的<strong>用户界面（UI）</strong>。</p>
<span id="more"></span>

<p><a href="https://milovana.com/eos/editor">Milovana EOS Editor</a></p>
<p>本文参考了Milovana提供的教程，如果你的英语水平不错，也可以直接阅读这篇教程：</p>
<p><a href="https://milovana.com/forum/viewtopic.php?f=2&t=22570&p=277832#p277832">Here are EOS tutorials - Milovana.com</a></p>
<p>一个典型且成功的中文作品是<a href="https://x.com/luyinsama">鹭鸣有音 @luyinsama</a>制作的《鹭音大人的自慰挑战》。</p>
<p>（注：这个作品包含的倾向包括<strong>恋袜癖</strong>，<strong>恋足癖</strong>，<strong>气味癖</strong>，<strong>抖M</strong>，<strong>Sub</strong>，<strong>辱骂</strong>，<strong>寸止</strong>，<strong>污言</strong>等。尝试游玩前，最好先注意一下）</p>
<p><a href="https://milovana.com/webteases/showtease.php?id=70868">鹭音大人的自慰挑战 (milovana.com)</a></p>
<hr>
<h2 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h2><p>要制作Milovana Webtease，你需要<strong>注册</strong>一个Milovana账号。</p>
<p>这个平台注册是<strong>邀请制</strong>的，请注意。但不用担心，这个门槛仅仅是一些等待时间而已。</p>
<p><a href="https://milovana.com/editor">Milovana Editor</a></p>
<p>你需要一个<strong>邀请码</strong>，为了获得这个邀请码，需要进入一个subReddit的帖子（当然，没有Reddit先注册一个）：</p>
<p><a href="https://www.reddit.com/r/Milovana/comments/oyplke/invite_code_thread/">Invite code thread : r&#x2F;Milovana (reddit.com)</a></p>
<p>然后你只需要在回帖中发一个礼貌的请求就可以了，例如这样：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">Could <span class="selector-tag">I</span> have an invite <span class="selector-tag">code</span> please? <span class="selector-tag">I</span> like these EOS teases.</span><br></pre></td></tr></table></figure>

<p>过一段时间，Milovana的工作人员会给你回帖”Sent.”，并给你私信一个邀请码。</p>
<p>有了这个邀请码，就可以注册Milovana账号。注册后，就可以使用EOS开始尝试制作Webtease了。</p>
<p><a href="https://milovana.com/eos/editor">Milovana EOS Editor</a></p>
<hr>
<h2 id="用户界面（UI）"><a href="#用户界面（UI）" class="headerlink" title="用户界面（UI）"></a>用户界面（UI）</h2><p>这是EOS Editor UI左侧的侧边栏：</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/EOS-Left-Sidebar-Tools.png" class="" title="EOS-Left-Sidebar-Tools">

<hr>
<h3 id="Teases"><a href="#Teases" class="headerlink" title="Teases"></a>Teases</h3><p>Teases，可以查看你已经创建的Web Tease。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/Teases.png" class="" title="Teases">

<p>点击右下角的Create Tease按钮可以新建一个Tease：</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/createTeaseBtn.png" class="" title="createTeaseBtn">

<p>进入Create Tease的界面，记得勾选三个选项。</p>
<p>注意一下，<strong>出场角色必须年满18岁！</strong>，<strong>严禁儿童色情！</strong></p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/createTease.png" class="" title="createTease">

<hr>
<h3 id="Edit（编辑）"><a href="#Edit（编辑）" class="headerlink" title="Edit（编辑）"></a>Edit（编辑）</h3><p><strong>Edit（编辑）</strong>，这是制作过程中主要的工作台。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/Edit.png" class="" title="Edit">

<p>一个Tease是由多个<strong>Page（页面）</strong>组成，而一个Page是由多个<strong>Action（行为）</strong>组成的。</p>
<hr>
<h4 id="Add-Page（添加页面）"><a href="#Add-Page（添加页面）" class="headerlink" title="Add Page（添加页面）"></a>Add Page（添加页面）</h4><p>点击Add Page按钮，就可以新建一个Page：</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/addPage.png" class="" title="addPage">

<p>通常新建的第一个Page的名字就叫<strong>start</strong>，建议<strong>不要修改</strong>，因为<strong>每个Tease必须有一个start Page</strong>。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/editPage.png" class="" title="editPage">

<p>后续增加的Pages名称随便怎么改吧。我个人出于前端的惯例，是采用小驼峰命名法，例如<code>thisExample</code>, <code>edgeCountdown</code>, <code>mainPlotA1</code>这样。</p>
<p>稍微讲讲这里每一个按钮的作用。</p>
<hr>
<h4 id="Rename（重命名）"><a href="#Rename（重命名）" class="headerlink" title="Rename（重命名）"></a>Rename（重命名）</h4><p>对当前的Page进行重命名。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/renamePage.png" class="" title="rename">

<p>输入新的页面名，<strong>Save</strong>是保存，<strong>Cancel</strong>是取消。</p>
<hr>
<h4 id="Duplicate（创建副本）"><a href="#Duplicate（创建副本）" class="headerlink" title="Duplicate（创建副本）"></a>Duplicate（创建副本）</h4><p>创建一个当前页面的副本。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/duplicatePage.png" class="" title="duplicate">

<hr>
<h4 id="Delete（删除）"><a href="#Delete（删除）" class="headerlink" title="Delete（删除）"></a>Delete（删除）</h4><p>直接删除当前页面。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/deletePage.png" class="" title="delete">

<hr>
<h4 id="Preview（预览）"><a href="#Preview（预览）" class="headerlink" title="Preview（预览）"></a>Preview（预览）</h4><p>预览当前页面的效果。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/previewPage.png" class="" title="preview">

<hr>
<h4 id="Create-Action（创建行为）"><a href="#Create-Action（创建行为）" class="headerlink" title="Create Action（创建行为）"></a>Create Action（创建行为）</h4><p>在页面中创建行为。有两个按钮，哪个顺手按哪个，一样的。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/createAction1.png" class="" title="createAction1">

<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/createAction2.png" class="" title="createAction2">

<p><strong>行为（Action）</strong>构成了游戏的骨架和主体，非常重要。这个太多了，放到后面再讲。</p>
<hr>
<h3 id="Options（选项）"><a href="#Options（选项）" class="headerlink" title="Options（选项）"></a>Options（选项）</h3><p><strong>选项（Options）</strong>界面，其实主要是Tease的重命名、删除、功能选项。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/Options.png" class="" title="Options">

<hr>
<h4 id="Basic-Settings（基础设置）"><a href="#Basic-Settings（基础设置）" class="headerlink" title="Basic Settings（基础设置）"></a>Basic Settings（基础设置）</h4><p>Basic Settings主要是用于重命名和删除Tease。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/basicSettings.png" class="" title="basicSettings">

<hr>
<p><strong>重命名操作</strong>，只要单击当前Tease的标题即可进行修改。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/renameTease.png" class="" title="renameTease">

<p>输入重命名后的Tease名称，Rename是确认重命名，Cancel是取消。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/renameTeaseInput.png" class="" title="renameTeaseInput">

<hr>
<p><strong>删除操作</strong>，点击Delete Tease按钮。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/deleteTease.png" class="" title="deleteTease">

<p>此时会再次弹出一个确认删除界面，Cancel是取消，Delete是确认删除。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/deleteTeaseConfirm.png" class="" title="deleteTeaseConfirm">

<hr>
<h4 id="Init-Script（初始化脚本）"><a href="#Init-Script（初始化脚本）" class="headerlink" title="Init Script（初始化脚本）"></a>Init Script（初始化脚本）</h4><p>Init Script中编写的JavaScript脚本会在Tease开始后执行。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/initScript.png" class="" title="initScript">

<p>不用担心，这个功能其实不常用，通常不需要为了制作这个小游戏去系统性地学JavaScript。</p>
<p>一般来说，寸止、自慰指令、文字冒险、分支剧情的小游戏通常不需要这种东西。</p>
<p>当然，如果你的游戏涉及随机数、数学计算等，强烈建议学习一些JavaScript的基础知识，这是十分必要的。</p>
<hr>
<h4 id="Audio（音频）"><a href="#Audio（音频）" class="headerlink" title="Audio（音频）"></a>Audio（音频）</h4><p>Audio让你能够在游戏中加载和播放音频，创建Audio行为。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/Audio.png" class="" title="Audio">

<p>只要打开Enabled开关就可以用，在右上角。</p>
<hr>
<h4 id="Storage（存储）"><a href="#Storage（存储）" class="headerlink" title="Storage（存储）"></a>Storage（存储）</h4><p>Storage这个功能会创建一个teaseStorage，它有点类似于localStorage（如果你学过JavaScript就应该知道）。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/teaseStorage.png" class="" title="teaseStorage">

<p>它可以用来存储少量的键值对，这个可以用来制作积分、好感度之类的机制。</p>
<p>同样地，打开Enable开关就可以用，右上角。</p>
<hr>
<h4 id="Notification（通知）"><a href="#Notification（通知）" class="headerlink" title="Notification（通知）"></a>Notification（通知）</h4><p>Notification这个功能会创建一个一直悬浮的通知窗口，它不受Page切换的影响。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/Notification.png" class="" title="Notification">

<p>可以用来制作一些“我要去了”，“败北”之类的悬浮按钮，用来跳转。</p>
<p>一样，打开Enable开关就可以用，右上角。</p>
<hr>
<h3 id="Galleries（画廊）"><a href="#Galleries（画廊）" class="headerlink" title="Galleries（画廊）"></a>Galleries（画廊）</h3><p><strong>Galleries（画廊）</strong>主要用于暂存图片资源，以便在工作台中加载图片。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/Galleries.png" class="" title="Galleries">

<hr>
<h4 id="Add-Gallery（添加画廊）"><a href="#Add-Gallery（添加画廊）" class="headerlink" title="Add Gallery（添加画廊）"></a>Add Gallery（添加画廊）</h4><p>点击右下角的加号按钮可以创建一个Gallery。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/addGallery.png" class="" title="addGallery">

<p>输入你要创建的Gallery的名称，点击Create即可创建，Cancel是取消。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/addGalleryInput.png" class="" title="addGalleryInput">

<hr>
<h4 id="Upload（上传）"><a href="#Upload（上传）" class="headerlink" title="Upload（上传）"></a>Upload（上传）</h4><p>点击右下角的upload按钮即可上传图片文件。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/uploadToGallery.png" class="" title="uploadtoGallery">

<p>当然 你也可以直接把图片拖进这个页面中，也可以完成上传。</p>
<hr>
<h3 id="Files（文件）"><a href="#Files（文件）" class="headerlink" title="Files（文件）"></a>Files（文件）</h3><p><strong>Files</strong>用于存放其他文件。一般来说是音频文件，以便在工作台中加载。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/Files.png" class="" title="Files">

<p>同样，点击Upload，或者直接拖拽，都可以进行文件上传。</p>
<hr>
<h3 id="Preview（预览）-1"><a href="#Preview（预览）-1" class="headerlink" title="Preview（预览）"></a>Preview（预览）</h3><p>预览整个Tease的效果。预览是Debug模式，可以做出一些玩家无法进行的行为，例如跳过计时器等等，方便检查。</p>
<p>玩家在游玩过程中是无法进行这样的行为的，稍微注意一下。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/preview.png" class="" title="Preview">

<hr>
<h3 id="Backup（备份）"><a href="#Backup（备份）" class="headerlink" title="Backup（备份）"></a>Backup（备份）</h3><p>可以把做好的Tease存到本地，或者是把本地的Tease上传到Web UI上。可以用于交流创作，备份作品等等。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/Backup.png" class="" title="Backup">

<hr>
<h4 id="Download-Code（下载代码）"><a href="#Download-Code（下载代码）" class="headerlink" title="Download Code（下载代码）"></a>Download Code（下载代码）</h4><p>把当前的Tease转换为JSON代码的格式保存到本地。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/downloadCode.png" class="" title="downloadCode">

<hr>
<h4 id="Upload-Code（上传代码）"><a href="#Upload-Code（上传代码）" class="headerlink" title="Upload Code（上传代码）"></a>Upload Code（上传代码）</h4><p>把本地的JSON代码上传后转换成Web UI上的Tease。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/uploadCode.png" class="" title="uploadCode">

<hr>
<h3 id="Share（分享）"><a href="#Share（分享）" class="headerlink" title="Share（分享）"></a>Share（分享）</h3><p>可以把半成品，测试状态的Tease分享给其他人体验一下，但不算正式发布。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/Share.png" class="" title="Share">



<p>点击图标，复制链接即可进行分享：</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/shareLink.png" class="" title="shareLink">



<p>在浏览器中粘贴这条链接即可进行试玩——这次是玩家模式，不能再像预览的Debug模式那样做出一些越界行为了。</p>
<hr>
<h3 id="Publish（发布）"><a href="#Publish（发布）" class="headerlink" title="Publish（发布）"></a>Publish（发布）</h3><p>如果Webtease做好了，没有bug（有时候它会无故报错，记得刷新一下），就可以发布了。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/Publish.png" class="" title="Publish">



<p>输入你的作品描述后，点击Next，可以进行标签的选择：</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/Tagging.png" class="" title="Tagging">



<p>继续点击Next，可以上传或者在画廊中选择一张缩略图：</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/chooseThumbnail.png" class="" title="chooseThumbnail">



<p>最后点击Publish，即可发布。</p>
<hr>
<h3 id="Help（帮助）"><a href="#Help（帮助）" class="headerlink" title="Help（帮助）"></a>Help（帮助）</h3><p>Help页面有很多手把手的教程，如果你英语水平还不错，那自然是极好的。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%881%EF%BC%89%20%E8%B4%A6%E5%8F%B7%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%88%9D%E8%AF%86UI/Help.png" class="" title="Help">

<p>阅读帮助能帮你快速上手EOS Editor，比我这篇玩意高效得多。</p>
<hr>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>本文简单介绍了注册Milovana的过程，以及简单介绍了一下左侧侧边栏UI的功能。</p>
<p>可能略显冗长，包含了很多常识性甚至是宝宝巴士的内容，主要是为了照顾英语能力有限的人。</p>
<p>下一篇，主要讲解Edit界面的Action，主要是一些基础行为。</p>
]]></content>
      <categories>
        <category>Tech</category>
        <category>Web Front-End</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Interactive Fiction</tag>
        <tag>Web Front-End</tag>
      </tags>
  </entry>
  <entry>
    <title>从零开始的小黄油制作—— Milovana EOS Editor教程（3） 简单实战</title>
    <url>/2024/09/21/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%883%EF%BC%89%20%E7%AE%80%E5%8D%95%E5%AE%9E%E6%88%98/</url>
    <content><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>在介绍了注册、基本UI和基本行为机制后，其实已经可以制作一个简单的文游。</p>
<p>或者说，有些读者就很不喜欢看那些系统性介绍的长篇大论，就喜欢这种<strong>直接上手的实战</strong>教程——<strong>你™黄油呢？</strong>那么，它来了。</p>
<span id="more"></span>

<p>本文将制作一个简单版本的自慰寸止文游，它仅仅是作为一个示例，或者说作为一个PoC，也不一定真的有实际作用。</p>
<p>注意，通常而言，要做一个文游，要有一个<strong>想法</strong>，至少一套<strong>组图</strong>，一份<strong>大纲</strong>（最好是<strong>文案</strong>）。</p>
<p><strong>如果你很强</strong>，可以<strong>一边做一边想剧情一边码字</strong>。</p>
<p>本案例的试玩页面在这里：<a href="https://milovana.com/webteases/showtease.php?id=72496&key=1d7c89e390">镇海姐姐的自慰寸止挑战~</a></p>
<hr>
<h2 id="警告"><a href="#警告" class="headerlink" title="警告"></a>警告</h2><p>本次制作的寸止文游使用的素材和主题可能包括：</p>
<p><strong>#碧蓝航线，#镇海， #纯爱，#姐姐系，#年上， #巨乳， #轻度抖M，#恋物癖， #恋足癖，  #恋袜癖， #轻度气味癖，#自慰，#寸止，#轻微羞辱</strong>等等。</p>
<p>本文游仅仅是作为一个<strong>范例</strong>来讲，准确地说，读者在自己制作时<strong>完全可以采用不同的主题和素材</strong>。</p>
<p>本文旨在起到一个<strong>抛砖引玉</strong>的作用，以各位写手、文援、读者的创造力，完全可以做出<strong>好得多</strong>的文游。</p>
<p>（作者并不玩碧蓝航线，只是<strong>镇海</strong>这个角色皮肤特点比较统一，热度也不算很低，所以她的黑丝脚图相对好找一些，组图素材比较丰富）</p>
<img src="/2024/09/21/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%883%EF%BC%89%20%E7%AE%80%E5%8D%95%E5%AE%9E%E6%88%98/chenHaiPics.png" class="" title="chenHaiPics">

<p>（对于<strong>人设方面失真</strong>，<strong>背离原设</strong>的问题，实在是作者能力之外，抱歉）</p>
<hr>
<h2 id="创建文游"><a href="#创建文游" class="headerlink" title="创建文游"></a>创建文游</h2><p>第一步当然是要创建文游，来到Teases界面，点击Create Tease，创建一个新的Webtease。</p>
<img src="/2024/09/21/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%883%EF%BC%89%20%E7%AE%80%E5%8D%95%E5%AE%9E%E6%88%98/createTease.png" class="" title="createTease">

<p>起个标题吧，比如说我的标题是<code>镇海姐姐的自慰寸止挑战~</code>。</p>
<hr>
<h2 id="导入素材"><a href="#导入素材" class="headerlink" title="导入素材"></a>导入素材</h2><p>为了方便后续的制作，最好先把要用的素材导入一下。</p>
<h3 id="导入图片素材"><a href="#导入图片素材" class="headerlink" title="导入图片素材"></a>导入图片素材</h3><p>进入<strong>画廊（Galleries）</strong>，新建一个画廊。例如我的画廊就叫<code>Chen Hai</code>（镇海）。</p>
<img src="/2024/09/21/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%883%EF%BC%89%20%E7%AE%80%E5%8D%95%E5%AE%9E%E6%88%98/createGallery.png" class="" title="createGallery">

<p>通过拖动或者上传按钮，上传已经准备好的组图素材。</p>
<p>上传完成后，画廊里面应该已经存好了组图素材。此时就不用担心丢失的问题，之后调用也会方便得多。</p>
<img src="/2024/09/21/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%883%EF%BC%89%20%E7%AE%80%E5%8D%95%E5%AE%9E%E6%88%98/uploadToGallery.png" class="" title="uploadToGallery">

<hr>
<h3 id="导入音频素材"><a href="#导入音频素材" class="headerlink" title="导入音频素材"></a>导入音频素材</h3><p>进入<strong>文件（Files）</strong>，直接拖动或者通过上传按钮，上传已经准备好的音频素材。</p>
<p>这个音频素材通常是指节拍器音频，你可以用Google Metronome自己录制。</p>
<p>也可以从Milovana官方EOS教程那里拿到现成的节拍器音频文件（只不过个人不太喜欢这个音色）</p>
<p><a href="https://milovana.com/forum/download/file.php?id=23725">Metronome-Slow</a>,  <a href="https://milovana.com/forum/download/file.php?id=23724">Metronome-Fast</a>,  <a href="https://milovana.com/forum/download/file.php?id=23723">Metronome-Special</a></p>
<p>导入音频文件后，应该有一组备用的，BPM有一定梯度的节拍器可以使用。</p>
<img src="/2024/09/21/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%883%EF%BC%89%20%E7%AE%80%E5%8D%95%E5%AE%9E%E6%88%98/uploadToFiles.png" class="" title="uploadToFiles">

<p>这样可以利用<strong>同步计时器+节拍器</strong>的方式来限制或掌控用户的自慰频率，这对于M的用户而言可能带来一种支配感，会增强兴奋。</p>
<p>当然，用户也完全可以选择静音，按照他们自己的节奏来。</p>
<hr>
<h2 id="制作start页面"><a href="#制作start页面" class="headerlink" title="制作start页面"></a>制作start页面</h2><p>来到编辑（Edit）页面，Create Page，<strong>默认标题start</strong>，这个<strong>不建议改</strong>。start改了容易出bug。</p>
<img src="/2024/09/21/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%883%EF%BC%89%20%E7%AE%80%E5%8D%95%E5%AE%9E%E6%88%98/createStartPage.png" class="" title="createStartPage">

<hr>
<h3 id="背景图"><a href="#背景图" class="headerlink" title="背景图"></a>背景图</h3><p>Create Action，Image，然后选一张自己喜欢的图就可以了。</p>
<img src="/2024/09/21/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%883%EF%BC%89%20%E7%AE%80%E5%8D%95%E5%AE%9E%E6%88%98/selectImage.png" class="" title="selectImage">

<hr>
<h3 id="叠甲和警告"><a href="#叠甲和警告" class="headerlink" title="叠甲和警告"></a>叠甲和警告</h3><p>开头的交互其实没有什么好说的。只需要创建一堆Say，先叠一下甲，写几个警告，然后加一个选项来确认就可以。</p>
<p>这个很容易。通常就是R-18，网络侵删，Tag，不适请退出等等。</p>
<p>Timing模式就留Auto，反正开头用户不会上来直接导，可以交互的。</p>
<p>稍微注意一下，这个其实是重复，PC端UI的话，中文台本要从其他地方复制，好像是不能直接输入。</p>
<p>就类似于这样。</p>
<img src="/2024/09/21/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%883%EF%BC%89%20%E7%AE%80%E5%8D%95%E5%AE%9E%E6%88%98/startPage.png" class="" title="startPage">

<hr>
<h2 id="关键组件"><a href="#关键组件" class="headerlink" title="关键组件"></a>关键组件</h2><p>游戏过程的详细制作过程我就不一一介绍了，这个要讲完基本不现实，而且会重复啰嗦。</p>
<p>我就选取几个具有代表性的关键组件来讲解一下制作过程。</p>
<hr>
<h3 id="确认按钮"><a href="#确认按钮" class="headerlink" title="确认按钮"></a>确认按钮</h3><p>这个东西很简单，就一个Choice，单选，行为留空就可以了。它可以阻塞，所以用户点击之后游戏才能继续，但它自己没有行为，所以什么也不会发生。</p>
<p>举个例子，就像这样：</p>
<img src="/2024/09/21/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%883%EF%BC%89%20%E7%AE%80%E5%8D%95%E5%AE%9E%E6%88%98/confirmChoice.png" class="" title="confirmChoice">

<hr>
<h3 id="跳转按钮"><a href="#跳转按钮" class="headerlink" title="跳转按钮"></a>跳转按钮</h3><p>这个东西也很简单，一个Choice，单选，行为就Goto Page。点击后跳转到对应的页面。</p>
<p>类似于这种：</p>
<img src="/2024/09/21/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%883%EF%BC%89%20%E7%AE%80%E5%8D%95%E5%AE%9E%E6%88%98/jmpChoice.png" class="" title="jmpChoice">

<hr>
<h3 id="计时器-节拍器（无字幕）"><a href="#计时器-节拍器（无字幕）" class="headerlink" title="计时器+节拍器（无字幕）"></a>计时器+节拍器（无字幕）</h3><p>这个是一个主要的组件，它的构成是这样的：</p>
<img src="/2024/09/21/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%883%EF%BC%89%20%E7%AE%80%E5%8D%95%E5%AE%9E%E6%88%98/noSubtitleTimerMetronome.png" class="" title="noSubtitleTimerMetronome">

<p>一个Audio，播放音频，不阻塞。</p>
<p>一个Timer，计时，阻塞。</p>
<p>一个Eval，通过一行JS代码停止播放音频。</p>
<hr>
<h3 id="自动字幕"><a href="#自动字幕" class="headerlink" title="自动字幕"></a>自动字幕</h3><p>在节拍器音频打开，用户腾不出手的情况下，自动字幕可以优化用户的游玩体验。</p>
<p>这个东西很简单，Say的Timing设置为Custom，设置一个Duration（持续时间）即可。</p>
<p>是否允许用户跳过看你自己。</p>
<img src="/2024/09/21/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%883%EF%BC%89%20%E7%AE%80%E5%8D%95%E5%AE%9E%E6%88%98/sayCustom.png" class="" title="sayCustom">

<hr>
<h3 id="限时任务"><a href="#限时任务" class="headerlink" title="限时任务"></a>限时任务</h3><p>可以利用异步计时器的特性制作限时任务和分支。</p>
<p>具体而言就是，先打开一个异步计时器，计时器结束将会导致跳转到一个页面（例如：lose）</p>
<p>然后增加一个交互（例如Choice），如果玩家在计时器走完前点击这个选项，那么跳转到另一个页面（例如：edge3）</p>
<img src="/2024/09/21/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%883%EF%BC%89%20%E7%AE%80%E5%8D%95%E5%AE%9E%E6%88%98/asyncBranch.png" class="" title="asyncBranch">

<hr>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>本文通过几个关键组件的方式，简单介绍了一下如何制作一个简单的文游。</p>
<p>可能会有些粗略，但具体的内容，已经在前两篇EOS的文章里面讲清楚了。</p>
]]></content>
      <categories>
        <category>Tech</category>
        <category>Web Front-End</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Interactive Fiction</tag>
        <tag>Web Front-End</tag>
      </tags>
  </entry>
  <entry>
    <title>从零开始的小黄油制作—— Milovana EOS Editor教程（4） 进阶行为与JavaScript</title>
    <url>/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Milovana EOS Editor可以借助JavaScript来实现更具交互性的文游制作。</p>
<p>本文主要补充介绍之前没有讲的行为类型，功能类型，并通过少量案例介绍JavaScript在Milovana EOS Editor中的效果。</p>
<span id="more"></span>

<p>要看这篇东西的话，最好是稍微掌握一点点JavaScript基础，一点点就可以了。当然如果零基础，我也尽可能举例子讲清楚（但愿如此吧）。</p>
<p>由于Milovana EOS Editor基本只支持ES5，这严重影响了我的个人代码习惯（好吧，其实我也很菜），所以这个教程可能会写得很烂（搞得好像前面几篇不烂一样）。</p>
<p>可以用Webpack、ESBuild等工具来写ES6，然后把相应的代码转换成ES5（例如通过Babel）。这能避免折磨和代码习惯的改变。（其实代码量没那么大就是了）</p>
<p>EOS Editor的IntelliSense会对不少实际上能运行的代码报错，不用担心。<strong>写上去就是了，能不能跑自己试一下就行了。如果卡住加载不进去，就是不行（例如用了ES6特性什么的）。</strong></p>
<hr>
<h2 id="进阶行为"><a href="#进阶行为" class="headerlink" title="进阶行为"></a>进阶行为</h2><p>之前是怕劝退一些初学者（好吧，1和2两篇教程的介绍语言风格其实已经十分劝退），所以没有介绍一些比较复杂的行为，那么在这篇教程中，介绍一些之前遗漏的行为。</p>
<hr>
<h3 id="Disable"><a href="#Disable" class="headerlink" title="Disable"></a>Disable</h3><p><strong>Disable（禁用）</strong>某个页面，意味着它无法被随机跳转的Goto Action定位。也就是说，被Disable的页面将<strong>无法</strong>通过<strong>随机跳转</strong>的方式进入。</p>
<p>举个例子来说明一下。</p>
<p>这个案例包括三个Page，一个start，一个testPage1，一个testPage2。</p>
<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/disableStartPage.png" class="" title="disableStartPage">

<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/disableTestPage1.png" class="" title="disableTestPage1">

<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/disableTestPage2.png" class="" title="disableTestPage2">

<p>在start中，先通过Disable行为禁用testPage1。而后的一个Goto是跳转到<code>testPage*</code>，它理论上是定位到两个页面——testPage1和testPage2。但由于testPage1被禁用，所以最终只可能跳转到testPage2，出现的交互是Hello, testPage2!</p>
<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/disableResult.png" class="" title="disableResult">

<p>这个功能可以用来做一些隐藏结局，冒险解谜之类的东西。</p>
<p>当然，这个页面名同样是可以指定范围——<code>testPage*</code>这样。那这样就是把testPage*这一组页面全部禁用了。</p>
<hr>
<h3 id="Enable"><a href="#Enable" class="headerlink" title="Enable"></a>Enable</h3><p><strong>Enable（启用）</strong>就是反过来，把一些已经被禁用的页面重新启用，这样就可以随机跳转过去了。</p>
<p>页面本身默认就是Enabled状态，不用刻意去开启一遍。</p>
<hr>
<h3 id="Prompt"><a href="#Prompt" class="headerlink" title="Prompt"></a>Prompt</h3><p><strong>Prompt</strong>是一个交互动作，其实它很简单，弹出一个交互，让用户输入一个值，然后存储在一个变量当中。</p>
<p>它类似于这种，当然这是ES5，ES6就用let了：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> usrAge = <span class="title function_">prompt</span>(<span class="string">&quot;&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>Prompt行为的设置界面非常简单，就一个Variable，里面填的就是变量名。</p>
<p>一般是小驼峰（lowerCamelCase）命名法，注意规范。</p>
<p>（当然你要用UpperCamelCase或者snake_case也完全可以，当我没说）</p>
<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/promptEdit.png" class="" title="promptEdit">

<p>这里举个例子来演示一下Prompt行为的作用。</p>
<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/promptTest.png" class="" title="promptTest">

<p>在这个示例中，先是一个Say行为——<code>Please input your age</code>，提示用户输入年龄，然后是一个Prompt，把用户输入的年龄存储在usrAge这个变量中。最后是一个Say（这里稍微用了点Eval，后面会讲），把用户刚才输入的年龄显示出来。</p>
<p>测试一下，看看效果：</p>
<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/promptTestResult.png" class="" title="promptTestResult">

<p>符合预期。总之效果就是这样。</p>
<p>这东西可以用来做usrName，usrAge，之类的，也可以用来比对什么的。总之作用很多，可以增加交互性。</p>
<hr>
<h3 id="If"><a href="#If" class="headerlink" title="If"></a>If</h3><p>这个，学过点编程的应该是再熟悉不过了吧。没事，就算是没接触过，也可以讲讲。没什么难度。</p>
<p><strong>If</strong>，条件判断，分支。就是，先写一个条件，如果符合，那么怎么怎么做，如果不符合，那就另外如何如何做。</p>
<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/ifEdit.png" class="" title="ifEdit">

<p>它的编辑界面由三部分组成——<code>Condition</code>, <code>Then</code>和<code>Else</code>。</p>
<p><strong>Condition</strong>是判断条件。</p>
<p><strong>Then</strong>是条件为真（符合条件）时执行的行为。</p>
<p><strong>Else</strong>是条件为假（不符合条件）时执行的行为。</p>
<p>讲得可能有点抽象啊，举个例子来说明一下。</p>
<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/ifTest.png" class="" title="ifTest">

<p>这个例子可以看懂吧，上来一个Say，问用户1+1等于几。然后Prompt，用户填入答案。</p>
<p>接下来这个If，判断用户输入。</p>
<p>（注意这个<strong>EOS Editor的Prompt默认是把用户输入作为字符串（String）处理的</strong>）</p>
<p>如果用户输入的是字符串”2”，那么回答正确，执行Then的Action。</p>
<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/ifTestTrue.png" class="" title="ifTestTrue">

<p>如果用户输入的不是字符串”2”，那么回答错误，执行Else的Action。</p>
<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/ifTestFalse.png" class="" title="ifTestFalse">

<p>希望这个示例足够清楚，可以把这个概念说明白。</p>
<hr>
<h2 id="基础行为与Eval"><a href="#基础行为与Eval" class="headerlink" title="基础行为与Eval"></a>基础行为与Eval</h2><p>有几个基础行为有Eval界面，之前是怕太复杂，跳过去了没讲，今天讲讲。</p>
<hr>
<h3 id="Say"><a href="#Say" class="headerlink" title="Say"></a>Say</h3><p>Say是可以在中间插入<strong>Eval Tag</strong>，可以理解为变量名，或者是一些数值之类的东西。</p>
<p>还是举两个例子来讲吧。</p>
<p>第一个例子，输入用户名：</p>
<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/sayEvalTag1.png" class="" title="sayEvalTag1">

<p>一上来，一个Say提示用户输入用户名，然后一个Prompt，把用户输入的字符串存在usrName这个变量里面。</p>
<p>最后这个Say，类似于一个字符串拼接：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;Hello, &quot;</span> + usrName</span><br></pre></td></tr></table></figure>

<p>它把用户刚才输入的用户名拼接到这个字符串里面打印出来。</p>
<p>看看效果：</p>
<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/sayEvalTag1Result.png" class="" title="sayEvalTag1Result">



<p>第二个例子，显示时间：</p>
<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/sayEvalTag2.png" class="" title="sayEvalTag2">

<p>看一下输出结果：</p>
<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/sayEvalTag2Result.png" class="" title="sayEvalTag2Result">

<p>也可以用<code>getFullYear()</code>, <code>getMonth()</code>, <code>getDate()</code>这种方法来调取一些具体的时间。</p>
<p>总之，这个功能可以把一些参数展示出来。包括显示好感度等等，看设计者怎么用了。</p>
<hr>
<h3 id="Goto"><a href="#Goto" class="headerlink" title="Goto"></a>Goto</h3><p>Goto可以内置一些JavaScript语句，这其中可以写一些复杂的逻辑，最终决定跳转到哪个页面。</p>
<p>跳转的语句就很简单，一个字符串就行了。比如说你要跳转到<code>testPage1</code>，那就写：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;testPage1&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>举个例子来说明一下这种写法：</p>
<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/gotoEvalEdit.png" class="" title="gotoEvalEdit">

<p>在这个例子中，Say提示询问用户想要去哪个页面。</p>
<p>如果用户回答”1”，那么Goto就跳转到testPage1，否则跳转到testPage2。</p>
<p>测试一下运行效果，是符合预期的：</p>
<p>输入”1”，跳转到testPage1。</p>
<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/gotoEvalPage1.png" class="" title="gotoEvalPage1">

<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/gotoEvalPage1Result.png" class="" title="gotoEvalPage1Result">

<p>输入”2”或者什么别的，跳转到testPage2。</p>
<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/gotoEvalPage2.png" class="" title="gotoEvalPage2">

<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/gotoEvalPage2Result.png" class="" title="gotoEvalPage2Result">



<p>这个用法能用来做什么呢？有人说和之前If不是一样吗？确实。但是也不一定局限于If。你可以在里面写Switch Case，写随机数，写数学计算……总之很多，看你自己。</p>
<hr>
<h3 id="Timer"><a href="#Timer" class="headerlink" title="Timer"></a>Timer</h3><p>Timer同样是可以内置一些JavaScript语句，这可以产生一些随机性，或者是按照一些具体情况来计算出计时器时长。</p>
<p>在Eval当中，Timer接受的时间单位是<strong>毫秒（ms）</strong>。</p>
<p>比如说，你想要让一个计时器的时长设定为5秒，那就这么写：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="number">5000</span>;</span><br></pre></td></tr></table></figure>

<p>还是一样，举个具体的例子来说明这个用法。</p>
<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/timerEval.png" class="" title="timerEval">

<p>在这个示例中，先是弹出一个Say，提示用户输入计时器的时长，单位是秒。然后是一个Prompt，读取时长。</p>
<p>最后是一个简单的数学计算，从用户输入（这是一个字符串）提取出整数部分，乘以1000，换算成毫秒，作为计时器的时长。</p>
<p>来看看运行效果：</p>
<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/timerEvalResult.png" class="" title="timerEvalResult">

<p>可以看到，用户输入60，随后产生了一个1分钟的计时器。这个行为是符合预期的。</p>
<p>那，这个例子也就是说明一下用法而已，至于你要怎么得到计时器的时长，那完全是自己决定的。随机数？根据之前的互动参数来算？设置If-Else或者Switch-Case的几个分级？都可以。</p>
<hr>
<h2 id="Init-Script"><a href="#Init-Script" class="headerlink" title="Init Script"></a>Init Script</h2><p><strong>Init Script</strong>里面可以写点JavaScript代码，Webtease加载的时候就执行这部分代码。</p>
<p>在UI的Options-Init Script这里。</p>
<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/initScript.png" class="" title="initScript">

<p>这块地方可以写点变量定义，函数定义什么的，可以节省后面的工作量。</p>
<p>如果打不开，就说明用了不支持的JavaScript特性。还是老问题——这EOS Editor只支持到ES5。实在不行就在本地写点东西然后用Webpack、ESBuild这种工具打包成ES5代码复制粘贴上去吧。</p>
<p>Init Script里面的东西，后面写的时候也还是没有IntelliSense的。注意一下，可能会出现拼写错误什么的。</p>
<p>还是举点例子来讲一下吧。</p>
<hr>
<h3 id="生成随机整数函数的例子"><a href="#生成随机整数函数的例子" class="headerlink" title="生成随机整数函数的例子"></a>生成随机整数函数的例子</h3><p>比如说，要在Init Script里面写一个生成随机整数的函数，之后要用：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getRandomInt</span>(<span class="params">min, max</span>)&#123;</span><br><span class="line">    min = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(min);			<span class="comment">// 最小值向上取整</span></span><br><span class="line">    max = <span class="title class_">Math</span>.<span class="title function_">floor</span>(max);		 <span class="comment">// 最大值向下取整</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>((<span class="title class_">Math</span>.<span class="title function_">random</span>() * (max - min + <span class="number">1</span>)) + min);		</span><br><span class="line">    <span class="comment">// 对0-1之间的随机值放大(max-min+1)倍，加上最小值后向下取整</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>随后在Say的Eval Tag中调用这个函数，比如说生成一个在0-10之间的随机整数。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">getRandomInt</span>(<span class="number">0</span>, <span class="number">10</span>);	<span class="comment">// 调用函数，最小值为0，最大值为10</span></span><br></pre></td></tr></table></figure>

<p>如图所示：</p>
<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/getRandomInt.png" class="" title="getRandomInt">

<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/getRandomIntCall.png" class="" title="getRandomIntCall">

<p>运行结果如下图所示：</p>
<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/getRandomIntResult.png" class="" title="getRandomIntResult">

<p>总之，类似地。可以在Init Script中写一些函数，提高代码重用性。</p>
<p>毕竟在Eval甚至是Eval Tag里面，照理是不应该写太多代码的。</p>
<hr>
<h3 id="定义类的例子"><a href="#定义类的例子" class="headerlink" title="定义类的例子"></a>定义类的例子</h3><p>比如说，要在Init Script里面定义类，以便之后创建对象。</p>
<p>那，由于这是ES5，就按照ES5的写法来好了，构造函数。当然，ES6的class语法糖用惯了可以看看Webpack和ESBuild。</p>
<p>比如说要定义一个对象，Player，它有三个属性——HP, MP, ATK。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Player</span>(<span class="params">hp, mp, atk</span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">hp</span> = hp;				   <span class="comment">// 生命值</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">mp</span> = mp;				 <span class="comment">// 能量值</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">atk</span> = atk;				   <span class="comment">// 攻击力</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Player</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">getInfo</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;HP: &quot;</span> + <span class="variable language_">this</span>.<span class="property">hp</span> + <span class="string">&quot;, MP: &quot;</span> + <span class="variable language_">this</span>.<span class="property">mp</span> + <span class="string">&quot;, ATK: &quot;</span> + <span class="variable language_">this</span>.<span class="property">atk</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在Eval Action中可以调用构造函数创建对象：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> playerAlice = <span class="keyword">new</span> <span class="title class_">Player</span>(<span class="number">100</span>, <span class="number">80</span> ,<span class="number">20</span>);</span><br></pre></td></tr></table></figure>

<p>而后在Say Action的Eval Tag中，可以调用原型函数<code>getInfo()</code>来查看角色的属性信息：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">playerAlice.<span class="title function_">getInfo</span>()</span><br></pre></td></tr></table></figure>

<p>上图片：</p>
<p>定义构造函数和原型函数：</p>
<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/constructFunction.png" class="" title="constructFunction">

<p>创建对象：</p>
<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/evalCall.png" class="" title="evalCall">

<p>调用<code>getInfo()</code>获取信息：</p>
<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/sayCall.png" class="" title="sayCall">

<p>测试界面输出结果，符合预期：</p>
<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/classResult.png" class="" title="classResult">

<p>当然，功能远不止这么点。希望各位读者自行发挥想象力。</p>
<hr>
<h2 id="teaseStorage"><a href="#teaseStorage" class="headerlink" title="teaseStorage"></a>teaseStorage</h2><p><strong>teaseStorage</strong>是一个可选功能，类似于JavaScript的localStorage。</p>
<p>要用这个功能的话，在Options-Storage这个界面打开。</p>
<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/enableTeaseStorage.png" class="" title="enableTeaseStorage">

<p>空间不大，变量名不能太长，省着点用。</p>
<p>在teaseStorage中，数据以键值对的形式存在。主要的操作有设置、读取。</p>
<p>设置数值：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">teaseStorage.<span class="title function_">setItem</span>(<span class="string">&quot;playCount&quot;</span>, <span class="number">0</span>);</span><br></pre></td></tr></table></figure>

<p>读取数值，不存在则返回null：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> playCount = teaseStorage.<span class="title function_">getItem</span>(<span class="string">&quot;playCount&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>移除数值：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">teaseStorage.<span class="title function_">removeItem</span>(<span class="string">&quot;playCount&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>查看长度：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var storageLength = teaseStorage.length;</span><br></pre></td></tr></table></figure>

<p>查询键名：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> keyName = teaseStorage.<span class="title function_">key</span>(<span class="number">0</span>);</span><br></pre></td></tr></table></figure>

<p>清空全部内容：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">teaseStorage.<span class="title function_">clear</span>();</span><br></pre></td></tr></table></figure>

<p>这么说可能稍微有点抽象吧，举个具体的例子来说。</p>
<p>就比如说，要启用一个功能，统计玩家到底玩了几次这个Webtease：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> playCount = teaseStorage.<span class="title function_">getItem</span>(<span class="string">&quot;playCount&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (playCount == <span class="literal">null</span>) &#123;</span><br><span class="line">    playCount = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">playCount++;</span><br><span class="line"></span><br><span class="line">teaseStorage.<span class="title function_">setItem</span>(<span class="string">&quot;playCount&quot;</span>, playCount);</span><br></pre></td></tr></table></figure>

<p>会报错的，<strong>你别管EOS那个报错，这报错简直是乱来。能跑就是能跑，别慌。</strong></p>
<p>这个例子中，先创建一个变量用来存储玩家的游玩次数。从teaseStorage中尝试读取。</p>
<p>读不出来的话赋0+1，读出来的话就正常+1。最后写回。</p>
<p>（代码习惯稀烂）</p>
<p>测试运行效果：</p>
<img src="/2024/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94-Milovana-EOS-Editor%E6%95%99%E7%A8%8B%EF%BC%884%EF%BC%89-%E8%BF%9B%E9%98%B6%E8%A1%8C%E4%B8%BA%E4%B8%8EJavaScript/playCount.png" class="" title="playCount">

<p>可以用来存储一些长期保存的键值对，比如说游玩次数，关卡进度，好感度什么的。这样在start里面再做个分支跳转，可以对一个较长的webtease保存游玩进度什么的（不过真的有人会分好几次玩吗？）</p>
<hr>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>本文差不多简单介绍了一下之前第二篇行为和机制没有涉及到的一些东西，主要都是JavaScript相关的东西。</p>
<p>这些内容能够帮助制作出来的文游更具交互性。</p>
<p>当然，作者本人的水平很次，代码习惯也很烂。有问题还请指出。</p>
]]></content>
      <categories>
        <category>Tech</category>
        <category>Web Front-End</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Interactive Fiction</tag>
        <tag>Web Front-End</tag>
      </tags>
  </entry>
  <entry>
    <title>从零开始的小黄油制作—— Milovana EOS Editor教程（2） 基础行为与机制</title>
    <url>/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/</url>
    <content><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p><strong>行为（Actions）</strong>是Milovana Webtease的核心机制，它构成了一个互动文游的框架和主体。</p>
<p>本文主要介绍一些<strong>基础的行为</strong>，以及它们的用法案例。阅读本文后，你应该能够制作一个简单的Webtease互动文游。</p>
<span id="more"></span>

<hr>
<h2 id="创建行为"><a href="#创建行为" class="headerlink" title="创建行为"></a>创建行为</h2><h3 id="进入Edit界面"><a href="#进入Edit界面" class="headerlink" title="进入Edit界面"></a>进入Edit界面</h3><p>要创建一个行为，首先在左侧菜单栏点击按钮（一个类似于铅笔的图标），进入<strong>Edit</strong>界面。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/editButton.png" class="" title="editButton">

<p>进入Edit界面后，UI会展示你目前已经创建的页面（Pages）。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/editUI.png" class="" title="editUI">

<hr>
<h3 id="创建与选中页面"><a href="#创建与选中页面" class="headerlink" title="创建与选中页面"></a>创建与选中页面</h3><p>如果没有页面，那么你需要先创建一个，点击<strong>Add Page</strong>按钮即可：</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/addPage.png" class="" title="addPage">

<p>创建页面后，单击选中页面进行编辑：</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/clickPage.png" class="" title="clickPage">

<hr>
<h3 id="创建行为-1"><a href="#创建行为-1" class="headerlink" title="创建行为"></a>创建行为</h3><p>此时可以点击<strong>Create Action</strong>按钮来创建行为，两个按钮是一样的，点哪个都可以：</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/createAction1.png" class="" title="createAction1">

<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/createAction2.png" class="" title="createAction2">

<p>现在可以随便选择一种行为，行为的类型之后再详细讲解。</p>
<p>创建出来的行为会按照顺序排成一列。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/actionRow1.png" class="" title="actionRow1">



<p><strong>单击</strong>某个行为将会<strong>选中</strong>它，并展示它的编辑页面。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/editSay.png" class="" title="editSay">

<hr>
<h3 id="行为的创建位置"><a href="#行为的创建位置" class="headerlink" title="行为的创建位置"></a>行为的创建位置</h3><p>如果目前<strong>已经选中了某个行为</strong>，那么后续创建的行为将<strong>不会默认在末尾生成</strong>，而是<strong>会生成在当前已经选中行为之后</strong>。</p>
<p>示例1：未选中状态下，行为会生成在末尾。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/defaultActionGen.png" class="" title="行为默认生成在末尾">



<p>示例2：已选中状态下，行为将会生成在当前选中的行为之后。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/chooseAction1.png" class="" title="先选中一个行为">

<p>如图，先选中第二个行为——Say。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/chooseActionGen1.png" class="" title="此时行为生成在已经选中的行为之后">

<p>如图，此时生成的行为Say位于已经选中的第二个行为Say之后，是第三个行为，而不是最后一个行为。</p>
<hr>
<h2 id="行为的基本调整操作"><a href="#行为的基本调整操作" class="headerlink" title="行为的基本调整操作"></a>行为的基本调整操作</h2><h3 id="拖动改变顺序"><a href="#拖动改变顺序" class="headerlink" title="拖动改变顺序"></a>拖动改变顺序</h3><p>可以通过拖动行为来改变执行顺序，拖动按钮是右侧这两道横杠：</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/dragAction.png" class="" title="dragAction">

<hr>
<h3 id="行为调整菜单"><a href="#行为调整菜单" class="headerlink" title="行为调整菜单"></a>行为调整菜单</h3><p>点击这个三个点的图标即可查看一些针对行为的细化操作。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/actionMenu.png" class="" title="actionMenu">

<hr>
<h4 id="禁用-启用（Disable-Enable）"><a href="#禁用-启用（Disable-Enable）" class="headerlink" title="禁用&#x2F;启用（Disable &#x2F; Enable）"></a>禁用&#x2F;启用（Disable &#x2F; Enable）</h4><p>被禁用的行为会被<strong>无视</strong>和<strong>跳过</strong>，类似于注释一段代码。启用后恢复正常。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/disableAction.png" class="" title="disableAction">

<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/enableAction.png" class="" title="enableAction">

<hr>
<h4 id="剪切（Cut）"><a href="#剪切（Cut）" class="headerlink" title="剪切（Cut）"></a>剪切（Cut）</h4><p>剪切一个行为，它会消失，并转移到剪贴板上等待粘贴。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/cutAction.png" class="" title="cutAction">

<hr>
<h4 id="复制（Copy）"><a href="#复制（Copy）" class="headerlink" title="复制（Copy）"></a>复制（Copy）</h4><p>复制一个行为，在剪贴板上创建这个行为的副本，等待粘贴。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/copyAction.png" class="" title="copyAction">

<hr>
<h4 id="创建副本（Duplicate）"><a href="#创建副本（Duplicate）" class="headerlink" title="创建副本（Duplicate）"></a>创建副本（Duplicate）</h4><p>立即创建一个行为的副本，就生成在这个行为的后方。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/duplicateAction.png" class="" title="duplicateAction">

<hr>
<h4 id="在后方粘贴（Paste-Below）"><a href="#在后方粘贴（Paste-Below）" class="headerlink" title="在后方粘贴（Paste Below）"></a>在后方粘贴（Paste Below）</h4><p>将剪贴板中的行为粘贴到这个行为的后方。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/pasteBelow.png" class="" title="pasteBelow">

<hr>
<h4 id="删除（Delete）"><a href="#删除（Delete）" class="headerlink" title="删除（Delete）"></a>删除（Delete）</h4><p>删除当前行为。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/deleteAction.png" class="" title="deleteAction">

<hr>
<h3 id="粘贴行为（Paste-Action）"><a href="#粘贴行为（Paste-Action）" class="headerlink" title="粘贴行为（Paste Action）"></a>粘贴行为（Paste Action）</h3><p>将剪贴板中的行为粘贴，它的<strong>位置逻辑和创建行为是一致</strong>的。</p>
<p>如果当前没有选中任何行为，粘贴在末尾。</p>
<p>如果当前选中了某个行为，粘贴在这个行为的后方。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/pasteAction.png" class="" title="pasteAction">

<hr>
<h2 id="同步与异步"><a href="#同步与异步" class="headerlink" title="同步与异步"></a>同步与异步</h2><h3 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h3><p>在Milovana Webtease的一个Page中，多数行为的执行是<strong>同步（Synchronous，Sync）</strong>的。</p>
<p>也就是说，行为通常是<strong>顺序执行</strong>的，后面的行为必须等待前面的行为完成，才能开始。</p>
<p>同步执行的行为可以造成<strong>阻塞（Blocking）</strong>。</p>
<hr>
<h4 id="生活中的例子"><a href="#生活中的例子" class="headerlink" title="生活中的例子"></a>生活中的例子</h4><p>举个简单的例子来说明这个概念：</p>
<p>假设A、B、C三个人依次排队去买面包。</p>
<p>那么只有等到A买完面包，才能轮到B买面包。这就是<strong>同步</strong>——<strong>排队处理，一个一个来</strong>。</p>
<p>此时如果A出了点小问题（比如说A的手机因为装了某些奇怪的东西和下载了大量的学习资料，变得非常卡顿，迟迟打不开支付软件），那么B和C就只能等着，不能做其他的事情。B和C的时间<strong>被浪费掉了</strong>，这就是<strong>阻塞</strong>——<strong>某件事情被卡住，那么什么也不能做，只能干等</strong>。</p>
<hr>
<h4 id="EOS中的例子"><a href="#EOS中的例子" class="headerlink" title="EOS中的例子"></a>EOS中的例子</h4><p>在EOS中举个简单的例子来说明这个概念：</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/syncActionExm.png" class="" title="一个同步执行的示例">

<p>在这个页面中，有三个行为依次排列——Say，Say，End。</p>
<p>点击Preview，预览一下这个案例：</p>
<p>首先，弹出一个对话——Hello, world!</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/syncHelloWorld.png" class="" title="弹出HelloWorld">

<p>此时，用户需要点击响应才能使得游戏继续下去，后续的两个时间在排队等待，这是<strong>同步</strong>——<strong>排队处理，一个一个来</strong>。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/syncEOS.png" class="" title="弹出EOS">

<p>如果用户因为一些原因（例如把双手放在一些自然而然，理所应当的地方），用户在此时什么也没有做（或者是做不了），后面的行为将不会执行，整个游戏将会卡在这个地方，这就是<strong>阻塞</strong>——<strong>某件事情被卡住，什么也不能做，只能干等</strong>。</p>
<hr>
<h3 id="异步"><a href="#异步" class="headerlink" title="异步"></a>异步</h3><p>在Milovana Webtease的一个Page中，也有一些行为是<strong>异步（Asynchronous，Async）</strong>的。</p>
<p>也就是说，一些行为<strong>不会按照顺序执行</strong>，它们不会阻塞主线程。</p>
<p>异步行为通过<strong>非阻塞（Non-Blocking）</strong>机制执行。</p>
<hr>
<h4 id="生活中的例子-1"><a href="#生活中的例子-1" class="headerlink" title="生活中的例子"></a>生活中的例子</h4><p>举个简单的例子来说明这个概念：</p>
<p>假如你今天要做一顿晚饭——青椒炒肉片+米饭。</p>
<p>当你淘米，把饭煮下去之后，你并不用等待饭煮完才能去做另一件事情。当饭煮下去之后，你可以去做一件别的事情，例如洗菜、切菜、炒菜。当饭煮好后，电饭煲会提示。此时你就知道，饭煮好了，可以去盛饭。</p>
<p>这是<strong>异步——开始做一件事之后，可以不用等待，立即去做别的事情，完成后再回来处理</strong>。</p>
<p>而煮饭这件事本身是<strong>非阻塞</strong>的，时间<strong>没有被浪费</strong>——<strong>你不用站在电饭煲旁边干等着，可以去做点别的，反正它会自己完成</strong>。</p>
<hr>
<h4 id="EOS中的例子-1"><a href="#EOS中的例子-1" class="headerlink" title="EOS中的例子"></a>EOS中的例子</h4><p>在EOS中举个简单的例子来说明这个概念：</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/asyncExm.png" class="" title="一个异步执行的案例">

<p>在这个页面中，有三个行为依次排列——Audio, Say, End。</p>
<p>点击Preview，预览一下这个案例：</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/asyncTest.png" class="" title="asyncTest">

<p>在声音开始播放的<strong>同时</strong>，第一句对话就已经出现了。这就是<strong>异步——开始做一件事之后，可以不用等待，立即去做别的事情，完成后再回来处理</strong>。这里的这个Audio——开始播放声音，就类似于前面我们提到的把饭煮下去。</p>
<p>而播放声音（Audio）这件事情本身是<strong>非阻塞</strong>的——<strong>Say不需要等待Audio真的把声音播放完，可以直接弹出，反正Audio自己会播放完的</strong>。这里的Say——显示字幕，就类似于前面提到的，在煮饭的同时去洗菜，切菜，炒菜。</p>
<hr>
<h2 id="基本行为类型"><a href="#基本行为类型" class="headerlink" title="基本行为类型"></a>基本行为类型</h2><p>掌握一些基本类型的行为，就已经足够在EOS中做出多样的互动文游。</p>
<hr>
<h3 id="Image"><a href="#Image" class="headerlink" title="Image"></a>Image</h3><p><strong>Image</strong>是一个非常基本的行为——<strong>显示一张图片</strong>。</p>
<p>如果目前已经有显示的图片，那么就替换显示的图片。</p>
<p>它是一个加载媒体的行为，是<strong>非阻塞</strong>的。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/createImage.png" class="" title="createImage">

<hr>
<h4 id="Select-Image（选择图片）"><a href="#Select-Image（选择图片）" class="headerlink" title="Select Image（选择图片）"></a>Select Image（选择图片）</h4><p>建议<strong>先把要用的图片素材全部导入到Galleries</strong>。这个操作在上一篇已经讲过，不再重复。</p>
<p>点击Select Image按钮。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/selectImageUI.png" class="" title="selectImageUI">

<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/selectImage.png" class="" title="selectImage">



<p>点击From Galleries，点击Choose Image。（Use Random Image是从这个Gallery中随机选择一张）</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/fromGalleries.png" class="" title="fromGalleries">

<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/chooseImage.png" class="" title="chooseImage">



<p>点选你想要选择的图片即可。</p>
<p>当然如果你想要用From Files也是可以的，直接手动上传即可，这里不多赘述。</p>
<p>Recent会展示你最近使用过的Galleries，可以提高工作效率。</p>
<hr>
<h3 id="Say"><a href="#Say" class="headerlink" title="Say"></a>Say</h3><p><strong>Say</strong>是一个非常基本的行为——<strong>显示一段文字</strong>。</p>
<p>它是<strong>阻塞</strong>的。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/sayActionUI.png" class="" title="sayActionUI">

<hr>
<h4 id="输入文字（Input）"><a href="#输入文字（Input）" class="headerlink" title="输入文字（Input）"></a>输入文字（Input）</h4><p>在右侧的编辑栏，可以看见一个输入框。可以在这里直接输入文字。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/sayInput.png" class="" title="sayInput">

<p>注意：<strong>PC 端Web UI这个输入框不能直接输入中文，否则会被立即清除</strong>。</p>
<p>目前有两种办法来处理这个问题。</p>
<p>一种是直接使用移动端的Web UI，可以绕过这个限制。（但是用着有点累）</p>
<p>一种是从其他地方（例如文本文档，Word文档的台本中）复制粘贴中文文本。</p>
<p>（感谢<a href="https://x.com/luyinsama">鹭鸣有音</a>提供的解决方案）</p>
<hr>
<h4 id="文本样式（Style）"><a href="#文本样式（Style）" class="headerlink" title="文本样式（Style）"></a>文本样式（Style）</h4><p>在右侧编辑栏上方有一组文本样式按钮，可以用来调节选中文本的样式。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/sayTextStyle.png" class="" title="sayTextStyle">

<p>它的逻辑与Microsoft Word基本类似，这里操作方法不再详细赘述。它既可以作为一个Toggle的输入样式开关，又可以对选中区域的文字应用相对应的样式。</p>
<p>从左到右依次是：</p>
<p><strong>B</strong> - 粗体（Bold）</p>
<p><em>I</em> - 斜体（Italic）</p>
<p><u>U</u> - 下划线（Underline）</p>
<p><u><strong>A</strong></u> - 字体颜色</p>
<p>&lt;&gt; - Eval()函数文本，这个稍微有点复杂了，涉及JavaScript，到时候放到进阶篇来讲。</p>
<hr>
<h4 id="文本对齐（Alignment）"><a href="#文本对齐（Alignment）" class="headerlink" title="文本对齐（Alignment）"></a>文本对齐（Alignment）</h4><p>文本对齐的方向，很好理解。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/sayTextAlignment.png" class="" title="sayTextAlignment">

<p>Left - 左对齐</p>
<p>Center - 居中</p>
<p>Right - 右对齐</p>
<hr>
<h4 id="时间机制（Timing）"><a href="#时间机制（Timing）" class="headerlink" title="时间机制（Timing）"></a>时间机制（Timing）</h4><p>文本的时间机制是最重要的设定之一，它直接关系着一个文游的人机交互和用户游玩体验。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/sayTiming.png" class="" title="sayTiming">

<p>讲讲这些选项。</p>
<hr>
<h5 id="Auto-Pause"><a href="#Auto-Pause" class="headerlink" title="Auto &#x2F; Pause"></a>Auto &#x2F; Pause</h5><img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/sayAuto.png" class="" title="sayAuto">

<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/sayPause.png" class="" title="sayPause">

<p>这是最常见的选项。这两个放在一起是因为，Auto通常就表现为Pause。</p>
<p>Auto &#x2F; Pause的机制很简单——阻塞，等待用户交互后继续（通常是单击或空格）。</p>
<p>没错，就类似于平时玩的Galgame。</p>
<p>大多数情况下可以放着不管，默认的设置是Auto，Auto在绝大多数情况下就表现为Pause。这意味着用户点一下，它前进一步。</p>
<p>然而，当用户可能处于某种<strong>腾不出手</strong>的状况时，这个选项会显得稍微有点不讨好——这会迫使用户停下他们手头正在做的事情（比如说用户正在做某些理所应当的，自然而然的事情）来进行交互，这会让用户感到沮丧和挫败。所以最好是注意一下。</p>
<hr>
<h5 id="Instant"><a href="#Instant" class="headerlink" title="Instant"></a>Instant</h5><img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/sayInstant.png" class="" title="sayInstant">

<p>瞬间跳过交互，直接呈现一段文字。你可以理解为即时的自动点击，Galgame的快速跳过，或者是非阻塞。</p>
<p>这个其实不太常用。</p>
<hr>
<h5 id="Auto-Play"><a href="#Auto-Play" class="headerlink" title="Auto-Play"></a>Auto-Play</h5><img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/sayAutoPlay.png" class="" title="sayAutoPlay">

<p>根据内容信息的长短，大致估计一个阅读时间，然后自动跳过。</p>
<p>Allow user to skip the wait这个开关决定用户能否跳过这段文字的等待时间。（开发者在Debug模式下是一定可以跳过的）</p>
<p>这个估计的时间其实不太准确的……用这个功能真的还不如用Custom来得灵活。</p>
<hr>
<h5 id="Custom"><a href="#Custom" class="headerlink" title="Custom"></a>Custom</h5><p>最常用的选项之一。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/sayCustom.png" class="" title="sayCustom">

<p>作者可以自定义这段文字信息的持续展示时间，接受的时间单位包括：</p>
<p>s（second，秒）</p>
<p>m（minute，分）</p>
<p>h（hour，时）</p>
<p>Allow user to skip the wait这个开关决定用户能否跳过这段文字的等待时间。（开发者在Debug模式下是一定可以跳过的）</p>
<p>这里就再次提到之前Auto &#x2F; Pause出现问题的那种情况。当用户<strong>腾不出手</strong>的时候，给出一个自动播放的对话字幕是很有帮助的。</p>
<p>举个例子，像是这种对话字幕：</p>
<p><code>给我继续无脑自慰❤</code></p>
<p><code>不可以擅自停下❤</code></p>
<p>有些用户习惯于用双手，那么如果此时使用Auto &#x2F; Pause，会给他们带来一个比较糟糕的游戏体验——他们的动作会被反复出现的强制交互打断（这是否也算是一种物理寸止？）。</p>
<p>一种更好的方式就是切换到Custom模式，打开Allow user to skip the wait，同时设定一个自动跳过的时间。这样，如果用户腾得出手，他们可以掌控游戏节奏，就算用户真的腾不出手，文游也还会继续下去。</p>
<p>当然也可以不打开Allow user to skip the wait，这样用户就必须等待这段时间，之后文游才会继续。</p>
<hr>
<h3 id="Goto"><a href="#Goto" class="headerlink" title="Goto"></a>Goto</h3><p><strong>Goto</strong>其实很简单，行为触发后，将会直接<strong>跳转到对应的页面（Page）</strong>。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/createGoto.png" class="" title="createGoto">

<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/gotoEdit.png" class="" title="gotoEdit">

<hr>
<h4 id="固定跳转"><a href="#固定跳转" class="headerlink" title="固定跳转"></a>固定跳转</h4><p>在右侧的Page输入框，可以输入确定的一个页面名，来确保跳转到某一个页面。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/gotoExact.png" class="" title="gotoExact">

<hr>
<h5 id="目标页面存在"><a href="#目标页面存在" class="headerlink" title="目标页面存在"></a>目标页面存在</h5><p>如果页面名没有问题，目标页面确实存在的话，会提示”This page exists.”，代表可以成功跳转。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/pageExists.png" class="" title="pageExists">

<p>此时点击右侧的Go to edit page可以直接进入目标页面的编辑界面。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/editGotoPage.png" class="" title="editGotoPage">

<hr>
<h5 id="目标页面不存在"><a href="#目标页面不存在" class="headerlink" title="目标页面不存在"></a>目标页面不存在</h5><p>如果页面名有问题，目标页面不存在，会提示”This page does not exist.”，代表目前无法成功跳转。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/pageNotExist.png" class="" title="pageNotExist">

<p>此时点击右侧的Create it可以立即创建一个对应名称的页面。</p>
<hr>
<h4 id="随机跳转"><a href="#随机跳转" class="headerlink" title="随机跳转"></a>随机跳转</h4><p>在右侧的Page输入框，还可以输入一个不确定的页面名，实现随机跳转的效果。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/gotoRandom.png" class="" title="gotoRandom">

<p>在这个用法中，<code>*</code>代表了任意字符。因此在页面命名时可以稍微注意一下，例如：</p>
<p><code>EndA</code>，<code>EndB</code>，<code>EndC</code>。那么此时，Goto的页面名输入<code>End*</code>，即可跳转到三个<code>End</code>页面中的随机一个。</p>
<hr>
<h3 id="Timer"><a href="#Timer" class="headerlink" title="Timer"></a>Timer</h3><p><strong>Timer（计时器）</strong>是EOS的核心机制之一。</p>
<hr>
<h4 id="持续时间（Duration"><a href="#持续时间（Duration" class="headerlink" title="持续时间（Duration)"></a>持续时间（Duration)</h4><p><strong>持续时间（Duration)<strong>很好理解——</strong>倒计时持续多久</strong>。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/timerDuration.png" class="" title="timerDutation">

<hr>
<h5 id="固定持续时间（Specific）"><a href="#固定持续时间（Specific）" class="headerlink" title="固定持续时间（Specific）"></a>固定持续时间（Specific）</h5><p>在Specific模式下，倒计时的时长是<strong>固定的</strong>。</p>
<p>只要输入你想要的时长就可以了。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/timerSpecificDuration.png" class="" title="timerSpecificDuration">

<hr>
<h5 id="范围持续时间（Range）"><a href="#范围持续时间（Range）" class="headerlink" title="范围持续时间（Range）"></a>范围持续时间（Range）</h5><p>在Range模式下，倒计时的时长是<strong>随机的</strong>。</p>
<p>时长是<strong>Min（最小值）</strong>和<strong>Max（最大值）</strong>之间的一个随机值。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/timerRangeDuration.png" class="" title="timerRangeDuration">

<hr>
<h5 id="Eval（JavaScript）"><a href="#Eval（JavaScript）" class="headerlink" title="Eval（JavaScript）"></a>Eval（JavaScript）</h5><p>在之后和JavaScript一起讲。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/timerEval.png" class="" title="timerEval">

<hr>
<h4 id="视觉样式（Visual-Style）"><a href="#视觉样式（Visual-Style）" class="headerlink" title="视觉样式（Visual Style）"></a>视觉样式（Visual Style）</h4><p><strong>视觉样式(Visual Style）</strong>决定了计时器在Webtease中应该如何显示。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/timerVisualStyle.png" class="" title="timerVisualStyle">

<hr>
<h5 id="Normal"><a href="#Normal" class="headerlink" title="Normal"></a>Normal</h5><p>Normal意味着一切正常——用户可以看到计时器本身，也可以看到剩余时间。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/timerVisualNormal.png" class="" title="timerVisualNormal">

<p>它的效果是这样的：</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/timerVisualNormalExm.png" class="" title="timerVisualNormalExm">

<hr>
<h5 id="Secret"><a href="#Secret" class="headerlink" title="Secret"></a>Secret</h5><p>Secret意味着隐藏时间——用户可以看到计时器本身，但无法看到剩余时间。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/timerVisualSecret.png" class="" title="timerVisualSecret">

<p>它的效果是这样的：</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/timerVisualSecretExm.png" class="" title="timerVisualSecretExm">

<hr>
<h5 id="Hidden"><a href="#Hidden" class="headerlink" title="Hidden"></a>Hidden</h5><p>Hidden意味着完全隐藏计时器——用户既不能看到计时器本身，也无法看到剩余时间。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/timerVisualHidden.png" class="" title="timerVisualHidden">

<hr>
<h4 id="同步-异步模式（Behavior）"><a href="#同步-异步模式（Behavior）" class="headerlink" title="同步&#x2F;异步模式（Behavior）"></a>同步&#x2F;异步模式（Behavior）</h4><p>计时器可以调整同步&#x2F;异步模式，这是计时器最重要的机制之一，它决定了一个计时器如何发挥作用，是否阻塞主线程。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/timerSync.png" class="" title="timerSync">

<hr>
<h5 id="同步模式（Sync）"><a href="#同步模式（Sync）" class="headerlink" title="同步模式（Sync）"></a>同步模式（Sync）</h5><p>同步模式的计时器是<strong>阻塞</strong>的。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/timerSync.png" class="" title="timerSync">

<p>也就是说，一个同步模式的计时器<strong>必须走完，才能进行进入后面的游戏</strong>。后面的行为必须等待这个计时器的结束。</p>
<p>打个比方，同步模式的计时器就好比那个正在面包店门口掏钱的人。<strong>在他完成交易之前，后面排队的人都得干等着</strong>。</p>
<hr>
<p>做个简单的示例来解释一下同步模式的计时器：</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/timerSyncExm.png" class="" title="timerSyncExm">

<p>在这个例子中，Tease先显示”Hello, world!”，用户需要先完成第一个Say的交互，进入5秒的倒计时。倒计时完成后，才显示”Sync Timer!”。</p>
<p>一切都是<strong>顺序执行</strong>的。</p>
<hr>
<h5 id="异步模式（Async）"><a href="#异步模式（Async）" class="headerlink" title="异步模式（Async）"></a>异步模式（Async）</h5><p>异步模式的计时器是<strong>非阻塞</strong>的，且可以添加计时结束后的行为。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/timerAsync.png" class="" title="timerAsync">

<p>也就是说，一个异步模式的计时器<strong>并不需要走完，可以直接进入后面的游戏</strong>。<strong>等这个计时器结束后，它可以主动触发一些行为</strong>。</p>
<p>打个比方，异步模式的计时器就好比一个外卖小哥。<strong>你点了外卖，可以去做其他事情。过了一段时间，外卖送上门了，外卖小哥按下你的门铃，你知道是外卖到了，于是去取外卖</strong>。</p>
<p>做个简单的例子来解释一下异步模式的计时器：</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/timerAsyncExm.png" class="" title="timerAsyncExm">

<p>在这个例子中，Tease先显示一张幻樱的图片，然后进入一个计时器。</p>
<p>这个计时器有整整10秒，它添加了一个行为——更换一张幻樱的图片。</p>
<p>在计时器启动后，用户仍然可以正常地与两个Say行为交互，不会受到任何的影响。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/timerAsyncTest1.png" class="" title="timerAsyncTest1">

<p>在10秒后，计时器结束，计时器触发预设的事件——图片被更换。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/timerAsyncTest2.png" class="" title="timerAsyncTest2">

<hr>
<h3 id="Choice"><a href="#Choice" class="headerlink" title="Choice"></a>Choice</h3><p><strong>Choice（选择）</strong>可以创建互动和分支。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/createChoice.png" class="" title="createChoice">

<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/choiceEdit.png" class="" title="choiceEdit">

<hr>
<h4 id="添加选项（Add-Option）"><a href="#添加选项（Add-Option）" class="headerlink" title="添加选项（Add Option）"></a>添加选项（Add Option）</h4><p>Choice默认只有一个选项（我莫得选择）。</p>
<p>这个其实可以用于制作一些类似于……</p>
<p><code>跪下了❤</code></p>
<p><code>我没有作弊！</code></p>
<p>这种交互。</p>
<p>可以点击Add Option按钮添加选项。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/choiceAddOption.png" class="" title="choiceAddOption">

<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/choiceAddOptionBtn.png" class="" title="choiceAddOptionBtn">



<p>单击上方的Option即可进入对应选项的编辑页面。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/choiceOptionSelect.png" class="" title="choiceOptionSelect">

<hr>
<h4 id="选项标签（Label）"><a href="#选项标签（Label）" class="headerlink" title="选项标签（Label）"></a>选项标签（Label）</h4><p>Label其实就是该选项的文字内容。直接输入即可，自动保存的。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/choiceOptionLabel.png" class="" title="choiceOptionLabel">

<hr>
<h4 id="行为类型（Type-of-Behavior）"><a href="#行为类型（Type-of-Behavior）" class="headerlink" title="行为类型（Type of Behavior）"></a>行为类型（Type of Behavior）</h4><p>行为类型决定了用户点击选项后会发生什么。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/choiceOptionBehavior.png" class="" title="choiceOptionBehavior">

<hr>
<h5 id="前往页面（Go-to-page）"><a href="#前往页面（Go-to-page）" class="headerlink" title="前往页面（Go to page）"></a>前往页面（Go to page）</h5><p>默认的行为类型，用户点击选项后，文游跳转前往指定的页面。页面的跳转方式同之前的Goto，不再赘述。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/choiceOptionBehavior.png" class="" title="choiceOptionBehavior">

<hr>
<h5 id="自定义行为（Custom-Actions）"><a href="#自定义行为（Custom-Actions）" class="headerlink" title="自定义行为（Custom Actions）"></a>自定义行为（Custom Actions）</h5><p>自定义按钮的行为类型，用户点击选项后，执行这些行为。机制等同于Create Action，套娃，不再赘述。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/choiceOptionBehavior.png" class="" title="choiceOptionBehavior">

<hr>
<h4 id="按钮颜色（Button-Color）"><a href="#按钮颜色（Button-Color）" class="headerlink" title="按钮颜色（Button Color）"></a>按钮颜色（Button Color）</h4><p>调整选项按钮的颜色，点击Reset即可重置默认。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/choiceButtonColor.png" class="" title="choiceButtonColor">

<hr>
<h4 id="可见性（Visible）"><a href="#可见性（Visible）" class="headerlink" title="可见性（Visible）"></a>可见性（Visible）</h4><p>通过JavaScript调整按钮的可见性，默认是一直可见。</p>
<p>别问怎么调，我也不会（</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/choiceButtonVisible.png" class="" title="choiceButtonVisible">

<hr>
<h3 id="End"><a href="#End" class="headerlink" title="End"></a>End</h3><p><strong>End（结束）</strong>是最简单直白的行为——只要触发这个行为，Webtease就结束了。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/createEnd.png" class="" title="createEnd">

<p>End行为没有任何可以设置的东西。</p>
<hr>
<h3 id="Eval"><a href="#Eval" class="headerlink" title="Eval"></a>Eval</h3><p><strong>Eval</strong>动态执行字符串形式的JavaScript代码。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/createEval.png" class="" title="createEval">

<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/evalEdit.png" class="" title="evalEdit">

<p>这里不详细讲解，总之，在基础部分，通常只需要掌握这个：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Sound</span>.<span class="title function_">get</span>(<span class="string">&quot;&quot;</span>).<span class="title function_">stop</span>()</span><br></pre></td></tr></table></figure>

<p>这段语句配合Audio的Identifier使用，可以停止一段音频的播放。</p>
<hr>
<h3 id="Notification-Create"><a href="#Notification-Create" class="headerlink" title="Notification: Create"></a>Notification: Create</h3><p>（注意：这是一个可选功能，如果要使用，记得先在左侧菜单栏的选项中打开<strong>Notification</strong>）</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/enableNotification.png" class="" title="enableNotification">

<p><strong>Notification: Create（创建通知）</strong>将会创建一个跨越Page层级的通知，一直悬浮于Webtease的界面上，直到触发事件或者被<strong>Notification: Remove（移除通知）</strong>删除。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/createNotification.png" class="" title="createNotification">



<h4 id="通知标题（Title）"><a href="#通知标题（Title）" class="headerlink" title="通知标题（Title）"></a>通知标题（Title）</h4><p>这是可选的，输入通知的标题。例如这样：</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/notificationTitle.png" class="" title="notificationTitle">



<h4 id="按钮（Button）"><a href="#按钮（Button）" class="headerlink" title="按钮（Button）"></a>按钮（Button）</h4><p>在通知中增加一个按钮，用户点击后会触发按钮的事件，例如这样：</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/notificationButton.png" class="" title="notificationButton">



<p>这是它的实际效果：</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/notificationButtonExm.png" class="" title="notificationButtonExm">

<p>用户点击<code>败北❤</code>按钮后，就会跳转到lose这个Page。</p>
<h4 id="计时器（Timer）"><a href="#计时器（Timer）" class="headerlink" title="计时器（Timer）"></a>计时器（Timer）</h4><p>在通知中增加一个计时器。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/notificationTimer.png" class="" title="notificationTimer">

<p>这个计时器基本上和之前讲的大差不差，但是要注意一下，通知（Notification）中的计时器默认的设定是：</p>
<p><strong>异步（Async）</strong>+ <strong>可见（Visible）</strong></p>
<p>这个可见的形式稍有不同——它不会详细显示剩余时间，而是一个进度条的形式，就像这样：</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/notificationTimerExm.png" class="" title="notificationTimerExm">



<h4 id="标识符（Identifier）"><a href="#标识符（Identifier）" class="headerlink" title="标识符（Identifier）"></a>标识符（Identifier）</h4><p>通知的<strong>标识符（Identifier）</strong>，主要是用于给<strong>Notification: Remove</strong>定位通知用的。</p>
<hr>
<h3 id="Notification-Remove"><a href="#Notification-Remove" class="headerlink" title="Notification: Remove"></a>Notification: Remove</h3><p>（注意：这是一个可选功能，如果要使用，记得先在左侧菜单栏的选项中打开<strong>Notification</strong>）</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/enableNotification.png" class="" title="enableNotification">

<p><strong>Notification: remove（移除通知）</strong>只需要设定一个对应的<strong>标识符（Identifier）</strong>，就可以立即移除一个通知（Notification）。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/notificationRemove.png" class="" title="notificationRemove">



<p>例如，在之前我创建了一个通知，它的标识符是<code>edge1</code>：</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/removeTarget.png" class="" title="removeTarget">

<p>现在只要填写对应的标识符，就可以利用Notification: Remove移除对应的这个通知：</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/removeAction.png" class="" title="removeAction">

<hr>
<h3 id="Audio-Play"><a href="#Audio-Play" class="headerlink" title="Audio: Play"></a>Audio: Play</h3><p>（注意：这是一个可选功能，如果要使用，记得先在左侧菜单栏的选项中打开<strong>Audio</strong>）</p>




<p><strong>Audio: Play（播放音频）</strong></p>
<p>这个行为是<strong>非阻塞</strong>的，它会播放一段指定的音频。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/createAudioPlay.png" class="" title="createAudioPlay">

<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/audioEdit.png" class="" title="audioEdit">



<h4 id="定位器（Locator）"><a href="#定位器（Locator）" class="headerlink" title="定位器（Locator）"></a>定位器（Locator）</h4><p>定位器是用来选择音频文件的，在使用播放音频功能前，建议先在Files当中上传你需要使用的音频文件——上一篇已经讲过，不再赘述。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/audioLocator.png" class="" title="audioLocator">

<p>点击Select Audio File即可选择音频文件：</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/selectAudioFile.png" class="" title="selectAudioFile">

<p>选择已经上传的音频文件，单击即可选中。Use Random Sound是随机。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/selectAudioFileUI.png" class="" title="selectAudioFileUI">



<h4 id="选项（Options）"><a href="#选项（Options）" class="headerlink" title="选项（Options）"></a>选项（Options）</h4><p>选项主要调整音频文件的一些基本播放参数。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/audioOptions.png" class="" title="audioOptions">



<h5 id="音量（Volume）"><a href="#音量（Volume）" class="headerlink" title="音量（Volume）"></a>音量（Volume）</h5><p>拖动进度条可以调整音频文件的播放音量。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/audioOptionsVolume.png" class="" title="audioOptionsVolume">



<h5 id="循环（Loops）"><a href="#循环（Loops）" class="headerlink" title="循环（Loops）"></a>循环（Loops）</h5><p>拖动进度条可以调整音频文件的循环播放次数，可以在1-31次之间调整，拉到最右侧是无限（Infinite）。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/audioOptionsLoops.png" class="" title="audioOptionsLoops">



<h4 id="交互性（Interactivity）"><a href="#交互性（Interactivity）" class="headerlink" title="交互性（Interactivity）"></a>交互性（Interactivity）</h4><p>主要是调整播放音频的交互行为模式，以及用于控制播放用的一些东西。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/audioInteractivity.png" class="" title="audioInteractivity">



<h5 id="跨页连续播放（Continue-across-pages）"><a href="#跨页连续播放（Continue-across-pages）" class="headerlink" title="跨页连续播放（Continue across pages）"></a>跨页连续播放（Continue across pages）</h5><p>开启后，Audio: Play行为的生命周期从单个Page提升到整个Tease。</p>
<p>也就是说，原本跳出当前Page之后，Audio会自动停止。开启后则不会。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/audioInteractivityContinue.png" class="" title="audioInteractivityContinue">



<h5 id="标识符（Identifier）-1"><a href="#标识符（Identifier）-1" class="headerlink" title="标识符（Identifier）"></a>标识符（Identifier）</h5><p>类似于Notification，Audio的<strong>标识符（Identifier）</strong>是用来<strong>定位音频</strong>和<strong>控制播放</strong>的（暂停，停止，调整音量等等）。</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/audioIdentifier.png" class="" title="audioIdentifier">



<p>这里，简单举个例子讲一下这个用法：</p>
<p>首先设置目前Audio的标识符：</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/audioIdentifierExm1.png" class="" title="audioIdentifierExm1">

<p>然后新建一个Timer，Timer之后是一个Eval，里面写一段JavaScript代码来停止这个音频的播放：</p>
<img src="/2024/09/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%B0%8F%E9%BB%84%E6%B2%B9%E5%88%B6%E4%BD%9C%E2%80%94%E2%80%94%20Milovana%20EOS%20Editor%E6%95%99%E7%A8%8B%EF%BC%882%EF%BC%89%E5%9F%BA%E7%A1%80%E8%A1%8C%E4%B8%BA%E4%B8%8E%E6%9C%BA%E5%88%B6/audioIdentifierExm2.png" class="" title="audioIdentifierExm2">



<p>经过测试，可以发现计时器走完后音频停止了。</p>
<hr>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>本文主要介绍了Milovana EOS Editor当中的一些基本行为。</p>
<p>下一篇是一个实战演练——制作一个简单的R-18文游。</p>
]]></content>
      <categories>
        <category>Tech</category>
        <category>Web Front-End</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Interactive Fiction</tag>
        <tag>Web Front-End</tag>
      </tags>
  </entry>
  <entry>
    <title>使用BBR一键安装脚本快速优化VPS网络性能</title>
    <url>/2023/10/18/%E4%BD%BF%E7%94%A8BBR%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC%E5%BF%AB%E9%80%9F%E4%BC%98%E5%8C%96VPS%E7%BD%91%E7%BB%9C%E6%80%A7%E8%83%BD/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>常规VPS在缺少拥塞控制算法的情况下可能带宽较低，此时可以通过安装BBR来有效提升带宽。</p>
<span id="more"></span>

<h3 id="安装BBR一键脚本"><a href="#安装BBR一键脚本" class="headerlink" title="安装BBR一键脚本"></a>安装BBR一键脚本</h3><p>通过这行命令可以安装tcp.sh一键脚本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate <span class="string">&quot;https://gist.github.com/zeruns/a0ec603f20d1b86de6a774a8ba27588f/raw/4f9957ae23f5efb2bb7c57a198ae2cffebfb1c56/tcp.sh&quot;</span> &amp;&amp; <span class="built_in">chmod</span> +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure>

<p>启动脚本之后，你可以先更新脚本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure>

<p>然后再次启动脚本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/root/tcp.sh</span><br></pre></td></tr></table></figure>

<p>之后根据界面自己选择需要的BBR进行加速即可，根据脚本的指示操作即可完成安装。</p>
]]></content>
      <categories>
        <category>Tech</category>
        <category>Network</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Network</tag>
        <tag>Circumvention</tag>
        <tag>Proxy</tag>
        <tag>VPS</tag>
      </tags>
  </entry>
  <entry>
    <title>在Debian 12上搭建简单的VMess + TCP服务器</title>
    <url>/2023/11/11/%E5%9C%A8Debian%2012%E4%B8%8A%E6%90%AD%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9A%84VMess%20+%20TCP%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>VMess是V2Ray设计的一种代理协议，能使用各种安全层和传输层协议，实现不同的代理方式。</p>
<p>本文主要简单介绍如何在Debian 12上搭建VMess + TCP这种最基本的VMess服务器。</p>
<span id="more"></span>

<hr>
<h2 id="安装V2Ray"><a href="#安装V2Ray" class="headerlink" title="安装V2Ray"></a>安装V2Ray</h2><p>SSH连接VPS的过程略。</p>
<p>建议通过官方安装脚本安装V2Ray：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -L https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-release.sh)</span><br></pre></td></tr></table></figure>

<p>安装最新的geoip.dat和geosite.dat：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -L https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-dat-release.sh)</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="配置V2Ray"><a href="#配置V2Ray" class="headerlink" title="配置V2Ray"></a>配置V2Ray</h2><hr>
<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>打开V2Ray的配置文件，这里以最简单的文本编辑器nano为例。当然，如果会用vim自然是更好的：</p>
<p>（不同云服务器供应商的文件结构可能不同，请注意找一下自己的V2Ray配置文件位置，并根据自己的情况修改目录）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/local/etc/v2ray/config.json</span><br></pre></td></tr></table></figure>

<p>一个非常简单的示例配置文件如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;inbounds&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">8443</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vmess&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;clients&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                    <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;766ff83e-c497-4ea9-8ad8-434be59c6bb9&quot;</span></span><br><span class="line">                    <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">]</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;outbounds&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;freedom&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>Ctrl+X退出，Y保存，回车，完成编辑。</p>
<hr>
<h3 id="配置文件简单说明："><a href="#配置文件简单说明：" class="headerlink" title="配置文件简单说明："></a>配置文件简单说明：</h3><p><code>inbounds</code>：入站配置</p>
<p><code>port</code>：服务器监听端口，可以自己修改</p>
<p><code>protocol</code>：入站协议，此处使用VMess</p>
<p><code>settings</code>：VMess的设置</p>
<p><code>clients</code>：客户端</p>
<p><code>id</code>：一个UUID，用于加密通信和身份验证，可以用UUID生成器生成：<a href="https://www.uuidgenerator.net/version4">Online UUID Generator Tool</a></p>
<p><code>outbounds</code>：出站设置</p>
<p><code>protocol</code>：出站协议，此处使用freedom，即无限制</p>
<hr>
<h2 id="启动并连接到V2Ray服务器"><a href="#启动并连接到V2Ray服务器" class="headerlink" title="启动并连接到V2Ray服务器"></a>启动并连接到V2Ray服务器</h2><p>使用<code>v2ray run</code>命令来启动v2ray服务端，<code>-c</code>参数可用于指定配置文件路径，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">v2ray run -c /usr/local/etc/v2ray/config.json</span><br></pre></td></tr></table></figure>

<p>在客户端配置指定服务器的IP地址、端口、UUID即可连接，传输层协议默认TCP，加密方式可以选择Auto，VMess的服务端能自适应解密。</p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>至此，一台简单的VMess + TCP的代理服务器搭建完成，可以用于代理上网。</p>
]]></content>
      <categories>
        <category>Tech</category>
        <category>Network</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Network</tag>
        <tag>Circumvention</tag>
        <tag>Proxy</tag>
        <tag>VPS</tag>
      </tags>
  </entry>
  <entry>
    <title>免费领取一台IBM LinuxOne服务器</title>
    <url>/2023/10/22/%E5%85%8D%E8%B4%B9%E9%A2%86%E5%8F%96%E4%B8%80%E5%8F%B0IBM%20LinuxOne%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近一直在找低价格的云服务器，没想到IBM LinuxOne居然有永久免费的云服务器可以领，配置还很不错，直接进行一个白嫖。</p>
<span id="more"></span>

<h2 id="注册过程"><a href="#注册过程" class="headerlink" title="注册过程"></a>注册过程</h2><p>很简单，只要打开IBM LinuxOne的站点，点注册就行了：<a href="https://linuxone.cloud.marist.edu/#/instance">LinuxONE Community Cloud (marist.edu)</a></p>
<img src="/2023/10/22/%E5%85%8D%E8%B4%B9%E9%A2%86%E5%8F%96%E4%B8%80%E5%8F%B0IBM%20LinuxOne%E6%9C%8D%E5%8A%A1%E5%99%A8/Register.png" class="" title="Register-UI">

<p>然后随便填写信息，注意邮箱不要乱填了，因为会有一封确认邮件。</p>
<p>Description of Your Project乱填就好了，比如说Web Development, Game Development等等。</p>
<p>过几个小时会有一封确认邮件发到邮箱，链接有效期48小时，点击即可激活账号。</p>
<p>激活账号后就可以部署云服务器了，配置还是非常不错的，特别是在永久免费的云服务器当中：</p>
<p><strong>CPU</strong>: 2v CPU</p>
<p><strong>RAM</strong>: 4GB</p>
<p><strong>SSD</strong>: 50GB</p>
]]></content>
      <categories>
        <category>Tech</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>VPS</tag>
      </tags>
  </entry>
  <entry>
    <title>在Debian 12上搭建简单的MineCraft Forge服务器</title>
    <url>/2023/10/21/%E5%9C%A8Debian-12%E4%B8%8A%E6%90%AD%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9A%84MineCraft-Forge%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>昨天看到了阿里云的经济型e服务器，感觉性价比挺不错的，因此尝试用来搭一台MineCraft服务器玩玩，这样用Curtain之类的模组挂机很方便。</p>
<span id="more"></span>

<hr>
<h2 id="VPS基本配置信息"><a href="#VPS基本配置信息" class="headerlink" title="VPS基本配置信息"></a>VPS基本配置信息</h2><p>阿里云经济型e服务器购买地址：<a href="https://www.aliyun.com/daily-act/ecs/ecs/detail/e">云服务器ECS e实例-阿里云 (aliyun.com)</a></p>
<p><strong>CPU</strong>: 2vCPU</p>
<p><strong>RAM</strong>: 8GB</p>
<p><strong>SSD</strong>: 20GB</p>
<p><strong>Bandwidth</strong>: 5Mbps</p>
<p><strong>OS</strong>: Debian 12.2 x64</p>
<hr>
<h2 id="MineCraft配置信息"><a href="#MineCraft配置信息" class="headerlink" title="MineCraft配置信息"></a>MineCraft配置信息</h2><p><strong>Version</strong>: 1.18.2 Java Edition</p>
<p><strong>Mod API</strong>: Forge 40.2.10</p>
<p><strong>JDK</strong>：OpenJDK 17</p>
<hr>
<h2 id="搭建使用工具"><a href="#搭建使用工具" class="headerlink" title="搭建使用工具"></a>搭建使用工具</h2><p>XShell Community + XFTP Community	免费下载地址：<a href="https://www.netsarang.com/en/xshell/">XSHELL - The Industry’s Most Powerful SSH Client (netsarang.com)</a></p>
<p>当然其他工具包应该也是完全可以的，MobaXterm之类的，不过如果只用PuTTY之类的简单工具可能在模组传输过程中有点麻烦，这方面个人没研究过。</p>
<p>或许可以试试FTP之类的工具，实在不行就用curl或者wget慢慢下（？）</p>
<hr>
<h2 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h2><h3 id="安装OpenJDK"><a href="#安装OpenJDK" class="headerlink" title="安装OpenJDK"></a>安装OpenJDK</h3><p>首先通过密钥对或用户名+密码的方式，使用XShell登录远程服务器。</p>
<p>首先是例行更新一下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get update -y</span><br><span class="line">apt-get upgrade -y</span><br></pre></td></tr></table></figure>

<p>这里以我决定搭建的MineCraft 1.18.2 JE为例，它需要Java 16+，那么我安装Java 17。</p>
<p>（PS：Java版本通常而言越高越好，但这并非绝对，例如1.12.2及以下的一些版本就只能通过Java 8运行，这里需要根据自己的需求来修改）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install openjdk-17-jdk</span><br></pre></td></tr></table></figure>



<h3 id="Forge服务端部署"><a href="#Forge服务端部署" class="headerlink" title="Forge服务端部署"></a>Forge服务端部署</h3><h4 id="获取Forge下载链接"><a href="#获取Forge下载链接" class="headerlink" title="获取Forge下载链接"></a>获取Forge下载链接</h4><p>打开Forge的官方网站 <a href="https://files.minecraftforge.net/net/minecraftforge/forge/">Downloads for Minecraft Forge</a>，找到自己对应游戏版本的Forge。</p>
<p>这里以1.18.2 Forge 40.2.10为例：</p>
<img src="/2023/10/21/%E5%9C%A8Debian-12%E4%B8%8A%E6%90%AD%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9A%84MineCraft-Forge%E6%9C%8D%E5%8A%A1%E5%99%A8/Forge-Web-Download.png" class="" title="Forge-Web-Download">

<p>右键Installer，点击复制链接，复制到剪贴板，此时你会得到这样的一条链接：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">https://adfoc.us/serve/sitelinks/?id=<span class="number">271228</span>&amp;url=https://maven.minecraftforge.net/net/minecraftforge/forge/<span class="number">1.18</span>.<span class="number">2</span>-<span class="number">40.2</span>.<span class="number">10</span>/forge-<span class="number">1.18</span>.<span class="number">2</span>-<span class="number">40.2</span>.<span class="number">10</span>-installer.jar</span><br></pre></td></tr></table></figure>

<p>此时，你需要把第二个”https:&#x2F;&#x2F;“之前的部分去掉，得到这样的一条链接：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">https://maven.minecraftforge.net/net/minecraftforge/forge/<span class="number">1.18</span>.<span class="number">2</span>-<span class="number">40.2</span>.<span class="number">10</span>/forge-<span class="number">1.18</span>.<span class="number">2</span>-<span class="number">40.2</span>.<span class="number">10</span>-installer.jar</span><br></pre></td></tr></table></figure>

<p>这就是需要用到的链接</p>
<h4 id="安装Forge服务端"><a href="#安装Forge服务端" class="headerlink" title="安装Forge服务端"></a>安装Forge服务端</h4><p>此时需要写一条下载Forge的命令，注意，这条命令根据自己刚才得到的链接来修改：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O installer.jar https://maven.minecraftforge.net/net/minecraftforge/forge/1.18.2-40.2.10/forge-1.18.2-40.2.10-installer.jar</span><br></pre></td></tr></table></figure>

<p>在服务端根目录下创建一个MineCraft Forge自己的文件夹吧，这样方便管理，不容易混淆。</p>
<p>当然，你完全可以自己修改到一个想要安装的位置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /</span><br><span class="line"><span class="built_in">mkdir</span> Forge</span><br><span class="line"><span class="built_in">cd</span> /Forge</span><br></pre></td></tr></table></figure>

<p>下载完成之后，就可以用Java运行Forge安装包来安装MineCraft Forge服务端了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -jar installer.jar --installServer</span><br></pre></td></tr></table></figure>



<h4 id="安装模组"><a href="#安装模组" class="headerlink" title="安装模组"></a>安装模组</h4><p>新建一个mods文件夹，用来存放模组：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> mods</span><br></pre></td></tr></table></figure>

<p>此时，如果有XFTP这样的文件传输工具，你可以直接连接到VPS，然后直接用GUI操作，把本地已经准备好的模组文件都复制到服务端的&#x2F;Forge&#x2F;mods文件夹当中就可以了。</p>
<p>（注意：最好查一下 <a href="https://www.mcmod.cn/">MC百科</a> 或 <a href="https://www.curseforge.com/minecraft">CurseForge</a> 来确认一部分模组是否有必要在服务端安装。一些“服务端可选”的模组安装了也问题不大，但是一些“服务端无效”的模组请尽量删除（例如：Rubidium，Oculus等），否则可能会造成服务器启动失败。）</p>
<h4 id="首次启动"><a href="#首次启动" class="headerlink" title="首次启动"></a>首次启动</h4><h5 id="尝试运行服务端"><a href="#尝试运行服务端" class="headerlink" title="尝试运行服务端"></a>尝试运行服务端</h5><p>Forge 1.17+自带了这样的一个一键脚本，可以运行MineCraft服务端，你只需要启用一键脚本就可以了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/Forge/run.sh nogui</span><br></pre></td></tr></table></figure>

<p>Forge 之前版本需要Java设置一些参数来启动，这里以MineCraft 1.12.2 JE Forge 23.5.2859为例，之后的启动方法同理：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -jar -Xmx4096M -Xms2048M forge-1.12.2-14.23.5.2859.jar nogui</span><br></pre></td></tr></table></figure>

<p>（PS：如果你有Xmanager，那么可以去掉”nogui”，因为XShell会自动调用Xmanager处理GUI的交互部分）</p>
<h5 id="同意用户协议"><a href="#同意用户协议" class="headerlink" title="同意用户协议"></a>同意用户协议</h5><p>首次启动会失败，然后创建一个eula.txt文件，这是用户协议，我们必须同意协议才能进行游戏。</p>
<p>我们可以用各种文本编辑器来修改它，nano、vim都可以。这里以最简单的nano为例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano eula.txt</span><br></pre></td></tr></table></figure>

<p>此时就进入了eula.txt的编辑界面：</p>
<img src="/2023/10/21/%E5%9C%A8Debian-12%E4%B8%8A%E6%90%AD%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9A%84MineCraft-Forge%E6%9C%8D%E5%8A%A1%E5%99%A8/eula-txt.png" class="" title="eula.txt">

<p>通过上下左右键可以操作光标，只要把false改成true就可以了，代表同意用户协议。</p>
<p>然后Ctrl+X退出，Y保存修改，回车，这样就保存了更改。</p>
<h4 id="第二次启动"><a href="#第二次启动" class="headerlink" title="第二次启动"></a>第二次启动</h4><h5 id="尝试运行服务端-1"><a href="#尝试运行服务端-1" class="headerlink" title="尝试运行服务端"></a>尝试运行服务端</h5><p>现在可以第二次运行MineCraft服务器了，这会生成一个世界，加载模组资源，并初始化所有配置文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/Forge/run.sh nogui</span><br></pre></td></tr></table></figure>

<p>如果启动失败，那么基本上有两种原因。如果显示killed，那么是服务器资源不足，如果显示大量的报错信息，那么基本可以确定是模组冲突。</p>
<h5 id="资源不足"><a href="#资源不足" class="headerlink" title="资源不足"></a>资源不足</h5><h6 id="1-17"><a href="#1-17" class="headerlink" title="1.17+"></a>1.17+</h6><p>可以尝试调整user_jvm_args.txt文件中的配置，把内存拉低一些，但是通常而言最好不要低于1G。</p>
<h6 id="1-17-1"><a href="#1-17-1" class="headerlink" title="1.17-"></a>1.17-</h6><p>可以尝试调整运行参数，把运行参数降下来。因为一般而言killed都是内存不足导致的。</p>
<h5 id="报错信息"><a href="#报错信息" class="headerlink" title="报错信息"></a>报错信息</h5><p>阅读红色的报错日志，看看究竟是什么模组出问题了，是什么模组之间发生冲突了。</p>
<p>然后进入mods文件夹，通过rm指令删除对应的模组即可，有XFTP的可以通过图形化界面来操作，更容易。</p>
<h5 id="退出-修改服务端配置文件"><a href="#退出-修改服务端配置文件" class="headerlink" title="退出 修改服务端配置文件"></a>退出 修改服务端配置文件</h5><p>世界生成完毕后，个人的建议是先退出：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/stop</span><br></pre></td></tr></table></figure>

<p>此时你可以检查一下目前的&#x2F;Forge文件夹，发现创建了很多文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ls</span></span><br></pre></td></tr></table></figure>

<p>可以尝试修改一下服务端配置文件，定制化你的游戏体验，这一部分不详细赘述：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano server.properties</span><br></pre></td></tr></table></figure>



<h4 id="正式启动"><a href="#正式启动" class="headerlink" title="正式启动"></a>正式启动</h4><h5 id="使用Screen分屏功能-在后台运行MineCraft"><a href="#使用Screen分屏功能-在后台运行MineCraft" class="headerlink" title="使用Screen分屏功能 在后台运行MineCraft"></a>使用Screen分屏功能 在后台运行MineCraft</h5><p>个人推荐使用screen分屏功能来简单地管理MineCraft服务器，这样只需要后台挂一个窗口就行，期间服务器可以做别的事情。</p>
<p>安装screen：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install screen</span><br></pre></td></tr></table></figure>

<p>使用screen进行分屏操作（示例，分屏名称完全可以自选）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen -S Forge</span><br></pre></td></tr></table></figure>

<p>运行MineCraft服务端：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/Forge/run.sh nogui</span><br></pre></td></tr></table></figure>

<p>退出分屏：</p>
<p>Ctrl + A + D</p>
<h5 id="管理之前的分屏"><a href="#管理之前的分屏" class="headerlink" title="管理之前的分屏"></a>管理之前的分屏</h5><p>查看现有分屏：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen -<span class="built_in">ls</span></span><br></pre></td></tr></table></figure>

<p>恢复上一次的分屏会话：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen -r</span><br></pre></td></tr></table></figure>

<p>恢复特定的分屏会话（示例，选择你自己想要进入的那个分屏）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen -r Forge</span><br></pre></td></tr></table></figure>

<p>至此，MineCraft Forge服务端搭建过程已经完成。</p>
<h2 id="配置防火墙规则"><a href="#配置防火墙规则" class="headerlink" title="配置防火墙规则"></a>配置防火墙规则</h2><h3 id="云服务供应商控制台"><a href="#云服务供应商控制台" class="headerlink" title="云服务供应商控制台"></a>云服务供应商控制台</h3><p>个人使用的服务器为阿里云，这类云服务厂商提供单独的安全组&#x2F;防火墙策略。需要在控制面板上找到安全组，手动添加一条TCP规则。</p>
<p>端口默认是25565，如果你修改过server.properties文件，那么请根据你自己设置的端口号开放端口访问权限。</p>
<img src="/2023/10/21/%E5%9C%A8Debian-12%E4%B8%8A%E6%90%AD%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9A%84MineCraft-Forge%E6%9C%8D%E5%8A%A1%E5%99%A8/Security-Group.png" class="" title="Security-Group-Example">

<h3 id="UFW等内置防火墙"><a href="#UFW等内置防火墙" class="headerlink" title="UFW等内置防火墙"></a>UFW等内置防火墙</h3><p>如果你的服务器没有控制台的防火墙规则，你又不希望把所有端口全部开放，那么可以尝试使用ufw这样的简单防火墙工具。</p>
<p>首先检查一下ufw是否安装好了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install ufw</span><br></pre></td></tr></table></figure>

<p>然后开放ufw的几个关键端口：</p>
<p>（PS：请一定要确认SSH端口是不是默认的22，有些云服务供应商不是的，别一个防火墙把自己的SSH连接给掐断了）</p>
<p>（PS：这里的25565端口也是MineCraft默认的服务器端口，如果改过server.properties文件，还是要根据自己的设置来调整）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ufw allow ssh</span><br><span class="line">ufw allow 25565</span><br></pre></td></tr></table></figure>

<p>启用ufw防火墙：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ufw <span class="built_in">enable</span></span><br></pre></td></tr></table></figure>

<p>简单检查一下防火墙的运行状态：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ufw status</span><br></pre></td></tr></table></figure>



<h2 id="客户端连接MineCraft服务器进行游玩"><a href="#客户端连接MineCraft服务器进行游玩" class="headerlink" title="客户端连接MineCraft服务器进行游玩"></a>客户端连接MineCraft服务器进行游玩</h2><h3 id="关于模组兼容"><a href="#关于模组兼容" class="headerlink" title="关于模组兼容"></a>关于模组兼容</h3><p>根据个人经验，客户端模组和服务端模组是这样的关系：</p>
<p>如果某个模组要求客户端需装，服务端需装，那么客户端和服务端必须同时安装这个模组。（此类模组多为内容模组，例如世界生成、科技、魔法、农业等）</p>
<p>如果某个模组要求客户端需装，服务端可选，那么通常而言，客户端安装这个模组即可。（此类模组多为辅助模组，例如操作、面板、管理、地图、优化等）</p>
<p>如果某个模组要求客户端需装，服务端无效，那么最好不要在服务端安装这个模组。（此类模组多为深度优化模组，例如Rubidium, Sodium, Oculus, Iris）</p>
<h3 id="客户端连接方式"><a href="#客户端连接方式" class="headerlink" title="客户端连接方式"></a>客户端连接方式</h3><p>打开游戏，多人游戏，添加服务器。</p>
<p>输入备注，服务器IP地址、端口即可。不填端口的话就会尝试连接默认的25565端口。</p>
<p>提示模组不兼容很正常，这通常是因为客户端和服务端优化模组等差异造成的。此时不要直接放弃，一定要尝试连接一下。如果有一些模组不匹配，通常会收到一些信息，那么你可以在服务器后台或者客户端安装一些模组来补全。大多数情况下，就算模组列表不匹配，还是可以游玩的。</p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>至此，一台可运行的MineCraft Forge服务器已经搭建完成并上线运行。</p>
<p>个人水平有限，应该还有很多没有讲到的地方，之后如果发现了也会尝试补充完善。</p>
<p>本教程比较依赖XShell &#x2F; XFTP工具包，因此操作中出现很多“偷懒”的地方。</p>
<p>希望这篇文章能对想要自建MineCraft Forge服务器的用户有所帮助。</p>
]]></content>
      <categories>
        <category>Tech</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>VPS</tag>
        <tag>MineCraft</tag>
      </tags>
  </entry>
  <entry>
    <title>在Qt Creator中使用OpenSSL</title>
    <url>/2023/11/14/%E5%9C%A8Qt-Creator%E4%B8%AD%E4%BD%BF%E7%94%A8OpenSSL/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在折腾Qt，刚好可以做一些加解密的桌面应用来玩。因此就尝试在Qt Creator中集成OpenSSL。</p>
<span id="more"></span>

<hr>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p><strong>OS</strong>: Windows 10&#x2F;11</p>
<p><strong>IDE</strong>: Qt Creator 11.0.3 (Open Source)	下载链接：<a href="https://www.qt.io/download-qt-installer-oss?hsCtaTracking=99d9dd4f-5681-48d2-b096-470725510d34%7C074ddad0-fdef-4e53-8aa8-5e8a876d6ab4">Download Qt OSS: Get Qt Online Installer</a></p>
<p><strong>OpenSSL</strong>: OpenSSL 3.1.2 Win64		 下载链接：<a href="https://slproweb.com/products/Win32OpenSSL.html">Win32&#x2F;Win64 OpenSSL Installer for Windows - Shining Light Productions (slproweb.com)</a></p>
<hr>
<h2 id="QMake"><a href="#QMake" class="headerlink" title="QMake"></a>QMake</h2><p>QMake集成OpenSSL非常简单。</p>
<p>新建Qt项目时选择QMake，然后进入项目的<code>.pro</code>文件，添加这两行：</p>
<p>（PS：把示例中的路径修改为你自己的OpenSSL安装路径）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">INCLUDEPATH += D:\Lib\OpenSSL-Win64\include</span><br><span class="line">LIBS += -L&quot;D:\Lib\OpenSSL-Win64\lib&quot; -lssl -lcrypto</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="CMake"><a href="#CMake" class="headerlink" title="CMake"></a>CMake</h2><p>未完待续……</p>
]]></content>
      <categories>
        <category>Tech</category>
        <category>Crypto</category>
      </categories>
      <tags>
        <tag>OpenSSL</tag>
        <tag>Crypto</tag>
        <tag>C++</tag>
        <tag>Qt</tag>
      </tags>
  </entry>
  <entry>
    <title>在GitHub Pages上使用Hexo搭建简单的个人博客</title>
    <url>/2023/10/18/%E5%9C%A8Github%20Pages%E4%B8%8A%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一个简单的操作流程，自己也失败了很多次，不过好歹是成功了，记一下</p>
<p>个人使用的搭建本地环境就是Windows 10，macOS据说差不多。</p>
<span id="more"></span>

<h2 id="Node-js环境配置"><a href="#Node-js环境配置" class="headerlink" title="Node.js环境配置"></a>Node.js环境配置</h2><p>首先看看有没有安装Node.js：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure>

<p>如果没有的话安装Node.js 18+，18-话ShokaX不能运行：<a href="https://nodejs.org/en">Node.js (nodejs.org)</a></p>
<p>一般而言npm也是会一并安装的</p>
<p>装好了以后确认一下有没有成功安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>

<p>如果能够正确地显示版本信息，那么安装成功，Node.js环境配置完成</p>
<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>通过npm包管理工具安装Hexo：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>安装完成后，确认一下Hexo的版本信息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure>

<p>如果能够正确显示版本信息，安装成功，Hexo下载安装完成。</p>
<h2 id="部署本地Hexo页面"><a href="#部署本地Hexo页面" class="headerlink" title="部署本地Hexo页面"></a>部署本地Hexo页面</h2><p>去文件资源管理器里面随便选个位置，创建一个新文件夹，然后在CLI把目录切换到这个文件夹：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> C:\Users\Your_Account\Your_Blog_Files	<span class="comment">#注意把路径改成自己电脑上的文件路径</span></span><br></pre></td></tr></table></figure>

<p>使用Hexo初始化博客文件夹：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>

<p>博客文件夹初始化完成，现在已经可以尝试生成页面：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g		<span class="comment">#hexo generate的缩写</span></span><br><span class="line">hexo s		<span class="comment">#hexo server的缩写</span></span><br></pre></td></tr></table></figure>

<p>如果没有报错，此时打开浏览器输入<a href="localhost:4000">localhost:4000</a>或 <a href="127.0.0.1:4000">127.0.0.1:4000</a>应该已经可以展示一个最基本的Hexo博客页面</p>
<p>如果想要创建一篇新的博文，可以使用Hexo的new命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo n <span class="string">&quot;Your_First_Blog_Post&quot;</span>		<span class="comment">#hexo new的缩写 把标题改成自己喜欢的标题</span></span><br></pre></td></tr></table></figure>

<p>然后可以通过VSCode来尝试打开文章的Markdown文件，或者你可以用更加专业的编辑器，直接在文件资源管理器中打开。<br>这部分可以随意设置，记得Ctrl+S保存。</p>
<p>设置好文章的内容之后，如果你想要更新本地的博客，可以先尝试清理之前的博客：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure>

<p>可以重复生成时使用的命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>



<h2 id="部署Github-Pages"><a href="#部署Github-Pages" class="headerlink" title="部署Github Pages"></a>部署Github Pages</h2><p>打开你的Github 创建一个新的仓库，命名为 <a href="username.github.io">username.github.io</a>，此处的username改成你自己的Github用户名</p>
<p>在本地的博客文件夹下，找到<code>_config.yml</code>，用一个文本编辑器打开它，VSCode，Notepad等等都可以。</p>
<p>直接拉到底，进行修改：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">type:</span> <span class="string">&#x27;git&#x27;</span></span><br><span class="line"><span class="attr">repo:</span> <span class="string">https://github.com/Username/BUsername.github.io.git</span></span><br><span class="line"><span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure>

<p>修改完成后保存，可以退出</p>
<p>使用npm安装Hexo的Git部署工具：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure>

<p>一般而言就可以成功。如果出错，请检查你的配置文件<code>_config.yml</code>，或检查你的网络情况。如果实在不行，可以尝试清空博客文件夹进行重试。</p>
<h2 id="更新博文"><a href="#更新博文" class="headerlink" title="更新博文"></a>更新博文</h2><p>想要创建新的博文，就在CLI中继续使用命令新建文章，然后使用各种方便的Markdown编辑工具，如Typora，VSCode等进行编辑。</p>
<p>创建新博文：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo n <span class="string">&quot;new_post_example&quot;</span></span><br></pre></td></tr></table></figure>

<p>更新本地博客：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure>

<p>尝试查看本地博客：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>然后在浏览器中输入 <a href="localhost:4000">localhost:4000</a> 或 <a href="127.0.0.1:4000">127.0.0.1:4000 </a> 进行预览，觉得样式满意了之后，可以同步到Github Pages（网页端）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Tech</category>
        <category>Web Front-End</category>
      </categories>
      <tags>
        <tag>Web Front-End</tag>
        <tag>Node.js</tag>
      </tags>
  </entry>
  <entry>
    <title>在Ubuntu 23上搭建简单的Shadowsocks-Libev服务器</title>
    <url>/2023/10/18/%E5%9C%A8Ubuntu%2023%E4%B8%8A%E6%90%AD%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9A%84Shadowsocks-Libev%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一个简单的Shadowsocks-Libev服务器搭建过程，系统为Ubuntu，因为自带了Snap应用商店等多种工具包，很方便。</p>
<p>当然你得提前准备一台VPS，建议用Vultr，Digital Ocean之类的，性价比高，随用随抛。配置可以丐中丐，流量和带宽一定不能差了。</p>
<p>如果你追求稳定，那么建议最好还是不要用Shadowsocks协议。</p>
<span id="more"></span>

<hr>
<h2 id="系统更新与软件安装"><a href="#系统更新与软件安装" class="headerlink" title="系统更新与软件安装"></a>系统更新与软件安装</h2><p>首先例行更新：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get update -y</span><br><span class="line">apt-get upgrade -y</span><br></pre></td></tr></table></figure>

<p>然后用Snap应用商店安装Core</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">snap install core</span><br></pre></td></tr></table></figure>

<p>Snap安装Shadowsocks-Libev</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">snap install shadowsocks-libev --edge</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>用nano打开Shadowsocks配置文件路径，当然如果你会vim，那更好</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano /var/snap/shadowsocks-libev/common/etc/shadowsocks-libev/config.json</span><br></pre></td></tr></table></figure>

<p>以下是一个示例的配置文件：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;server&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;::0&quot;</span><span class="punctuation">,</span><span class="string">&quot;0.0.0.0&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;server_port&quot;</span><span class="punctuation">:</span><span class="number">16384</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;method&quot;</span><span class="punctuation">:</span><span class="string">&quot;aes-128-gcm&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span><span class="string">&quot;IRBa9FdVrSL147CL&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span><span class="string">&quot;tcp_and_udp&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;fast_open&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>简单介绍一下这个配置文件中可能需要修改的地方：</p>
<h3 id="服务器端口号"><a href="#服务器端口号" class="headerlink" title="服务器端口号"></a>服务器端口号</h3><p>这是Shadowsocks服务端的监听端口号，你可以随便换一个你喜欢的端口号，但是换成80, 443之类的常用端口也不能提高你的安全性</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;server_port&quot;</span><span class="punctuation">:</span><span class="number">16384</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure>

<h3 id="对称加密算法"><a href="#对称加密算法" class="headerlink" title="对称加密算法"></a>对称加密算法</h3><p>Shadowsocks使用多种对称加密算法，这里建议选择AEAD加密算法（性能高、抗重放攻击、兼容性好），Shadowsocks支持的AEAD加密算法包括：</p>
<ol>
<li><p>AES-128-GCM</p>
</li>
<li><p>AES-192-GCM</p>
</li>
<li><p>AES-256-GCM</p>
</li>
<li><p>Chacha20-IETF-Poly1305</p>
</li>
<li><p>XChacha20-IETF-Poly1305</p>
</li>
<li><p>2022-BLAKE3-AES-128-GCM</p>
</li>
<li><p>2022-BLAKE3-AES-256-GCM</p>
</li>
<li><p>2022-BLAKE3-Chacha20-IETF-Poly1305</p>
</li>
</ol>
<p>这个选择就看你心情了，记得客户端和服务端的加密算法选择必须是一致的，否则无法成功解密</p>
<p>AES-GCM的话，密钥长度越大理论上安全性就越高（然而实际上128位也非常安全），同时对硬件的压力就越大，不过一般而言压力都不算很大</p>
<p>Chacha20-IETF-Poly1305是一种AEAD流密码，性能很高，如果你的设备CPU不太好可以选，不过一般而言AES-128-GCM也足够快</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;method&quot;</span><span class="punctuation">:</span><span class="string">&quot;aes-128-gcm&quot;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure>

<p>当然，如果你很叛逆，你一定要用老式流密码或者不带认证的块密码，那也是完全可以的。只要你的客户端和服务端同时支持，而且你很自信：</p>
<ol>
<li><p>RC4</p>
</li>
<li><p>RC4-MD5</p>
</li>
<li><p>AES-128-CTR</p>
</li>
<li><p>xxxxxxxxxx hexo dbash</p>
</li>
<li><p>AES-256-CTR</p>
</li>
<li><p>AES-128-CFB</p>
</li>
<li><p>AES-192-CFB</p>
</li>
<li><p>AES-256-CFB</p>
</li>
<li><p>AES-128-CFB8</p>
</li>
<li><p>AES-192-CFB8</p>
</li>
<li><p>AES-256-CFB8</p>
</li>
<li><p>AES-128-OFB</p>
</li>
<li><p>AES-192-OFB</p>
</li>
<li><p>AES-256-OFB</p>
</li>
<li><p>BF-CFB</p>
</li>
<li><p>CAST5-CFB</p>
</li>
<li><p>DES-CFB</p>
</li>
<li><p>IDEA-CFB</p>
</li>
<li><p>RC2-CFB</p>
</li>
<li><p>SEED-CFB</p>
</li>
<li><p>Camellia-128-CFB</p>
</li>
<li><p>Camellia-192-CFB</p>
</li>
<li><p>Camellia-256-CFB</p>
</li>
<li><p>Camellia-128-CFB8</p>
</li>
<li><p>Camellia-192-CFB8</p>
</li>
<li><p>Camellia-256-CFB8</p>
</li>
<li><p>Salsa20</p>
</li>
<li><p>Chacha20</p>
</li>
<li><p>Chacha20-IETF</p>
</li>
<li><p>XChacha20</p>
<p>那么举个例子，你就可以这样设置，当然很多客户端和服务端已经弃用流密码了，不保证这些加密算法都还能兼容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;method&quot;</span>:<span class="string">&quot;rc4-md5&quot;</span>,</span><br></pre></td></tr></table></figure>

<p>如果你用这些老加密算法设置失败了，服务端会自动把加密算法设置为Chacha20-IETF-Poly1305。</p>
</li>
</ol>
<h3 id="预共享密钥（PSK）"><a href="#预共享密钥（PSK）" class="headerlink" title="预共享密钥（PSK）"></a>预共享密钥（PSK）</h3><p>客户端与服务端之间共享的一个密钥字符串，Shadowsocks安全性的基石。客户端与服务器的PSK必须是一致的。</p>
<p>虽然说你输入的这个密钥并不会真的直接被加密算法使用，但是还是建议使用12字节以上的，具有一定随机性的PSK。</p>
<p>这并不是说AES-GCM或者Chacha20不可靠，而是Shadowsocks长期依赖一个PSK进行通信。以下是一个例子：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;password&quot;</span><span class="punctuation">:</span><span class="string">&quot;xMZpoL46GhfrJgEP&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="传输层协议"><a href="#传输层协议" class="headerlink" title="传输层协议"></a>传输层协议</h3><p>使用的传输层协议，看你自己的需求来设置</p>
<p>TCP + UDP：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span><span class="string">&quot;tcp_and_udp&quot;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure>

<p>TCP：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span><span class="string">&quot;tcp_only&quot;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure>

<h3 id="TCP-Fast-Open"><a href="#TCP-Fast-Open" class="headerlink" title="TCP Fast Open"></a>TCP Fast Open</h3><p>打开没问题，因为目前Shadowsocks的密码学安全性似乎没什么问题：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;fast_open&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span></span><br></pre></td></tr></table></figure>

<p>当然你要是就是不想开，那你就把它关了：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;fast_open&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span></span><br></pre></td></tr></table></figure>

<p>至此，Shadowsocks服务端配置文件基本参数设置完毕，nano可以Ctrl+X退出，保存Y，并回车。</p>
<h2 id="运行Shadowsocks服务与防火墙"><a href="#运行Shadowsocks服务与防火墙" class="headerlink" title="运行Shadowsocks服务与防火墙"></a>运行Shadowsocks服务与防火墙</h2><h3 id="运行Shadowsocks服务"><a href="#运行Shadowsocks服务" class="headerlink" title="运行Shadowsocks服务"></a>运行Shadowsocks服务</h3><p>使用以下命令来开启服务端的Shadowsocks-Libev服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start snap.shadowsocks-libev.ss-server-daemon.service</span><br></pre></td></tr></table></figure>

<p>可以使用这个命令来查看你的Shadowsocks-Libev服务器运行状态：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl status snap.shadowsocks-libev.ss-server-daemon.service</span><br></pre></td></tr></table></figure>

<p>如果正常运行，那么你会看到绿色的提示信息。记得观察一下加密算法，如果你的加密算法设置不被兼容或者拼写出错，那么服务器会将其自动修改为Chacha20-IETF-Poly1305，客户端连接的时候别弄错了。</p>
<p>可以设置一下Shadowsocks的开机自启动，以免一个reboot或者IDC维护了一下就掉线了：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> snap.shadowsocks-libev.ss-server-daemon.service</span><br></pre></td></tr></table></figure>

<h3 id="配置防火墙"><a href="#配置防火墙" class="headerlink" title="配置防火墙"></a>配置防火墙</h3><p>很简单，首先，如果你是通过SSH连接的VPS，给防火墙添加这条规则，以免开了防火墙以后掉线：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ufw allow ssh</span><br></pre></td></tr></table></figure>

<p>然后让防火墙开放Shadowsocks的监听端口，注意，把此处的端口号改成自己的端口号：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ufw allow 16384</span><br></pre></td></tr></table></figure>

<p>最后开启防火墙，并允许开机自启动，SSH用户需要确认一下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ufw <span class="built_in">enable</span></span><br></pre></td></tr></table></figure>



<p>最后，在客户端配置相同的加密算法，预共享密钥，端口号，并填上服务器的IPv4或IPv6地址，即可完成连接，使用Shadowsocks代理服务器。</p>
<p>这是一个Shadowsocks-Windows的GUI客户端的下载地址：<a href="https://github.com/shadowsocks/shadowsocks-windows/releases">Shadowsocks-Windows(C#)</a></p>
<p>当然你也可以使用其它的代理客户端进行连接，如v2rayN，Sing-Box等，这里不一一列举。</p>
]]></content>
      <categories>
        <category>Tech</category>
        <category>Network</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Network</tag>
        <tag>Circumvention</tag>
        <tag>Proxy</tag>
        <tag>VPS</tag>
      </tags>
  </entry>
  <entry>
    <title>在Visual Studio 2022中配置Crypto++开发环境</title>
    <url>/2023/11/11/%E5%9C%A8Visual-Studio-2022%E4%B8%AD%E9%85%8D%E7%BD%AECrypto-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><code>Crypto++</code>是一个轻量、开源、受欢迎的<code>C++</code>密码学库，采用了OOP的程序设计思想，总体比较契合<code>C++</code>的程序设计风格。</p>
<p>本文主要介绍如何在Visual Studio 2022中配置<code>Crypto++</code>的开发环境。本文作者是个菜逼，失败了很多次，因此可能存在很多纰漏。</p>
<span id="more"></span>

<hr>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p><strong>OS:</strong> Windows 10&#x2F;11</p>
<p><strong>IDE:</strong> Visual Studio 2022 (C++ SDK)</p>
<p><strong>C++ 编译器:</strong> MSVC</p>
<p><strong>Crypto++版本:</strong> Crypto++ 8.9.0</p>
<hr>
<h2 id="下载并解压Crypto"><a href="#下载并解压Crypto" class="headerlink" title="下载并解压Crypto++"></a>下载并解压Crypto++</h2><p>在<code>Crypto++</code>的官方网站可以下载<code>Crypto++</code>，选择自己想要使用的版本即可：</p>
<p><a href="https://www.cryptopp.com/#download">Crypto++ Library 8.9 | Free C++ Class Library of Cryptographic Schemes (cryptopp.com)</a></p>
<p>下载后，把<code>Crypto++</code>的压缩包解压到自己想要存放Crypto++的文件夹，这里要注意，压缩包没有内层文件夹，因此最好不要解压<code>D:\Download</code>之类的目录下，否则容易造成混乱。</p>
<hr>
<h2 id="编译Crypto"><a href="#编译Crypto" class="headerlink" title="编译Crypto++"></a>编译Crypto++</h2><hr>
<h3 id="打开项目"><a href="#打开项目" class="headerlink" title="打开项目"></a>打开项目</h3><p>进入<code>Crypto++</code>解压后的文件夹，找到<code>cryptest.sln</code>这个文件，双击用Visual Studio打开它。</p>
<hr>
<h3 id="Debug模式编译"><a href="#Debug模式编译" class="headerlink" title="Debug模式编译"></a>Debug模式编译</h3><p>注意生成选项，对于64位系统建议选择x64。先选择Debug模式。</p>
<img src="/2023/11/11/%E5%9C%A8Visual-Studio-2022%E4%B8%AD%E9%85%8D%E7%BD%AECrypto-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/Options-1.png" class="" title="Options-1">

<p>在右侧的项目文件夹找到<code>cryptlib</code>，右键单击，生成：</p>
<img src="/2023/11/11/%E5%9C%A8Visual-Studio-2022%E4%B8%AD%E9%85%8D%E7%BD%AECrypto-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/Cryptlib.png" class="" title="Cryptlib">

<p>Visual Studio会尝试编译<code>cryptlib</code>，这个过程需要一点时间，可以在下方的控制台看到进度。</p>
<hr>
<h3 id="Release模式编译"><a href="#Release模式编译" class="headerlink" title="Release模式编译"></a>Release模式编译</h3><p>切换到Release模式。</p>
<img src="/2023/11/11/%E5%9C%A8Visual-Studio-2022%E4%B8%AD%E9%85%8D%E7%BD%AECrypto-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/Options-2.png" class="" title="Options-2">

<p>在右侧的项目文件夹找到<code>cryptlib</code>，右键单击，生成。</p>
<img src="/2023/11/11/%E5%9C%A8Visual-Studio-2022%E4%B8%AD%E9%85%8D%E7%BD%AECrypto-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/Cryptlib.png" class="" title="Cryptlib">

<p>Visual Studio会尝试编译<code>cryptlib</code>，这个过程需要一点时间，可以在下方的控制台看到进度。</p>
<hr>
<h3 id="编译完成"><a href="#编译完成" class="headerlink" title="编译完成"></a>编译完成</h3><p>到这一步，编译已经完成了。</p>
<hr>
<h2 id="配置Visual-Studio"><a href="#配置Visual-Studio" class="headerlink" title="配置Visual Studio"></a>配置Visual Studio</h2><h3 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h3><p>可以新建一个项目用来测试，打开Visual Studio，创建新项目，控制台应用。</p>
<p>你可以先把这些代码复制到源文件中，以便测试：</p>
<p>（代码来源：<a href="https://www.cryptopp.com/wiki/Advanced_Encryption_Standard">Advanced Encryption Standard - Crypto++ Wiki (cryptopp.com)</a>）</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;cryptlib.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;rijndael.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;modes.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;files.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;osrng.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;hex.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">namespace</span> CryptoPP;</span><br><span class="line"></span><br><span class="line">    AutoSeededRandomPool prng;</span><br><span class="line">    <span class="function">HexEncoder <span class="title">encoder</span><span class="params">(<span class="keyword">new</span> FileSink(std::cout))</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">SecByteBlock <span class="title">key</span><span class="params">(AES::DEFAULT_KEYLENGTH)</span></span>;</span><br><span class="line">    <span class="function">SecByteBlock <span class="title">iv</span><span class="params">(AES::BLOCKSIZE)</span></span>;</span><br><span class="line"></span><br><span class="line">    prng.<span class="built_in">GenerateBlock</span>(key, key.<span class="built_in">size</span>());</span><br><span class="line">    prng.<span class="built_in">GenerateBlock</span>(iv, iv.<span class="built_in">size</span>());</span><br><span class="line"></span><br><span class="line">    std::string plain = <span class="string">&quot;CBC Mode Test&quot;</span>;</span><br><span class="line">    std::string cipher, recovered;</span><br><span class="line"></span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;plain text: &quot;</span> &lt;&lt; plain &lt;&lt; std::endl;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*********************************\</span></span><br><span class="line"><span class="comment">    \*********************************/</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        CBC_Mode&lt; AES &gt;::Encryption e;</span><br><span class="line">        e.<span class="built_in">SetKeyWithIV</span>(key, key.<span class="built_in">size</span>(), iv);</span><br><span class="line"></span><br><span class="line">        <span class="function">StringSource <span class="title">s</span><span class="params">(plain, <span class="literal">true</span>, </span></span></span><br><span class="line"><span class="params"><span class="function">            <span class="keyword">new</span> StreamTransformationFilter(e,</span></span></span><br><span class="line"><span class="params"><span class="function">                <span class="keyword">new</span> StringSink(cipher)</span></span></span><br><span class="line"><span class="params"><span class="function">            ) <span class="comment">// StreamTransformationFilter</span></span></span></span><br><span class="line"><span class="params"><span class="function">        )</span></span>; <span class="comment">// StringSource</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">catch</span>(<span class="type">const</span> Exception&amp; e)</span><br><span class="line">    &#123;</span><br><span class="line">        std::cerr &lt;&lt; e.<span class="built_in">what</span>() &lt;&lt; std::endl;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*********************************\</span></span><br><span class="line"><span class="comment">    \*********************************/</span></span><br><span class="line"></span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;key: &quot;</span>;</span><br><span class="line">    encoder.<span class="built_in">Put</span>(key, key.<span class="built_in">size</span>());</span><br><span class="line">    encoder.<span class="built_in">MessageEnd</span>();</span><br><span class="line">    std::cout &lt;&lt; std::endl;</span><br><span class="line"></span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;iv: &quot;</span>;</span><br><span class="line">    encoder.<span class="built_in">Put</span>(iv, iv.<span class="built_in">size</span>());</span><br><span class="line">    encoder.<span class="built_in">MessageEnd</span>();</span><br><span class="line">    std::cout &lt;&lt; std::endl;</span><br><span class="line"></span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;cipher text: &quot;</span>;</span><br><span class="line">    encoder.<span class="built_in">Put</span>((<span class="type">const</span> byte*)&amp;cipher[<span class="number">0</span>], cipher.<span class="built_in">size</span>());</span><br><span class="line">    encoder.<span class="built_in">MessageEnd</span>();</span><br><span class="line">    std::cout &lt;&lt; std::endl;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*********************************\</span></span><br><span class="line"><span class="comment">    \*********************************/</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        CBC_Mode&lt; AES &gt;::Decryption d;</span><br><span class="line">        d.<span class="built_in">SetKeyWithIV</span>(key, key.<span class="built_in">size</span>(), iv);</span><br><span class="line"></span><br><span class="line">        <span class="function">StringSource <span class="title">s</span><span class="params">(cipher, <span class="literal">true</span>, </span></span></span><br><span class="line"><span class="params"><span class="function">            <span class="keyword">new</span> StreamTransformationFilter(d,</span></span></span><br><span class="line"><span class="params"><span class="function">                <span class="keyword">new</span> StringSink(recovered)</span></span></span><br><span class="line"><span class="params"><span class="function">            ) <span class="comment">// StreamTransformationFilter</span></span></span></span><br><span class="line"><span class="params"><span class="function">        )</span></span>; <span class="comment">// StringSource</span></span><br><span class="line"></span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;recovered text: &quot;</span> &lt;&lt; recovered &lt;&lt; std::endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">catch</span>(<span class="type">const</span> Exception&amp; e)</span><br><span class="line">    &#123;</span><br><span class="line">        std::cerr &lt;&lt; e.<span class="built_in">what</span>() &lt;&lt; std::endl;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="配置VC-参数"><a href="#配置VC-参数" class="headerlink" title="配置VC++参数"></a>配置VC++参数</h3><hr>
<h4 id="进入属性配置"><a href="#进入属性配置" class="headerlink" title="进入属性配置"></a>进入属性配置</h4><p>在右侧的项目文件夹找到项目，右键，单击<code>属性</code></p>
<img src="/2023/11/11/%E5%9C%A8Visual-Studio-2022%E4%B8%AD%E9%85%8D%E7%BD%AECrypto-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/Properties.png" class="">

<hr>
<h4 id="配置包含文件目录"><a href="#配置包含文件目录" class="headerlink" title="配置包含文件目录"></a>配置包含文件目录</h4><p>找到<code>VC++目录</code> - <code>包含目录</code> - <code>编辑</code>：</p>
<img src="/2023/11/11/%E5%9C%A8Visual-Studio-2022%E4%B8%AD%E9%85%8D%E7%BD%AECrypto-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/IncludePath.png" class="" title="Include-Path">

<p>单击<code>新行</code>：</p>
<img src="/2023/11/11/%E5%9C%A8Visual-Studio-2022%E4%B8%AD%E9%85%8D%E7%BD%AECrypto-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/Insert.png" class="" title="Insert">

<p>点击省略号图标，定位到自己存放Crypto++文件的目录：</p>
<img src="/2023/11/11/%E5%9C%A8Visual-Studio-2022%E4%B8%AD%E9%85%8D%E7%BD%AECrypto-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/Locate.png" class="" title="Locate">

<p>点确定，此时如果配置的路径正确，源文件中包含的库文件报错应该已经消除。</p>
<p>但是此时运行程序还是会报错，这是因为没有包含<code>Crypto++</code>的静态链接库。</p>
<hr>
<h4 id="配置静态链接库"><a href="#配置静态链接库" class="headerlink" title="配置静态链接库"></a>配置静态链接库</h4><p>在<code>属性</code>当中找到<code>链接器</code> - <code>附加库目录</code> - <code>编辑</code></p>
<img src="/2023/11/11/%E5%9C%A8Visual-Studio-2022%E4%B8%AD%E9%85%8D%E7%BD%AECrypto-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/IncludeLib.png" class="" title="IncludeLib">

<p>添加新行，定向到之前编译生成的输出静态链接库目录，例如<code>D:\Lib\Cryptopp\Cryptopp\x64\Output\Debug</code>，当然这个路径要换成你自己的。</p>
<p>然后找到<code>链接器</code> - <code>输入</code> - <code>附加依赖项</code> - <code>编辑</code></p>
<img src="/2023/11/11/%E5%9C%A8Visual-Studio-2022%E4%B8%AD%E9%85%8D%E7%BD%AECrypto-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/AdditionalDependency.png" class="" title="Additional-Dependency">

<p>填写一条<code>cryptlib.lib</code>，确定。</p>
<p>此时还是不能够运行，因为调试模式还需要修改一下。</p>
<hr>
<h4 id="Debug模式修改调试运行库"><a href="#Debug模式修改调试运行库" class="headerlink" title="Debug模式修改调试运行库"></a>Debug模式修改调试运行库</h4><p>在<code>属性</code>中找到<code>C/C++</code> - <code>所有选项</code> - <code>运行库</code> </p>
<img src="/2023/11/11/%E5%9C%A8Visual-Studio-2022%E4%B8%AD%E9%85%8D%E7%BD%AECrypto-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/MTd.png" class="" title="MTd">

<p>把运行库改成 <strong>&#x2F;MTd 多线程调试</strong>。</p>
<hr>
<h3 id="测试运行"><a href="#测试运行" class="headerlink" title="测试运行"></a>测试运行</h3><p>启动Windows本地调试器，此时示例代码应该可以正确运行了，它的输出如下：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">plain <span class="selector-tag">text</span>: CBC Mode Test</span><br><span class="line">key: <span class="number">862</span>E4E435EE5AA798D2A654FAC00D66A</span><br><span class="line">iv: <span class="number">9090</span>D44CABA3EF20A3E21D19DEBBA6A0</span><br><span class="line">cipher text: <span class="number">7</span>CB66B9B9E767CBEA744309C423742D0</span><br><span class="line">recovered text: CBC Mode Test</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>至此，Visual Studio的<code>Crypto++</code>开发环境配置完毕。</p>
<p>Release模式的思路是一样的，只要把运行库改成 <strong>&#x2F;MT 多线程</strong> 即可。</p>
]]></content>
      <categories>
        <category>Tech</category>
        <category>Crypto</category>
      </categories>
      <tags>
        <tag>Crypto</tag>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Ink的简单互动文游制作</title>
    <url>/2024/10/17/%E5%9F%BA%E4%BA%8EInk%E7%9A%84%E7%AE%80%E5%8D%95%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文是一个非常草台和简略的Ink互动文游制作讲解，作者也并不是很懂Ink。</p>
<p><a href="https://www.inklestudios.com/ink/">Ink</a>是一种Inkle Studio开发的<strong>编程语言</strong>，它是专门用来写互动故事的。</p>
<span id="more"></span>

<p>对于想要深入了解Ink的读者，且有一定英语水平，或不介意使用翻译工具的：</p>
<p>这里还是推荐去读官方的入门教程：<a href="https://www.inklestudios.com/ink/web-tutorial/">Writing web-based interactive fiction with ink</a></p>
<p>还有官方的用户手册：<a href="https://github.com/inkle/ink/blob/master/Documentation/WritingWithInk.md">ink&#x2F;Documentation&#x2F;WritingWithInk.md at master · inkle&#x2F;ink</a></p>
<p>这显然会比我这种半吊子写的东西好得多。</p>
<p>Ink的语法十分简单，但其实也有很多高级特性。本文不深入探究，只是简单讲解一下环境部署，开发过程，基本语法，项目导出，部署上线的这个过程，也算是记一次经历。</p>
<p>部署方式：GitHub Pages。</p>
<p>这是一篇面向小白的教程，如果是有一定技术背景的用户，那么你基本可以完全忽略这篇教程的全部内容，你只要上手摸索几分钟就全懂了。</p>
<hr>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>一开始就是看到了这个StarInitial的「深渊凝视着你」- XPCheck。</p>
<p>仓库地址在这里：<a href="https://github.com/StarInitial/xpcheck">StarInitial&#x2F;xpcheck</a></p>
<p>测试地址在这里，部署方式GitHub Pages，可以游玩：<a href="https://starinitial.github.io/xpcheck/xpcheck/">深渊凝视着你</a></p>
<p>就觉得挺有意思，于是学着做了一个。<del>由于作者蓝枫是一个M男</del>，做了一个「受虐癖测试」- MasoCheck。</p>
<p>仓库地址在这里：<a href="https://github.com/BlueMap1e/MasoCheck">BlueMap1e&#x2F;MasoCheck</a></p>
<p>测试地址在这里，部署方式GitHub Pages，可以游玩：<a href="https://bluemap1e.github.io/MasoCheck/">「受虐癖测试」- MasoCheck</a></p>
<p>这两个示例大致展现了Ink制作互动文游的特点。当然，Ink这个语言潜力很大，可以做出比这好得多的东西，至少是比蓝枫做的好得多。</p>
<hr>
<h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>这其实很难说是什么……环境搭建之类的东西。就，很容易，下载安装几个工具就可以了。</p>
<hr>
<h3 id="Inky"><a href="#Inky" class="headerlink" title="Inky"></a>Inky</h3><p>Inky是Ink的主要开发工具，它可以提供即时的测试。</p>
<p>可以直接在Ink的官网下载：<a href="https://www.inklestudios.com/ink/">ink - inkle’s narrative scripting language</a></p>
<p>选择自己对应的操作系统，下载解压即可，它是绿色的。</p>
<hr>
<h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><p>建议是安装一个Git，方便部署。</p>
<p>在Git的官网就可以下载：<a href="https://git-scm.com/">Git</a></p>
<p>注册个GitHub账号，如果没有的话。</p>
<hr>
<h3 id="VSCode"><a href="#VSCode" class="headerlink" title="VSCode"></a>VSCode</h3><p>建议通过VSCode来编写Ink的代码，因为Ink本身的这个编辑器……在我看来……有点，反人类（</p>
<p>在VSCode的官网下载：<a href="https://code.visualstudio.com/">code.visualstudio.com</a></p>
<p>然后装个插件：Ink。装好了就有代码高亮。</p>
<p>VSCode写起来比Ink编辑器要舒服得多，要测试的话直接复制粘贴到Inky里面，再保存一下就可以了。</p>
<p>当然如果不介意Ink这个代码编辑器的话，也可以直接在上面写（</p>
<hr>
<h2 id="UI简介"><a href="#UI简介" class="headerlink" title="UI简介"></a>UI简介</h2><p>不打算详细介绍UI，稍微讲一下。</p>
<img src="/2024/10/17/%E5%9F%BA%E4%BA%8EInk%E7%9A%84%E7%AE%80%E5%8D%95%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C/inkyUI.png" class="" title="inkyUI">

<p>这就是Inky的UI。左边可以编写代码，Ctrl+S保存以后右边的界面同步更新，右边可以直接体验和测试自己写出来的东西。</p>
<p>右上角的回退按钮，左边这个单箭头是回退1步，右边这个双箭头是直接回退到起点。</p>
<img src="/2024/10/17/%E5%9F%BA%E4%BA%8EInk%E7%9A%84%E7%AE%80%E5%8D%95%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C/inkyFallBack.png" class="" title="inkyFallBack">

<p>Files可以新建、打开、导出。</p>
<p>基本就这样。</p>
<hr>
<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><p>Ink的语法并不复杂，这里只介绍一些最基本的部分。</p>
<hr>
<h3 id="文本（Text）"><a href="#文本（Text）" class="headerlink" title="文本（Text）"></a>文本（Text）</h3><p>非常基本的元素，直接打字。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">你是一个冒险者，你进入了一片魔法森林。</span><br></pre></td></tr></table></figure>

<p>没有什么好说的，文本会直接显示在故事中。</p>
<hr>
<h3 id="结点（Knots）"><a href="#结点（Knots）" class="headerlink" title="结点（Knots）"></a>结点（Knots）</h3><p><strong>结点</strong>是Ink的核心概念之一，一个Ink故事基本就是由结点组成的。</p>
<p>结点分为三个层次——<strong>结点（Knots）</strong>，<strong>针脚（Stitch）</strong>和<strong>标签（Label）</strong>。</p>
<hr>
<h4 id="结点（Knots）-1"><a href="#结点（Knots）-1" class="headerlink" title="结点（Knots）"></a>结点（Knots）</h4><p>在Ink中，结点以<code>===</code>表示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">=== Knot1 ===</span><br></pre></td></tr></table></figure>

<p>它是组织故事结构的基本单元，也可以理解为跳转点。</p>
<hr>
<h4 id="针脚（Stitch）"><a href="#针脚（Stitch）" class="headerlink" title="针脚（Stitch）"></a>针脚（Stitch）</h4><p>在Ink中，针脚以<code>==</code>表示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">== Stitch1 ==</span><br></pre></td></tr></table></figure>

<p>它是结点内部的细分，可以用于细化故事的内容，分清层级结构。但其实，在结点显示器上，它是和结点平行的。</p>
<p>这就很怪，没错，这好像是一个遗留问题还是什么的……？</p>
<p>总之，在自己写代码的时候，最好就是和自己的风格保持一致。当然随随便便混淆也是可以的，影响不大。</p>
<hr>
<h4 id="标签（Label）"><a href="#标签（Label）" class="headerlink" title="标签（Label）"></a>标签（Label）</h4><p>在Ink中，标签以<code>=</code>表示，标签名后面<strong>没有</strong><code>=</code>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">= Label</span><br></pre></td></tr></table></figure>

<p>标签是结点或针脚内部的细分，这确实是能够划出层级结构来的。它也可以用来跳转，问题不大。</p>
<hr>
<p>可以在菜单中单击<code>Toggle knot browser</code>，左侧会显示故事的层级结构。</p>
<p>类似于这样：</p>
<img src="/2024/10/17/%E5%9F%BA%E4%BA%8EInk%E7%9A%84%E7%AE%80%E5%8D%95%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C/inkyKnots.png" class="" title="inkyKnots">

<hr>
<h3 id="转移（Divert）"><a href="#转移（Divert）" class="headerlink" title="转移（Divert）"></a>转移（Divert）</h3><p><strong>转移（Divert）</strong>可以理解为针对结点的goto，我认为，学过一点程序设计的应该能够很快理解。</p>
<p>总之它的功能就是，故事跳转到对应名称的结点&#x2F;针脚&#x2F;标签处。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">	故事开始</span><br><span class="line">	-&gt; forest</span><br><span class="line">	</span><br><span class="line">=== forest ===</span><br><span class="line">	你是一名冒险者，你进入了一片森林</span><br><span class="line">	-&gt; END</span><br></pre></td></tr></table></figure>

<p>例子已经很明显，不多赘述。</p>
<p>需要注意一下的是，**-&gt; END<strong>和</strong>-&gt; DONE**会导致故事的结束。</p>
<p>在故事可达的所有分支，都要写上这一句，否则会导致ran out of content的情况出现。自己测试的时候注意。</p>
<hr>
<h3 id="选择（Choice）"><a href="#选择（Choice）" class="headerlink" title="选择（Choice）"></a>选择（Choice）</h3><p><strong>选择（Choice）</strong>会暂停故事的推进，并让玩家进行选择交互。它通常以<code>+</code>表示，也可以用<code>*</code>表示。这其实有一些不同，但我的建议是，全部用<code>+</code>。</p>
<p>如果说为了避免出现重复什么的，才用<code>*</code>，一个一次性选择。</p>
<hr>
<h4 id="普通选择"><a href="#普通选择" class="headerlink" title="普通选择"></a>普通选择</h4><p>先讲一下普通的选择吧，这是一个示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">	故事开始</span><br><span class="line">	-&gt; forest</span><br><span class="line">	</span><br><span class="line">=== forest ===</span><br><span class="line">	你是一名冒险者，你进入了一片森林。</span><br><span class="line">	你来到了一个岔路口，左边是一条碎石路，似乎通向一个村庄。</span><br><span class="line">	右边是一条林间小路，通向森林深处。</span><br><span class="line">	</span><br><span class="line">    + [向左走，尝试靠近村庄] -&gt; villageEnd</span><br><span class="line">    + [向右走，尝试深入森林] -&gt; succubusEnd</span><br><span class="line">    </span><br><span class="line">=== villageEnd ===</span><br><span class="line">	你成功进入了村庄，村民欢迎了你，你安全了。</span><br><span class="line">	你住进了村民的家里，结果你半夜醒来，发现自己被人家家里的少女夜袭了，于是你果断地缴械投降了。</span><br><span class="line">	-&gt; END</span><br><span class="line">	</span><br><span class="line">=== succubusEnd ===</span><br><span class="line">	你决定深入森林，结果遇到了一只魅魔。</span><br><span class="line">	她的等级比你低，你明明能打过，但是你因为自己的败北癖和色欲输掉了，于是你被魅魔榨得一滴不剩了。</span><br><span class="line">    -&gt; END</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="一次性选择"><a href="#一次性选择" class="headerlink" title="一次性选择"></a>一次性选择</h4><p>讲讲一次性选择，这也是一个示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">故事开始</span><br><span class="line">-&gt; table</span><br><span class="line"></span><br><span class="line">=== table ===</span><br><span class="line">	你是一个冒险者。</span><br><span class="line">	你被一只魅魔抓了起来，现在你的面前是一张桌子，上面摆着三瓶药剂，颜色不同。</span><br><span class="line">	魅魔一脸坏笑地看着你，显然，你是无论如何也是只能把这三瓶药剂喝下去的了。</span><br><span class="line">	「硬撑着不喝的话，你知道会发生什么的，对吧？」</span><br><span class="line">	VAR potionNum = 3</span><br><span class="line">	VAR potionCount = 0</span><br><span class="line">	+ [我，莫得选择] -&gt; drink</span><br><span class="line">	</span><br><span class="line">=== drink ===</span><br><span class="line">	现在有&#123;potionNum - potionCount&#125;瓶药剂摆在你面前。</span><br><span class="line">	</span><br><span class="line">&#123;   potionCount &lt; potionNum:</span><br><span class="line">    现在有&#123;potionNum - potionCount&#125;瓶药剂摆在你面前。</span><br><span class="line">*	[喝下红色的药剂] -&gt; redPotion</span><br><span class="line">*	[喝下紫色的药剂] -&gt; purplePotion</span><br><span class="line">*	[喝下蓝色的药剂] -&gt; bluePotion</span><br><span class="line">&#125;</span><br><span class="line">&#123;   potionCount == potionNum:</span><br><span class="line">    药剂都喝完了。</span><br><span class="line">    + [喝完了]-&gt; succubusEnd</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">=== redPotion ===</span><br><span class="line">	你喝下了红色的药剂，味道像是树莓/草莓果汁，甜的，很好喝。</span><br><span class="line">	然而没过多久，你的身体开始发热，全身都变得非常敏感。</span><br><span class="line">	魅魔轻轻在你耳边吹了一口气，你差点瘫软下去。</span><br><span class="line">	~ potionCount++</span><br><span class="line">	+ [喝完了] -&gt; drink</span><br><span class="line">	</span><br><span class="line">=== purplePotion ===</span><br><span class="line">	你喝下了紫色的药剂，味道像是葡萄/黑加仑混合果汁，酸甜的。</span><br><span class="line">	然而没过多久，你感到身体有些异样，下体有些肿胀。</span><br><span class="line">	魅魔轻轻碰了一下你的肉棒，一股紫黑色的黏液从马眼漏了出来。</span><br><span class="line">	~ potionCount++</span><br><span class="line">	+ [喝完了] -&gt; drink</span><br><span class="line">	</span><br><span class="line">=== bluePotion ===</span><br><span class="line">	你喝下了蓝色的药剂，味道像是葡萄糖酸锌口服液，还不错。</span><br><span class="line">	然而没过多久，你感到思维有些放缓，同时莫名感到有些腹胀。</span><br><span class="line">	魅魔舔了一下你的耳朵，你感到几乎已经无法思考了。</span><br><span class="line">	~ potionCount++</span><br><span class="line">	+ [喝完了] -&gt; drink</span><br><span class="line">	</span><br><span class="line">=== succubusEnd ===</span><br><span class="line">	你在药剂催情、胶液寄生、轻度人格排泄的情况下被魅魔吃干抹净了。</span><br><span class="line">	你变成了魅魔的小精奴，每天和魅魔小姐过着性福快乐的生活。</span><br><span class="line">	-&gt; END</span><br></pre></td></tr></table></figure>

<p>这两个例子大概很不正经（</p>
<p>这个例子涉及到了一些变量和分支的内容。后面会提一下。</p>
<p>但总之，读者可以复制粘贴自己试一试，或者自己写一个故事体验一下。Inky的测试运行很方便。</p>
<hr>
<h3 id="变量（Variable）"><a href="#变量（Variable）" class="headerlink" title="变量（Variable）"></a>变量（Variable）</h3><p>为了省事，这里就只讲全局变量。反正故事一般也不会太复杂（复杂的故事大概就不是用Ink做了）。</p>
<hr>
<h4 id="定义变量"><a href="#定义变量" class="headerlink" title="定义变量"></a>定义变量</h4><p>定义变量很容易，比如说：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">VAR potionNum = 3</span><br></pre></td></tr></table></figure>

<p>有一点点编程基础就能看懂了。这里定义了一个名为<code>potionNum</code>的变量，它的值是3。</p>
<p>变量的定义是块作用域，这个听不懂没关系，你直接把所有变量定义写在最前面，别写进大括号里，就行了。</p>
<hr>
<h4 id="修改变量"><a href="#修改变量" class="headerlink" title="修改变量"></a>修改变量</h4><p>很容易，和C++差不多。</p>
<p>就是注意，在行首写上<code>~ </code>。</p>
<p>例如赋值：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">~ potionNum = 3</span><br></pre></td></tr></table></figure>

<p>运算：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">~ potionCount += 1</span><br><span class="line">~ potionCount++</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="条件分支（If）"><a href="#条件分支（If）" class="headerlink" title="条件分支（If）"></a>条件分支（If）</h3><p>为了省事，只讲一点点条件分支。</p>
<hr>
<h4 id="条件：玩家的选择"><a href="#条件：玩家的选择" class="headerlink" title="条件：玩家的选择"></a>条件：玩家的选择</h4><p>可以根据玩家已经做出的选择来进行分支语句的编写，例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;	redPotion:</span><br><span class="line">		~ statusEstrus = true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<p>条件：变量和表达式</p>
<p>可以根据变量和表达式来编写分支语句，例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;	potionCount == 2:</span><br><span class="line">		还有两瓶。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="部署到Web"><a href="#部署到Web" class="headerlink" title="部署到Web"></a>部署到Web</h2><p>写完Ink故事之后，在File-导出到Web选项，选定一个目录，可以导出一个文件夹。里面通常是包括这些文件：</p>
<img src="/2024/10/17/%E5%9F%BA%E4%BA%8EInk%E7%9A%84%E7%AE%80%E5%8D%95%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C/webDocs.png" class="" title="webDocs">

<p>准备好自己的文件结构，在这个目录下使用Git，推送到GitHub的远程仓库，然后部署到GitHub Pages上就可以了。</p>
<p>这一步不详细展开，网上教程很多。</p>
<hr>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>这篇文章写得有点草率，后半部分突然不太想写了，所以写得很粗略。</p>
<p>总之，简单介绍了一下如何使用Inky写一个Ink故事。</p>
<p>后续如果想起来的话可能会尝试完善一下。</p>
]]></content>
      <categories>
        <category>Tech</category>
        <category>Web Front-End</category>
      </categories>
      <tags>
        <tag>Interactive Fiction</tag>
        <tag>Web Front-End</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Twine-SugarCube的互动文游制作（2）Twine初识UI</title>
    <url>/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文尝试介绍一下Twine的UI界面。篇幅冗长，废话很多。</p>
<p>其实只要有一点计算机和前端的基础知识，稍微上手操作一下UI就懂了，不用看这种东西。</p>
<span id="more"></span>

<p>首先是惯例：Twine的官方教程，在这：</p>
<p><a href="https://twinery.org/cookbook">Twine Cookbook</a></p>
<p>一般而言，只要打开浏览器翻译，看官方教程比看我这篇破玩意强得多。</p>
<p>那么对于有一定英语基础的读者而言，更是如此。大部分人读到这里已经可以划走了。</p>
<p>另外，要看懂其中一部分，需要有一点点前端开发基础，就只要一点点。HTML、CSS、JavaScript都最好懂一点，其他方面暂时不用。</p>
<hr>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>本文章以<strong>Twine Local + SugarCube</strong>为例。</p>
<p>读者完全可以选择<strong>Twine Web</strong>和别的故事框架。当然，注意一下，Twine Web的故事存储在<strong>浏览器</strong>中，注意不要一波清缓存或者垃圾清理把作品清没了，最好还是导出到HTML备份一下。</p>
<p>本文应该不会涉及SugarCube的过多特性，基本上还是Twine的一些基本特性。</p>
<hr>
<h2 id="故事管理UI简介"><a href="#故事管理UI简介" class="headerlink" title="故事管理UI简介"></a>故事管理UI简介</h2><p>打开Twine，可以看到主界面的UI是这样。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineUIMain.png" class="" title="twineUIMain">

<p>介绍一下，这些其实是常识性的东西，不耐烦的读者可以直接跳过。</p>
<p>最上面一栏的Twine，Edit这些，基本不用管它，Web UI也没有这种东西。可以点开稍微看一下快捷键方案。</p>
<hr>
<h3 id="故事"><a href="#故事" class="headerlink" title="故事"></a>故事</h3><p>在故事界面，可以管理已经创建的故事。这个就类似于生产力软件的Files，EOS Editor的Teases这种界面。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineUIStory.png" class="" title="twineUIStory">

<hr>
<h4 id="新建"><a href="#新建" class="headerlink" title="新建"></a>新建</h4><p><strong>新建</strong>会创建一个新的故事，输入故事的名称即可。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineNewStory.png" class="" title="twineNewStory">

<hr>
<h4 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h4><p>在选中一个故事后，<strong>编辑</strong>将会进入它的片段编辑页面。双击也可以达到同样的效果。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineEditStory.png" class="" title="twineEditStory">

<hr>
<h4 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h4><p>在选中一个故事后，<strong>标签</strong>功能可以给故事增加标签，用来分类和管理。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineTaggingStory.png" class="" title="twineTaggingStory">

<p>在故事选项卡上，选中标签，在下拉菜单可以修改颜色和移除标签。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineStoryTagsEdit.png" class="" title="twineStoryTagsEdit">

<hr>
<h4 id="重命名"><a href="#重命名" class="headerlink" title="重命名"></a>重命名</h4><p>在选中一个故事后，<strong>重命名</strong>功能可以修改故事的名称。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineRenameStory.png" class="" title="twineRenameStory">

<hr>
<h4 id="复制"><a href="#复制" class="headerlink" title="复制"></a>复制</h4><p>在选中一个故事后，<strong>复制</strong>功能将会创建一个与它相同的副本。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineDuplicateStory.png" class="" title="twineDuplicateStory">

<hr>
<h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><p>在选中一个故事后，<strong>删除</strong>功能会把它放进回收站，需要<strong>二次确认</strong>。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineDeleteStory.png" class="" title="twineDeleteStory">

<hr>
<h3 id="库"><a href="#库" class="headerlink" title="库"></a>库</h3><p>主要是对现有的故事进行管理，标签、导入、存档什么的。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineLib.png" class="" title="twineLib">

<hr>
<h4 id="故事标签"><a href="#故事标签" class="headerlink" title="故事标签"></a>故事标签</h4><p>点击后出现一个右下角弹窗，可以管理现有的故事标签，包括重命名、修改颜色等操作。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineLibTags.png" class="" title="twineLibTags">

<hr>
<h4 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h4><p>点击后出现一个右下角弹窗，可以从现有故事的HTML文件中导入故事用于编辑（前提是你能拿到）。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineLibImport.png" class="" title="twineLibImport">

<hr>
<h4 id="档案"><a href="#档案" class="headerlink" title="档案"></a>档案</h4><p>点击后出现文件管理器页面，给现有的故事进行存档。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineLibArchive.png" class="" title="twineLibArchive">

<hr>
<h3 id="构建"><a href="#构建" class="headerlink" title="构建"></a>构建</h3><p>主要是用于Debug，测试运行，校对文本，导出文件等。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineBuild.png" class="" title="twineBuild">

<hr>
<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>其实就是在Debug模式尝试运行故事。可以跟踪变量，跳转片段什么的。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineBuildDebug.png" class="" title="twineBuildDebug">

<hr>
<h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4><p>尝试真的运行故事，这次是玩家视角，没有跳转片段之类的东西了。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineBuildRun.png" class="" title="twineBuildRun">

<hr>
<h4 id="校对"><a href="#校对" class="headerlink" title="校对"></a>校对</h4><p>把故事的文本呈现出来，集中校对内容和错别字。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineBuildProofread.png" class="" title="twineBuildProofread">

<hr>
<h4 id="发布到文件"><a href="#发布到文件" class="headerlink" title="发布到文件"></a>发布到文件</h4><p>把故事导出为HTML文件格式，常见的发布手段。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineBuildReleaseHTML.png" class="" title="twineBuildReleaseHTML">

<hr>
<h4 id="导出为Twee"><a href="#导出为Twee" class="headerlink" title="导出为Twee"></a>导出为Twee</h4><p>把故事导出为Twee文件格式，只有精简的内容，特别适合修改故事内容、进行版本控制等。</p>
<p>可以理解为，这玩意是你写的Twine故事的源代码。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineBuildExportTwee.png" class="" title="twineBuildExportTwee">

<hr>
<h3 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h3><p>调整现有故事的查看方式。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineView.png" class="" title="twineView">

<hr>
<h4 id="排序方式"><a href="#排序方式" class="headerlink" title="排序方式"></a>排序方式</h4><p>调整现有故事的查看排序方式。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineViewOrder.png" class="" title="twineViewOrder">

<p><strong>名称</strong>是按照<strong>字典序顺序</strong>排列，不区分大小写。</p>
<p><strong>时间</strong>是按照故事的<strong>最后一次修改时间</strong>排列，最后修改的在前面。</p>
<hr>
<h4 id="显示标签"><a href="#显示标签" class="headerlink" title="显示标签"></a>显示标签</h4><p>根据标签过滤本地的故事。包含被勾选标签的故事被展示，不包含的被隐藏。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineViewShowTags.png" class="" title="twineViewShowTags">

<hr>
<h3 id="Twine"><a href="#Twine" class="headerlink" title="Twine"></a>Twine</h3><p>一些全局设置，关于，之类的东西。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineTwine.png" class="" title="twineTwine">

<hr>
<h4 id="偏好"><a href="#偏好" class="headerlink" title="偏好"></a>偏好</h4><p>编辑器偏好，主题风格一类的东西。根据自己的需要调整。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineTwinePreference.png" class="" title="twineTwinePreference">

<hr>
<h4 id="故事格式"><a href="#故事格式" class="headerlink" title="故事格式"></a>故事格式</h4><p>故事格式选择，会影响一些偏高级的内容，如果是简单互动方面的话，区别不大。看需求选择。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineTwineStoryFormat.png" class="" title="twineTwineStoryFormat">

<hr>
<h4 id="关于Twine"><a href="#关于Twine" class="headerlink" title="关于Twine"></a>关于Twine</h4><p>Twine的一些介绍内容。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineTwineAbout.png" class="" title="twineTwineAbout">

<hr>
<h4 id="反馈Bug"><a href="#反馈Bug" class="headerlink" title="反馈Bug"></a>反馈Bug</h4><p>反馈Bug的渠道，会跳转到网页，其实就是去GitHub的仓库下面提Issue。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineTwineReportABug.png" class="" title="twineTwineReportABug">

<hr>
<h2 id="片段编辑UI简介"><a href="#片段编辑UI简介" class="headerlink" title="片段编辑UI简介"></a>片段编辑UI简介</h2><p>（这部分对于技术用户而言应该也是废话，是显而易见的内容）</p>
<p>在故事管理界面<strong>双击</strong>某个故事，或者在选择某个故事后点击<strong>编辑</strong>，就会进入到片段编辑的UI。这其实就是片段视图（Passage View）。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twinePassageEdit.png" class="" title="twinePassageEdit">

<p>片段编辑界面是整个故事的核心工作区。<strong>故事（Story）主要是由片段（Passage）构成的</strong>。</p>
<p>这是一个网格状的平面UI，它可以让你清楚地观察到故事的支线、循环等结构，从而创作出复杂的非线性故事。</p>
<p><strong>左键</strong>是选中，<strong>拖动左键</strong>是框选，<strong>拖动右键</strong>是拖拽移动视角。</p>
<p>接下来讲讲具体的按钮作用。</p>
<hr>
<h3 id="新建-1"><a href="#新建-1" class="headerlink" title="新建"></a>新建</h3><p><strong>新建</strong>，顾名思义，点击后直接创建一个新的片段（Passage）。</p>
<p>（其实一般的主线线性结构可以不用新建按钮，直接写Twine链接，Ctrl+S，连接的片段就自动创建了）</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twinePassageNew.png" class="" title="twinePassageNew">

<hr>
<h3 id="编辑-1"><a href="#编辑-1" class="headerlink" title="编辑"></a>编辑</h3><p><strong>编辑</strong>，对选中的片段打开编辑窗口。双击某个片段效果一样。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twinePassageEditArea.png" class="" title="twinePassageEditArea">

<p><strong>编辑</strong>可能是制作过程中最常用的窗口之一了，详细介绍一下。</p>
<hr>
<h4 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h4><p>点击回退一步。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twinePassageEditUndo.png" class="" title="twinePassageEditUndo">

<hr>
<h4 id="恢复"><a href="#恢复" class="headerlink" title="恢复"></a>恢复</h4><p>点击前进一步</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twinePassageEditRedo.png" class="" title="twinePassageEditRedo">

<hr>
<h4 id="标签-1"><a href="#标签-1" class="headerlink" title="标签"></a>标签</h4><p>点击为该段落打上标签，用于定位、查看、管理等。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twinePassageEditTags.png" class="" title="twinePassageEditTags">

<p>生成的标签可以在片段编辑页面中手动关闭。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twinePassageRemoveTags.png" class="" title="twinePassageRemoveTags">

<hr>
<h4 id="尺寸"><a href="#尺寸" class="headerlink" title="尺寸"></a>尺寸</h4><p>调整该段落在编辑面板上的显示大小，这个主要是帮助可视化和整理试图用的，并不是影响它的Web布局。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twinePassageEditSize.png" class="" title="twinePassageEditSize">

<p>小型 - 1x1。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/smallPassage.png" class="" title="smallPassage">

<p>大型 - 2x2。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/largePassage.png" class="" title="largePassage">

<p>竖条 - 1x2。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/columnPassage.png" class="" title="columnPassage">

<p>横条 - 2x1。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/rowPassage.png" class="" title="rowPassage">

<hr>
<h4 id="重命名-1"><a href="#重命名-1" class="headerlink" title="重命名"></a>重命名</h4><p>重命名当前片段。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twinePassageEditRename.png" class="" title="twinePassageEditRename">

<hr>
<h4 id="从这里开始测试"><a href="#从这里开始测试" class="headerlink" title="从这里开始测试"></a>从这里开始测试</h4><p>选择当前片段作为入口，进入Debug模式运行故事。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twinePassageEditStartDebugHere.png" class="" title="twinePassageEditStartDebugHere">

<hr>
<h3 id="重命名-2"><a href="#重命名-2" class="headerlink" title="重命名"></a>重命名</h3><p>重命名当前片段。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twinePassageRename.png" class="" title="twinePassageRename">

<hr>
<h3 id="删除-1"><a href="#删除-1" class="headerlink" title="删除"></a>删除</h3><p>删除当前片段。不能删除最后的一个片段。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twinePassageDelete.png" class="" title="twinePassageDelete">

<hr>
<h3 id="从这里开始测试-1"><a href="#从这里开始测试-1" class="headerlink" title="从这里开始测试"></a>从这里开始测试</h3><p>选择当前片段作为入口，进入Debug模式运行故事。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twinePassageEditStartDebugHere.png" class="" title="twinePassageEditStartDebugHere">

<hr>
<h3 id="从这里开始故事"><a href="#从这里开始故事" class="headerlink" title="从这里开始故事"></a>从这里开始故事</h3><p>选择当前片段，作为整个故事的起点。并不是进入Run模式，不要混淆了。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twinePassageStartHere.png" class="" title="twinePassageStartHere">

<p>故事起点片段会有一个明显的图标标记——一个绿色的火箭标志，这意味着故事将从这里开始。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twinePassageStartIcon.png" class="" title="twinePassageStartIcon">

<hr>
<h3 id="跳转到"><a href="#跳转到" class="headerlink" title="跳转到"></a>跳转到</h3><p>其实这就是一个搜索栏功能，可以理解为VSCode的Ctrl+F。可以用来搜索片段的标题、内容，并用于定位片段。</p>
<p>整个故事结构复杂的时候会比较有用。当然，保持良好的命名习惯是很重要的。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twinePassageJumpTo.png" class="" title="twinePassageJumpTo">

<hr>
<h3 id="全选"><a href="#全选" class="headerlink" title="全选"></a>全选</h3><p>字面意思，全选所有片段。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twinePassageSelectAll.png" class="" title="twinePassageSelectAll">

<hr>
<h2 id="片段视图下的故事菜单"><a href="#片段视图下的故事菜单" class="headerlink" title="片段视图下的故事菜单"></a>片段视图下的故事菜单</h2><p>可以注意到的一点是，在片段视图下，故事菜单的内容发生了显著变化，这和之前故事视图下是完全不同的。</p>
<p>这里有一些重要的功能，还是不得不提一下。有这方面基础的读者，这一章对你来说应该也是废话。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineEditModeStory.png" class="" title="twineEditModeStory">

<hr>
<h3 id="查找替换"><a href="#查找替换" class="headerlink" title="查找替换"></a>查找替换</h3><p>可以用于一次性替换片段中的某一段文字，类似于VSCode中的Ctrl+F2。</p>
<p>第一个符合匹配的片段会被黄色标记。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineF2.png" class="" title="twineF2">

<hr>
<h3 id="重命名-3"><a href="#重命名-3" class="headerlink" title="重命名"></a>重命名</h3><p>重命名整个故事，和之前那个是一样的。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineEditModeStoryRename.png" class="" title="twineEditModeStoryRename">

<hr>
<h3 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h3><p>展示故事的细节信息。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineDetails.png" class="" title="twineDetails">

<p>它会生成这样一个窗口，可以查看编辑时间、IFID、故事格式等信息。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineDetailsWindow.png" class="" title="twineDetailsWindow">

<p>在<strong>故事格式</strong>一栏，可以手动修改当前故事的格式。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineChangeFormat.png" class="" title="twineChangeFormat">

<p>这个操作最好是前期去动，否则后期要改的东西可能就比较多了。</p>
<hr>
<h3 id="片段标签"><a href="#片段标签" class="headerlink" title="片段标签"></a>片段标签</h3><p>展示所有的片段标签。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twinePassageTags.png" class="" title="twinePassageTags">

<p>在生成的窗口中，可以对目前已有的标签进行管理，包括重命名和重设颜色。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twinePassageTagsWindow.png" class="" title="twinePassageTagsWindow">

<hr>
<h3 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h3><p>写一段JavaScript代码，它会在故事初始化的时候执行。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineJavaScript.png" class="" title="twineJavaScript">

<p>可以直接在这个窗口编辑JavaScript代码，但是不太建议这么做。虽然高亮确实是有的，但是和VSCode、WebStorm这种环境是没法比的，写起来会比较的难受。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineJavaScriptEdit.png" class="" title="twineJavaScriptEdit">

<hr>
<h3 id="样式表"><a href="#样式表" class="headerlink" title="样式表"></a>样式表</h3><p>写一段CSS代码，应用到故事页面中。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineCSS.png" class="" title="twineCSS">

<p>类似地，可以直接在这个窗口编辑CSS代码，但也不太舒服。和专业的前端IDE是没得比。建议是写好之后复制粘贴进来。</p>
<p>感觉，主要的写法还是写一堆类选择器的样式备用。</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%882%EF%BC%89Twine%E5%88%9D%E8%AF%86UI/twineCSSEdit.png" class="" title="twineCSSEdit">

<hr>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>本来是想把一些基础的写法也给写进去的，结果发现介绍UI的篇幅收不住了，于是就此打住。</p>
<p>本文背离了用简单几句话讲清楚UI的初衷，写了一堆废话。但我自认为这可能对于一些不太熟悉基本技术工具和UI界面的读者有些帮助。总之，文章我是不满意的，但就先这样吧。</p>
]]></content>
      <categories>
        <category>Tech</category>
        <category>Web Front-End</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Interactive Fiction</tag>
        <tag>Web Front-End</tag>
        <tag>HTML</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Twine-SugarCube的互动文游制作（3）Twine基础</title>
    <url>/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文主要结合实操，介绍Twine 2的一些基础特性，包括链接、HTML、CSS等。</p>
<p>阅读本教程后，读者应该能够制作一个简单的Twine 2非线性故事。</p>
<span id="more"></span>

<p>本教程需要读者掌握Twine 2的UI基本使用方法，这些之前讲过，所以本文的节奏会明显加快。</p>
<p>本教程的其中一部分可能需要读者掌握Twine 2的UI基本使用方法和少量Web前端基础（HTML、CSS）。</p>
<p>最好在本地安装一个Web前端开发工具，以便编写前端代码，个人推荐的是<a href="https://code.visualstudio.com/">VSCode</a>。</p>
<p>VSCode是免费的，只要随便装几个插件就可以高效地编写前端代码了。安装配置过程略去。</p>
<hr>
<h2 id="链接（Link）"><a href="#链接（Link）" class="headerlink" title="链接（Link）"></a>链接（Link）</h2><p>一个Twine 2的<strong>故事（Story）</strong>是由<strong>片段（Passage）</strong>组成的。</p>
<p>片段之间通常是靠<strong>链接（Link）</strong>连接起来的，链接是Twine 2的一个基础机制。</p>
<p>其实，只要掌握了链接，就已经可以创作出多分支的非线性故事。</p>
<p>在片段编辑中输入链接后，按下Ctrl+S进行保存，编辑器会自动创建页面（如果没有的话）或更改页面指向。</p>
<hr>
<h3 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h3><p>链接的语法很简单。</p>
<hr>
<h4 id="直接指向页面"><a href="#直接指向页面" class="headerlink" title="直接指向页面"></a>直接指向页面</h4><p>这种写法很直接，显示的链接文字和即将跳转到的页面名是一样的：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[leftPath]]</span><br></pre></td></tr></table></figure>

<p>举个简单的例子说明一下：</p>
<p>在这个示例中，我在start这个片段中写了两个链接，一个[[leftPath]]，一个[[rightPath]]。</p>
<p>Ctrl+S保存后，编辑器自动创建leftPath和rightPath两个段落，并连接到start。</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/simpleLinkSample.png" class="" title="simpleLinkSample">

<p>可以稍微写点文字内容，方便验证。</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/simpleLinkAddText.png" class="" title="simpleLinkAddText">

<p>现在选择start片段进行测试：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/simpleLinkTest.png" class="" title="simpleLinkTest">

<p>点击leftPath，就进入leftPath这个片段，显示”这是向左走”。向右走也是类似的。</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/simpleLinkPathLeft.png" class="" title="simpleLinkPathLeft">

<hr>
<h4 id="单独设置链接文本"><a href="#单独设置链接文本" class="headerlink" title="单独设置链接文本"></a>单独设置链接文本</h4><p>链接文本也不一定就要和跳转到的页面名一样，毕竟这样会显得很脱线。</p>
<hr>
<h5 id="分隔符写法"><a href="#分隔符写法" class="headerlink" title="分隔符写法"></a>分隔符写法</h5><p>分隔符左边是链接显示的文本，右边是目标片段的名称。注意<strong>别乱加空格</strong>，名称会不一样的。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[向左走|leftPath]]</span><br></pre></td></tr></table></figure>

<p>就刚才那个例子改一下：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/sepLinkSample.png" class="" title="sepLinkSample">

<p>看看效果：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/sepLinkTest.png" class="" title="sepLinkTest">

<p>至少比把底层命名全部暴露出来要好多了（</p>
<hr>
<h5 id="箭头写法"><a href="#箭头写法" class="headerlink" title="箭头写法"></a>箭头写法</h5><p>箭头的起点一侧是链接显示的文本，指向的是目标片段的名称。还是<strong>不能乱加空格</strong>。</p>
<p>方向可以向左或者向右，随意，我这里演示一下。但反正自己写的时候，我是喜欢统一向右。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[向左走-&gt;leftPath]]</span><br><span class="line">[[rightPath&lt;-向右走]]</span><br></pre></td></tr></table></figure>

<p>还是刚才的例子，小改一下：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/arrowLinkSample.png" class="" title="arrowLinkSample">

<p>看看效果，符合预期的：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/arrowLinkTest.png" class="" title="arrowLinkTest">

<hr>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>好了，你已经学会链接了。</p>
<p>如果没有什么复杂的互动需要，单纯就是多分支故事，已经不用往下看了，你已经会了。</p>
<p>利用链接已经可以创造出复杂的故事结构，随便举个例子吧。</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/treeSample.png" class="" title="treeSample">

<p>链接反正不限制数量，在片段视图的这个平面布局下也可以清楚地看到故事的分支和走向，可以用来设计剧情了。</p>
<hr>
<h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><p>（注意：这部分内容可能需要读者具有初级的HTML基础）</p>
<p>作者的话：我会尝试尽量讲得浅显一些，通过举例子来讲解。但如果实在是完全看不懂，没办法，学一点前端吧，就HTML部分就行。很快，很轻松，没难度的。<del>学前端绝对会害了你，快跑</del></p>
<p>推荐学习资源：</p>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML">使用 HTML 构建 Web - 学习 Web 开发 | MDN (mozilla.org)</a></p>
<p>Twine 2<strong>完全兼容</strong>HTML，不管是哪一种故事格式，都支持在片段的内容中<strong>直接嵌入HTML代码</strong>。</p>
<p>其实Twine 2生成的故事<strong>本质上就是一段HTML代码</strong>。</p>
<p>这其实解答了一些读者的疑问，例如——</p>
<p>为什么没有字体样式设置功能？</p>
<p>为什么不能直接插入超链接？</p>
<p>为什么没有添加图片附件按钮？</p>
<p>等等。</p>
<p>其实这是属于常见的误解，Passage的这个编辑框<strong>并不等同于传统的文本编辑框</strong>，类似于在Microsoft Word中那样。准确说，编辑Passage的这个过程，本质上还是在<strong>写代码</strong>。</p>
<p>所以说，这些功能和需求都可以通过<strong>嵌入HTML代码</strong>实现。</p>
<p>下面，我将通过简单的讲解和示例，来介绍一下如何在Twine 2的Passage中实现这些常见的需求。</p>
<h3 id="调整文本样式"><a href="#调整文本样式" class="headerlink" title="调整文本样式"></a>调整文本样式</h3><p>调整文本样式是一个非常常见的需求，如果没学过Web前端，看到这个Passage的编辑框可能是让人感到困惑的：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/textEdit.png" class="" title="textEdit">

<p>这里什么选项也没有，没有加粗，没有斜体，没有下划线，没有字体颜色……</p>
<p>那么，之前那些文游的字体样式是如何做出来的呢？</p>
<p>一个最基本和直观的方法（但也不能说是唯一的方法）就是<strong>嵌入HTML元素</strong>。</p>
<hr>
<h4 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a>粗体</h4><p>字体加粗可以通过HTML的<code>&lt;strong&gt;</code>或<code>&lt;b&gt;</code>标签来实现。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">这是一段普通的文本</span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>这是一段加粗的文本<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>尝试一下：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/boldText.png" class="" title="boldText">

<p>点击测试运行，看看效果：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/boldTextTest.png" class="" title="boldTextTest">

<p>其实，其它的也是类似，举一反三。读者可以直接去自学HTML，我也不用在这里细讲的。</p>
<p>但由于这篇教程是给小白看的，那风格就宝宝巴士一些好了，讲吧（虽然语言风格已经是十分劝退）。</p>
<hr>
<h4 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h4><p>斜体文本可以通过HTML的<code>&lt;em&gt;</code>或<code>&lt;i&gt;</code>标签实现。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">这是一段普通文本</span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>这是一段斜体文本<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>尝试一下：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/italicTextSample.png" class="" title="italicTextSample">

<p>测试运行，看看效果：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/italicTextTest.png" class="" title="italicTextTest">

<hr>
<h4 id="嵌套示范（加粗-斜体）"><a href="#嵌套示范（加粗-斜体）" class="headerlink" title="嵌套示范（加粗+斜体）"></a>嵌套示范（加粗+斜体）</h4><p>HTML标签是可以<strong>嵌套</strong>的，比如说，如果需要一段加粗+斜体的文字，自然是可以这样写：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">这是一段普通的文本</span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">em</span>&gt;</span>这是一段加粗+斜体的文本<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>尝试一下：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/boldItalicTextSample.png" class="" title="boldItalicTextSample">

<p>测试运行，看看效果：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/boldItalicTextTest.png" class="" title="boldItalicTextTest">

<hr>
<h4 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h4><p>下划线文本可以通过HTML的<code>&lt;u&gt;</code>标签实现，但是不建议用。</p>
<p>第一，它容易和超链接混淆。第二，它是非语义化的（这个听不懂没关系，总之实在想用就用吧）。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">这是一段普通文本</span><br><span class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span>这是一段下划线文本<span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>尝试一下：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/underlineTextSample.png" class="" title="underlineTextSample">

<p>测试运行，看看效果：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/underlineTextTest.png" class="" title="underlineTextTest">

<hr>
<h4 id="高亮文本"><a href="#高亮文本" class="headerlink" title="高亮文本"></a>高亮文本</h4><p>HTML5的新特性，可以让一段文本高亮显示。但是默认的样式可能会不太好看。（个人观点）</p>
<p>高亮文本对应的标签是<code>&lt;mark&gt;</code>。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">这是一段普通文本</span><br><span class="line"><span class="tag">&lt;<span class="name">mark</span>&gt;</span>这是一段高亮文本<span class="tag">&lt;/<span class="name">mark</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>尝试一下：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/markTextSample.png" class="" title="markTextSample">

<p>测试运行，看看效果：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/markTextTest.png" class="" title="markTextTest">

<hr>
<h4 id="调整字体大小"><a href="#调整字体大小" class="headerlink" title="调整字体大小"></a>调整字体大小</h4><p>（注意：这需要有HTML和CSS基础）</p>
<p>其实嵌入HTML标签来调整字体大小的话，是有些繁琐的一个做法，整体是不太推荐的，但确实可以这么做。</p>
<p>本质上它是通过内联样式表实现的。类似于这样：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">这段文本的字体大小是默认的</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;font-size: 24px;&quot;</span>&gt;</span>这段文本的字体大小被调整为24像素<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>尝试一下：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/fontSizeSample.png" class="" title="fontSizeSample">

<p>测试运行，看看效果：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/fontSizeTest.png" class="" title="fontSizeTest">

<hr>
<h4 id="调整字体颜色"><a href="#调整字体颜色" class="headerlink" title="调整字体颜色"></a>调整字体颜色</h4><p>（注意：这需要有HTML和CSS基础）</p>
<p>类似地，直接内联样式调颜色……也行吧，然而代码复用率很低，而且不好覆盖。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">这是一段默认颜色的文本</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color: #00FFFF&quot;</span>&gt;</span>这段文本的颜色被设置为亮蓝<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>尝试一下：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/fontColorSample.png" class="" title="fontColorSample">

<p>测试运行，看看效果：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/fontColorTest.png" class="" title="fontColorTest.png">

<hr>
<h4 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h4><p>尝试尽量详细地介绍了一下如何通过嵌入HTML标签的形式，调整一些基本的字体样式。</p>
<p>现在可以做出花哨的文本了。</p>
<hr>
<h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><p>创建超链接应该也是一个常见的需求。</p>
<p>比如说，需要创建一个指向外部网页的连接。这里用到HTML的<code>&lt;a&gt;</code>元素。</p>
<p><code>&lt;a&gt;</code>元素的<code>href</code>属性可以指向网址，当然也可以指向本地的相对路径。元素的内容是超链接的文字标题。</p>
<p>举个例子</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://x.com/xuemingjiai&quot;</span>&gt;</span>这是魔女小姐的推特主页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>尝试一下：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/aSample.png" class="" title="aSample">

<p>测试运行，看看效果：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/aTest.png" class="" title="aTest">

<hr>
<h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>插入图片是一个常见的需求，可以使用HTML的<code>&lt;img&gt;</code>元素。</p>
<p>主要的方式包括使用在线图片资源和本地图片资源。</p>
<hr>
<h4 id="使用在线图片资源"><a href="#使用在线图片资源" class="headerlink" title="使用在线图片资源"></a>使用在线图片资源</h4><p>使用在线图片资源插入图片很简单，例如这样：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://disan-kekes-projects-c4b9b073.vercel.app/img/start/201.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;start201&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>只要在<code>&lt;img&gt;</code>元素的<code>src</code>属性中填入在线图片资源的URL即可。</p>
<p>尝试一下：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/onlineImgSample.png" class="" title="onlineImgSample">

<p>测试运行，看看效果：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/onlineImgTest.png" class="" title="onlineImgTest">

<hr>
<h4 id="使用本地图片资源"><a href="#使用本地图片资源" class="headerlink" title="使用本地图片资源"></a>使用本地图片资源</h4><p>使用本地图片资源就相对而言更复杂一些了，虽然说HTML代码还是差不多，类似于这种：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;assets/images/Kirigiri.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Kirigiri Kyoto&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>同样是填URL，但这次是填本地的相对路径。</p>
<p>那么，问题来了，既然是使用相对路径，那这个<code>assets/images</code>文件夹要放在哪呢？</p>
<p>目前，经过我的一番折腾，我暂时得出的结论是：</p>
<p>在开发、测试、运行的情况下，把资源文件夹放在<code>Documents/Twine/Scratch</code>目录下。</p>
<p>在发布的情况下，直接把资源文件夹放在发布的HTML文件同一目录下。</p>
<p>很麻烦，但目前我找出来的解决方案就是这样，看起来挺呆的，但是好像没什么好办法。</p>
<p>有条件的话还是弄个在线资源托管服务吧，真的（</p>
<p>尝试一下：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/localImgSample.png" class="" title="localImgSample">

<p>测试运行，<del>看看雾切老婆</del>：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/localImgTest.png" class="" title="localImgTest">

<hr>
<h3 id="小结-2"><a href="#小结-2" class="headerlink" title="小结"></a>小结</h3><p><del>简单</del>极其繁琐地介绍了一下如何用HTML实现字体样式调整、超链接和图片导入功能。</p>
<hr>
<h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><p>（注意：这部分内容可能需要读者有一定的CSS基础）</p>
<p>作者的话：我还是尽量讲得浅显一些，但如果实在看不懂，建议自学一点CSS。</p>
<p>推荐学习资源：<a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS">学习使用 CSS 为 HTML 添加样式 - 学习 Web 开发 | MDN (mozilla.org)</a></p>
<p>本文只会介绍CSS非常入门级别的用法，这不是一个文档，这只是一个面向小白的教程，仅此而已。</p>
<hr>
<h3 id="为什么要用CSS？"><a href="#为什么要用CSS？" class="headerlink" title="为什么要用CSS？"></a>为什么要用CSS？</h3><p>这可能是一个疑问，稍微写一下。</p>
<p>就像之前在HTML中演示的一样，其实元素的样式可以直接写在style属性当中。那，为什么还要用CSS呢？</p>
<p>我举个例子来说明一下问题吧。</p>
<p>比如说，你想要在多个不同的片段中应用某种类似的字体样式。就例如：<strong>亮蓝，斜体，粗体，24像素字号，下划线</strong>。（当然实际设计中应该不会有这么阴间的需求，毕竟只是写个轻小说而已）</p>
<p>按照之前的HTML写法，可以这么写：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color: #00FFFF; font-size: 24px;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">strong</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">em</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">u</span>&gt;</span></span><br><span class="line">                这是一段亮蓝、斜体、粗体、24像素字号、下划线的文本</span><br><span class="line">            <span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>它的效果确实是显示出来了：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/massHTMLTest.png" class="" title="massHTMLTest">

<p>但是这样一段漏斗形的代码就这样扔在文本中间，是不是会显得特别不协调。</p>
<p>当然你可以选择把这么一堆标签挤在一行里面，自己受得了的话，也可以的。</p>
<p>编写的时候也很累，每次都要给输入这么一大段。如果说还想在Passage中应用好几种字体样式的话，复制粘贴都很混乱（当然你可以用Ditto之类的工具稍微减轻工作量，不过也就那样）。</p>
<p>语义化程度也很低。</p>
<p>此时使用CSS就可以较好地解决这个问题。</p>
<p>此处就还是刚才这个例子，为了实现相同的效果，可以有更加优雅的方案：</p>
<p>找到故事（Story）-样式表（Style Sheet），写一个类选择器和一组样式。</p>
<p>现在看不懂没关系（当然，还是那句话，最好自学一点CSS），就试试看：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.sampleText</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#00FFFF</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">font-style</span>: italic;</span><br><span class="line">    <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此时，只需要在Passage中写这样一小段：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sampleText&quot;</span>&gt;</span>这是一段亮蓝、斜体、粗体、24像素字号、下划线的文本<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>尝试一下：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/cssSample.png" class="" title="cssSample">

<p>测试运行，效果相同：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/cssTest.png" class="" title="cssTest">

<p>可以在任何Passage中使用这一组样式，只要加上<code>sampleText</code>这个类名就可以了：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sampleText&quot;</span>&gt;</span> some content <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这样提高了效率，精简了代码。也不会破坏文本的结构，更加美观。</p>
<p>如果想要修改，可以直接修改CSS代码，例如调整颜色、调整字体大小，对应的HTML元素也会跟着调整。不用一个个去改了。</p>
<hr>
<h3 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h3><p>如果是新手的话，建议是全部用类选择器来添加样式。这样比较直观，容易管理。</p>
<p>像是元素、ID、属性这种选择器，可能会有点复杂。具体的还是，学了CSS以后才能理解。</p>
<hr>
<h4 id="一个不恰当的例子"><a href="#一个不恰当的例子" class="headerlink" title="一个不恰当的例子"></a>一个不恰当的例子</h4><p>稍微举个例子来解释一下类选择器。</p>
<p>什么是类选择器，比如说：</p>
<p><strong>头发为粉色的，出列！</strong></p>
<p>你可以理解为，<strong>头发为粉色的</strong>这么一句话就是<strong>类选择器</strong>，<strong>出列</strong>就是<strong>一组样式</strong>。</p>
<p>比如说，这么一组HTML元素就像是一些人在列队。</p>
<p>每个类名之间用空格隔开。一个元素可以有多个类名。可以理解为特征、标识符、Tag之类的东西。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;pinkHair shortHair&quot;</span>&gt;</span>Saigyoji Yuyuko<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;whiteHair shortHair&quot;</span>&gt;</span>Konpaku Yomu<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;blueHair longHair&quot;</span>&gt;</span>Hinanawi Tenshi<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;pinkHair longHair&quot;</span>&gt;</span>Sakura Antenna<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>谁被选中了？有<code>pinkHair</code>这个类的元素被选中了。在这个语境下是Saigyoji Yuyuko和Sakura Antenna。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.pinkHair</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* out of the ranks! */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>那如果换一个类选择器呢？比如说，<strong>长发的，好看！</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.longHair</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* looks good */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>现在是有<code>longHair</code>这个类的元素被选中了，在这个语境下是Hinanawi Tenshi和Sakura Antenna。</p>
<p>不知道这个奇怪的例子有没有帮助读者理解什么是类选择器，<del>反正作者自娱自乐的目的是已经达到了</del>。</p>
<hr>
<h4 id="类选择器的简单应用"><a href="#类选择器的简单应用" class="headerlink" title="类选择器的简单应用"></a>类选择器的简单应用</h4><p>咳咳，回归正题。那么，类选择器要怎么用呢？</p>
<p>还是举个例子吧。比如说，在Passage中，需要用到三种样式。</p>
<p>一种是红色加粗的文本，用于显示警告：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.alert</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#FF0000</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>一种是放大的斜体文本，用来强调或吸引注意力。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.attention</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">font-style</span>: italic;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>一种是划去的文本，<del>用来开玩笑</del>：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.joke</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: line-through;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后写一些故事片段文本中的HTML元素作为样例，顺便展示一下叠加的效果：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>这是一段普通的文本<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;alert&quot;</span>&gt;</span>这是一段红色加粗的文本<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;attention&quot;</span>&gt;</span>这是一段放大的斜体文本<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;joke&quot;</span>&gt;</span>这是一段被划去的文本<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;alert attention&quot;</span>&gt;</span>这是一段红色、加粗、放大、斜体的文本<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;attention joke&quot;</span>&gt;</span>天子最可爱了<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>尝试一下：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/classSelectorSample.png" class="" title="classSelectorSample">

<p>测试，看看效果：</p>
<img src="/2024/09/29/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%883%EF%BC%89Twine%E5%9F%BA%E7%A1%80/classSelectorTest.png" class="" title="classSelectorTest">

<hr>
<h3 id="小结-3"><a href="#小结-3" class="headerlink" title="小结"></a>小结</h3><p>这里简单介绍了一下使用CSS的优点，以及类选择器的一点基本用法。基本是针对新手。</p>
<p>不打算深入，如果打算深入研究的话，建议是掌握CSS，然后去阅读对应故事框架的CSS选择器文档。</p>
<hr>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>本文简单介绍了Twine 2的一些基本概念，包括链接、故事分支结构、HTML、CSS等内容。</p>
<p>读者阅读本文后，应该有能力制作一个多分支的、包含丰富文字样式、外链和图片的Twine 2故事。如果不能，那应该是我的文章写得太烂了（</p>
<p>就这样。</p>
]]></content>
      <categories>
        <category>Tech</category>
        <category>Web Front-End</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Interactive Fiction</tag>
        <tag>Web Front-End</tag>
        <tag>HTML</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Twine-SugarCube的互动文游制作（1） 简介与环境搭建</title>
    <url>/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%881%EF%BC%89%E7%AE%80%E4%BB%8B%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>近期看到了几个推特文援做的互动文游，觉得挺有意思，于是打算研究一下制作方式。</p>
<p>随后发现，主要还是Twine 2 + SugarCube 2这种形式，最终部署在Vercel上。</p>
<span id="more"></span>

<p>放两个我看到的作品吧。虽然我不是很喜欢这个主题和玩法，我是直接拿ClickRun过的。</p>
<p>（连点1000次到底是什么魔鬼啊喂，这真的还算能是交互性吗？这是虐待吧？是的吧！M男，很神奇吧？）</p>
<p>但，这个互动文游的形式，我觉得还不错：</p>
<p><a href="https://disan-kekes-projects-c4b9b073.vercel.app/">为魔女妹妹打工的小游戏 By @xuemingjiai</a></p>
<p><a href="https://moyud.vercel.app/">可喵大人的推特 By @winkyneverlose</a></p>
<p>不知道相比于Milovana Webtease，各位读者是更喜欢哪一种呢？</p>
<hr>
<h2 id="Twine-简介"><a href="#Twine-简介" class="headerlink" title="Twine 简介"></a>Twine 简介</h2><p>Twine是一个开源的交互式故事生成器。</p>
<p>项目地址：</p>
<p><a href="https://github.com/klembot/twinejs">klembot&#x2F;twinejs: Twine, a tool for telling interactive, nonlinear stories (github.com)</a></p>
<p>官方网站：</p>
<p><a href="https://twinery.org/">Twine &#x2F; An open-source tool for telling interactive, nonlinear stories (twinery.org)</a></p>
<p>英文教程：</p>
<p><a href="https://twinery.org/cookbook">Twine Cookbook</a></p>
<hr>
<h2 id="SugarCube-简介"><a href="#SugarCube-简介" class="headerlink" title="SugarCube 简介"></a>SugarCube 简介</h2><p>SugarCube是Twine 2默认支持的一种故事格式：</p>
<p>官方网站：</p>
<p><a href="https://www.motoslave.net/sugarcube/2/">SugarCube (motoslave.net)</a></p>
<p>英文文档：</p>
<p><a href="https://www.motoslave.net/sugarcube/2/docs/">SugarCube v2 Documentation (motoslave.net)</a></p>
<hr>
<h2 id="开发环境搭建"><a href="#开发环境搭建" class="headerlink" title="开发环境搭建"></a>开发环境搭建</h2><p>这个环境搭建很容易，不需要注册账户。</p>
<p>主要有两种，Web UI和本地应用，可以自己根据需要选择。</p>
<hr>
<h3 id="Web-UI"><a href="#Web-UI" class="headerlink" title="Web UI"></a>Web UI</h3><p>Twine的Web UI：</p>
<p><a href="https://twinery.org/2/#/">Twine Web (twinery.org)</a></p>
<p>在顶部菜单栏找到<strong>Twine</strong>，点击<strong>故事格式</strong>选项，单击<strong>SugarCube</strong>，然后单击菜单栏的一个五角星图标——<strong>设为默认格式</strong>。（<strong>可以不设置</strong>，反正默认的<strong>Harlowe</strong>也不错）</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%881%EF%BC%89%E7%AE%80%E4%BB%8B%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/twineSetSugarCube.png" class="" title="twineSetSugarCube">

<p>完成。</p>
<hr>
<h3 id="本地应用"><a href="#本地应用" class="headerlink" title="本地应用"></a>本地应用</h3><p>在Twine的GitHub发行页面找到自己要下载的版本：</p>
<p><a href="https://github.com/klembot/twinejs/releases">Releases · klembot&#x2F;twinejs (github.com)</a></p>
<p>根据自己的系统实际情况下载安装即可。</p>
<p>设置故事格式的方式类似。</p>
<p>在顶部菜单栏找到<strong>Twine</strong>，点击<strong>故事格式</strong>选项，单击<strong>SugarCube</strong>，然后单击菜单栏的一个五角星图标——<strong>设为默认格式</strong>。（<strong>可以不设置</strong>，反正默认的<strong>Harlowe</strong>也不错）</p>
<img src="/2024/09/28/%E5%9F%BA%E4%BA%8ETwine-SugarCube%E7%9A%84%E4%BA%92%E5%8A%A8%E6%96%87%E6%B8%B8%E5%88%B6%E4%BD%9C%EF%BC%881%EF%BC%89%E7%AE%80%E4%BB%8B%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/twineLocalSetSugarCube.png" class="" title="twineLocalSetSugarCube">

<p>完成。</p>
<hr>
<h2 id="部署环境搭建"><a href="#部署环境搭建" class="headerlink" title="部署环境搭建"></a>部署环境搭建</h2><p>其实现在还远远没有到部署的那一步，但是可以先准备一些东西。</p>
<p>如果说，是要部署到Vercel上的话，大概需要——</p>
<p><strong>安装Node.js，安装Vercel CLI，注册GitHub，注册Vercel</strong>。</p>
<hr>
<h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>访问Node.js的官方网站：</p>
<p><a href="https://nodejs.org/">Node.js ——在任何地方运行JavaScript</a></p>
<p>一般来说安装个LTS版本就可以了，当然也可以选择下最新版。后续就是正常的软件安装流程了。</p>
<p>为了验证Node.js安装完成后的情况，可以Win+R输入cmd打开命令行，输入以下命令进行检查：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure>

<p>理论上应该返回一个版本号，例如v21.3.0。</p>
<p>顺便检查一下npm的安装情况：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure>

<p>理论上也是应该返回一个版本号，例如10.8.1。</p>
<p>这两步没有问题了，Node.js安装完毕。</p>
<hr>
<h3 id="安装Vercel-CLI工具"><a href="#安装Vercel-CLI工具" class="headerlink" title="安装Vercel CLI工具"></a>安装Vercel CLI工具</h3><p>在命令行输入：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g vercel</span><br></pre></td></tr></table></figure>

<p>如果说人在国内，网络卡顿下载不了，npm报错超时，建议是给npm换源：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm config set registry https://registry.npmmirror.com/</span><br></pre></td></tr></table></figure>

<p>再尝试一下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g vercel</span><br></pre></td></tr></table></figure>

<p>应该就可以了。</p>
<hr>
<h3 id="注册GitHub"><a href="#注册GitHub" class="headerlink" title="注册GitHub"></a>注册GitHub</h3><p>这个不用多讲了吧。</p>
<p><a href="https://github.com/">GitHub.com</a></p>
<hr>
<h3 id="注册Vercel"><a href="#注册Vercel" class="headerlink" title="注册Vercel"></a>注册Vercel</h3><p>可以直接用GitHub授权登录的。</p>
<p><a href="https://vercel.com/">Vercel.com</a></p>
<p>至此，基本的部署环境已经准备完毕。</p>
<hr>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>本文列举了两个Twine 2 + SugarCube 2的文游作品，介绍了Twine和SugarCube，以及开发环境、部署环境的搭建。</p>
]]></content>
      <categories>
        <category>Tech</category>
        <category>Web Front-End</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Interactive Fiction</tag>
        <tag>Web Front-End</tag>
        <tag>HTML</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>简单修改注册表来增加Windows右键菜单新建文件的种类</title>
    <url>/2024/11/01/%E7%AE%80%E5%8D%95%E4%BF%AE%E6%94%B9%E6%B3%A8%E5%86%8C%E8%A1%A8%E6%9D%A5%E5%A2%9E%E5%8A%A0Windows%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E7%9A%84%E7%A7%8D%E7%B1%BB/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>写文档的时候总是有一个别扭的操作，那就是想要新建Markdown文件，却只能新建文本文件，再把文件的后缀名修改成.md。</p>
<p>这样做非常不优雅，于是开始稍微研究一下直接创建Markdown文件的方法，发现只要简单修改注册表就可以了。</p>
<span id="more"></span>

<hr>
<h2 id="具体操作步骤"><a href="#具体操作步骤" class="headerlink" title="具体操作步骤"></a>具体操作步骤</h2><hr>
<h3 id="示例：Markdown"><a href="#示例：Markdown" class="headerlink" title="示例：Markdown"></a>示例：Markdown</h3><p>建议是在VSCode里面增加一个Reg插件。</p>
<p>新建一个文本文件，把后缀名改成.reg，例如<code>addMd.reg</code></p>
<p>用文本编辑器之类的东西打开，把内容改成这样：</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">Windows Registry Editor Version <span class="number">5.00</span></span><br><span class="line"> </span><br><span class="line">[<span class="meta">HKEY_CLASSES_ROOT\.md</span>]</span><br><span class="line">@=<span class="string">&quot;markdown&quot;</span></span><br><span class="line"> </span><br><span class="line">[<span class="meta">HKEY_CLASSES_ROOT\.md\ShellNew</span>]</span><br><span class="line"><span class="string">&quot;NullFile&quot;</span>=<span class="string">&quot;&quot;</span></span><br><span class="line"> </span><br><span class="line">[<span class="meta">HKEY_CLASSES_ROOT\markdown</span>]</span><br><span class="line">@=<span class="string">&quot;Markdown file&quot;</span></span><br></pre></td></tr></table></figure>

<p>保存，双击运行，点击「是」，即可。</p>
<p>可能不会立刻生效，重启一下就可以了。</p>
<hr>
<h3 id="示例：C"><a href="#示例：C" class="headerlink" title="示例：C++"></a>示例：C++</h3><p>同样，只要改一下Reg文件的内容：</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">Windows Registry Editor Version <span class="number">5.00</span></span><br><span class="line"></span><br><span class="line">[<span class="meta">HKEY_CLASSES_ROOT\.cpp</span>]</span><br><span class="line">@=<span class="string">&quot;cppfile&quot;</span></span><br><span class="line"></span><br><span class="line">[<span class="meta">HKEY_CLASSES_ROOT\.cpp\ShellNew</span>]</span><br><span class="line"><span class="string">&quot;NullFile&quot;</span>=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">[<span class="meta">HKEY_CLASSES_ROOT\cppfile</span>]</span><br><span class="line">@=<span class="string">&quot;C++ Source File&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>保存，双击运行，即可。其它的以此类推</p>
<hr>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>本文介绍了如何通过简单的防法，为Windows右键菜单新建文件提供更多选择。</p>
]]></content>
      <categories>
        <category>Tech</category>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>简单的Cloudflare Warp使用方法</title>
    <url>/2023/11/09/%E7%AE%80%E5%8D%95%E7%9A%84Cloudflare%20Warp%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Cloudflare Warp是Cloudfare推出的一种免费、高性能的VPN服务，理论上能够提升上网的安全性与性能，也能用来绕过网络审查。</p>
<p>本文字教程主要介绍在个人设备上使用Cloudflare Warp连接到互联网，并通过Cloudflare Zero Trust登录客户端，解除Warp自身的流量限制。</p>
<span id="more"></span>

<h2 id="安装与连接"><a href="#安装与连接" class="headerlink" title="安装与连接"></a>安装与连接</h2><p>安装非常简单，在Cloudflare 1.1.1.1的官方网站下载适合自己设备的客户端即可。</p>
<p>下载链接：<a href="https://1.1.1.1/">1.1.1.1 — The free app that makes your Internet faster.</a></p>
<p>打开安装包，按照指示完成安装即可。打开Cloudflare Warp客户端。</p>
<p>点击连接，即可尝试连接。这一步有一定的可能性会失败。如果成功，已经可以访问国际互联网，而且性能通常不错。但是有一定的流量限制。</p>
<p>如果是轻度使用者，不在意流量限制，到这一步即可完成。</p>
<h2 id="注册Zero-Trust"><a href="#注册Zero-Trust" class="headerlink" title="注册Zero Trust"></a>注册Zero Trust</h2><p>登录Cloudflare Dashboard：<a href="https://dash.cloudflare.com/">https://dash.cloudflare.com/</a></p>
<p>当然，如果没有账号可以先注册一个，很容易。注册过程略。</p>
<p>在左侧找到Zero Trust，注册一个Zero Trust账号，团队名称可以自由选择。注册过程略。</p>
<p>注册成功后，找到左侧的<code>My Team</code>一栏，找到<code>Devices</code>选项。选择<code>Connect a Device</code>选项。</p>
<p>单击<code>Create an Enrollment</code>，输入需要注册的邮箱后缀名，例如<code>@gmail.com</code>，然后点击<code>save</code>。</p>
<h2 id="Zero-Trust登录与连接"><a href="#Zero-Trust登录与连接" class="headerlink" title="Zero Trust登录与连接"></a>Zero Trust登录与连接</h2><p>打开自己的Cloudflare Warp客户端，在右键菜单中找到<code>偏好设置</code>，找到<code>账户</code>一栏，点击<code>使用Cloudflare Zero Trust登录</code>。</p>
<p>输入自己之前注册Zero Trust使用的团队名称，点击确认，会跳转到团队的一个Web验证界面。</p>
<p>输入自己使用的邮箱。</p>
<p>在自己的邮箱当中找到Cloudflare发送的验证码，填写验证码，确认。</p>
<p>稍作等待，Cloudflare Warp客户端的Zero Trust将成功登陆。</p>
<p>打开Cloudflare Warp客户端，现在Warp的标志将被替换为Zero Trust。点击连接按钮，即可尝试连接到Cloudflare Warp服务。</p>
<p>这一步的成功率很高，通常能够连接成功。并且1G的流量限制已经解除。</p>
<p>现在可以尝试访问一些网站，例如<a href="https://google.com/">Google</a>。</p>
<p>也可以尝试进行网络测速。</p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>至此，Cloudflare Warp + Zero Trust的简单使用方法已经介绍完毕。Warp能够通过WireGuard协议保护互联网协议，拥有强大的安全性、高效的协议设计和很高的下行速率（有一个问题是上行速率较低），并通过1.1.1.1 DNS解析来提高DNS解析的效率，避免DNS污染的影响，改善综合上网体验。</p>
]]></content>
      <categories>
        <category>Tech</category>
        <category>Network</category>
      </categories>
      <tags>
        <tag>Network</tag>
        <tag>Circumvention</tag>
        <tag>Proxy</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>简单的VSCode C++ (Code Runner) + OpenSSL开发环境搭建</title>
    <url>/2023/11/01/%E7%AE%80%E5%8D%95%E7%9A%84VSCode%20C++%20(Code%20Runner)%20+%20OpenSSL%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>OpenSSL是一个强大的，使用C编写的开源密码学库。它具有高度可定制、功能强大、支持完善、TLS支持和CLI调用等多种优势。</p>
<p>本文主要介绍如何在Windows上使用VSCode C++ (Code Runner) 搭建OpenSSL开发环境。</p>
<span id="more"></span>

<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>Visual Studio Code 1.62.3.0</p>
<h2 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h2><h3 id="安装OpenSSL"><a href="#安装OpenSSL" class="headerlink" title="安装OpenSSL"></a>安装OpenSSL</h3><p>本文的作者是个懒狗，他决定使用一键安装包：<a href="https://slproweb.com/products/Win32OpenSSL.html">Win32&#x2F;Win64 OpenSSL Installer for Windows - Shining Light Productions (slproweb.com)</a></p>
<p>在这个网页上找到自己想要安装的OpenSSL版本就可以了，然后下载.exe或.msi安装包，默认把选项全部勾选即可。</p>
<h3 id="添加Path环境变量"><a href="#添加Path环境变量" class="headerlink" title="添加Path环境变量"></a>添加Path环境变量</h3><p>开始菜单-设置-系统-关于-高级系统设置-高级-环境变量（当然你也可以直接在开始菜单搜索）</p>
<p>在系统变量中找到Path，增加一条，指向你的OpenSSL安装目录下的&#x2F;bin目录，例如：<code>D:\OpenSSL-Win64\bin</code></p>
<p>确定，保存。此时打开CLI（Win+R，cmd），尝试检查一下OpenSSL是否安装成功：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">openssl version</span><br></pre></td></tr></table></figure>

<p>如果安装成功，就会返回一个版本信息，例如：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">OpenSSL 3.1.3 19 Sep 2023 (Library: OpenSSL 3.1.3 19 Sep 2023)</span><br></pre></td></tr></table></figure>

<h2 id="配置VSCode"><a href="#配置VSCode" class="headerlink" title="配置VSCode"></a>配置VSCode</h2><p>打开VSCode，找到Code Runner扩展，修改settings.json文件，增加这样的几条规则，并Ctrl+S保存，例子如下：<br>（可以修改自己想用的 C&#x2F;C++ 标准，例如<code>std=c++20</code>是<code>C++ 20</code>，那么你可以修改为<code>std=c++23</code>来改成<code>C++23</code>）<br>（请把示例中的安装目录修改为自己的OpenSSL文件夹下的\include目录和\lib目录）</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;code-runner.executorMap&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"></span><br><span class="line">        <span class="attr">&quot;cpp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cd $dir &amp;&amp; g++ $fileName -o $fileNameWithoutExt -Wall -std=c++20 -I \&quot;D:\\OpenSSL-Win64\\include\&quot; -L \&quot;D:\\OpenSSL-Win64\\lib\&quot; -lssl -lcrypto &amp;&amp; $dir$fileNameWithoutExt&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;c&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cd $dir &amp;&amp; gcc $fileName -o $fileNameWithoutExt -Wall -I \&quot;D:\\OpenSSL-Win64\\include\&quot; -L \&quot;D:\\OpenSSL-Win64\\lib\&quot; -lssl -lcrypto &amp;&amp; $dir$fileNameWithoutExt&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;C_Cpp.default.includePath&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;D:\\OpenSSL-Win64\\include&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure>

<h2 id="测试运行"><a href="#测试运行" class="headerlink" title="测试运行"></a>测试运行</h2><p>这里是一个非常简单的测试程序：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;openssl/aes.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Hello, OpenSSL!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;AES Block Size is: &quot;</span> &lt;&lt; AES_BLOCK_SIZE &lt;&lt; <span class="string">&quot; Bytes&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果正常运行，这个程序输出如下：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">Hello, OpenSSL!</span><br><span class="line">AES Block Size is: <span class="number">16</span> Bytes</span><br></pre></td></tr></table></figure>

<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>至此，VSCode C++ (Code Runner) + OpenSSL开发环境配置完毕，可以进行OpenSSL的C&#x2F;C++开发。</p>
]]></content>
      <categories>
        <category>Tech</category>
        <category>Crypto</category>
      </categories>
      <tags>
        <tag>OpenSSL</tag>
        <tag>Crypto</tag>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>轻微程度的隐私保护技巧</title>
    <url>/2024/09/24/%E8%BD%BB%E5%BE%AE%E7%A8%8B%E5%BA%A6%E7%9A%84%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文主要介绍一些入门程度的隐私保护技巧。作者也是<strong>门外汉</strong>，无法提供专业的建议。本文在内行看来应该是绝对纯属<strong>胡扯</strong>。</p>
<p>这可能会稍微提高一点点防人肉能力，但不多，也许能防一些小白。但也就顶多只会<strong>稍微增加调查的成本</strong>而已。对于体系化的社工库团队而言，拿下<strong>普通人</strong>这种事基本上是<strong>轻而易举</strong>的，你通常防了也没用。</p>
<span id="more"></span>

<p>其实，这也不绝对，一套合理的防护手段和身份隔离可以显著增加调查成本，至少是严重拖延调查的时间。但是，要做到真正意义上的滴水不漏是不可能的。</p>
<p>本文不打算配图，不太好。可能，看起来会有点枯燥，抱歉。</p>
<hr>
<h2 id="减少信息检索机会"><a href="#减少信息检索机会" class="headerlink" title="减少信息检索机会"></a>减少信息检索机会</h2><p>信息检索是调查一个人的基本手段，它是<strong>合法</strong>的。</p>
<p>普通网民也可以通过信息检索挖掘出一个人的部分个人信息来。</p>
<p>其主要利用的问题在于——利用不同平台之间互相搜索的关系来放大某一条线索。</p>
<hr>
<h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>举个例子，拿到一条QQ号，普通人可以怎么查？</p>
<p>一个常见的做法是直接在<strong>微信</strong>上搜索这个QQ号。如果没有关闭微信的QQ号搜索功能的话，微信号会被确认。</p>
<p>而常见的微信号格式（偷懒的话）可能会包含手机号、姓名首字母缩写、生日、QQ主号等关键信息。这很容易暴露更多信息。</p>
<p>另一个常见的做法就是直接在<strong>搜索引擎</strong>上搜索这个QQ号。</p>
<p>此时可以如何拓宽线索呢？例如之前在某个贴吧交流的时候，你发帖留下了一个QQ号作为联系方式，没删。</p>
<p>或者，你干脆是个文援什么的，在推特上把自己的QQ号一挂——<strong>门牌xxxxxxxxxx</strong>。那么，别人直接就搜出来了，推特账号。</p>
<hr>
<h3 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h3><h4 id="删除发言"><a href="#删除发言" class="headerlink" title="删除发言"></a>删除发言</h4><p>对自己曾经留下互联网足迹，但已经不常用的平台，注意检查一下有没有留过敏感信息，可以自搜一下。</p>
<p>有的话，可以选择删掉。这会稍微增加一点调查的难度。</p>
<h4 id="销号跑路"><a href="#销号跑路" class="headerlink" title="销号跑路"></a>销号跑路</h4><p>对于微博一类的数据泄露和开盒重灾区，如果曾经使用，但现在已经不用，或者是没必要用。建议在尽量删除自己的言论后<strong>销号跑路</strong>。</p>
<p>这能减少攻击者利用微博上的信息、发帖和线索来进一步拓宽调查面，稍微增加难度和拖延时间。</p>
<h4 id="使用小号-买号"><a href="#使用小号-买号" class="headerlink" title="使用小号 &#x2F; 买号"></a>使用小号 &#x2F; 买号</h4><p>使用QQ进行交流时，如果对方是陌生人，可以考虑使用小号。</p>
<p>小号的捆绑信息和检索价值相对而言会更少一点，稍微增加调查难度。</p>
<h4 id="混淆昵称-头像"><a href="#混淆昵称-头像" class="headerlink" title="混淆昵称 &#x2F; 头像"></a>混淆昵称 &#x2F; 头像</h4><p>如果你在意隐私保护，不要在一堆平台上使用十分类似或者干脆是完全一样的昵称和头像。尤其是昵称和ID，这个是容易被检索锁定的。</p>
<p>为了追求个性，可以稍微增加一点变化。但<strong>最好不要</strong>在昵称、ID当中添加自己的个人真实信息，例如<strong>生日</strong>，<strong>姓名缩写</strong>，<strong>出生年份</strong>等。</p>
<h4 id="注意隐私设置"><a href="#注意隐私设置" class="headerlink" title="注意隐私设置"></a>注意隐私设置</h4><p>在有必要和自己能接受的范围内，尽可能地隐藏自己的个人信息，减少平台间关联。多隐藏一点，查的难度就多一分，不过也就是一分。</p>
<p>尤其应该避免直接泄露的包括<strong>手机号</strong>，<strong>真实姓名</strong>，<strong>身份证号</strong>。这三者如果直接泄露，那么开盒将会是非常轻松的一件事情。</p>
<h4 id="谨慎分享敏感信息"><a href="#谨慎分享敏感信息" class="headerlink" title="谨慎分享敏感信息"></a>谨慎分享敏感信息</h4><p>典型的包括<strong>录取通知书</strong>，<strong>机票</strong>，<strong>火车票</strong>等。不要以为对一些地方打码就能高枕无忧，不是这样的。虽然确实会好得多，但通常还是会暴露一些信息。</p>
<p>最好还是，控制一下分享的欲望。想要分享的话，可以直接发给信任的朋友，而最好不要直接在帖子、推文、空间之类的地方往那一挂，也不删，长时间就挂在那。</p>
<h4 id="谨慎分享摄影作品"><a href="#谨慎分享摄影作品" class="headerlink" title="谨慎分享摄影作品"></a>谨慎分享摄影作品</h4><p>不要以为图片定位很困难，不是这样的。</p>
<h4 id="减少检索机会"><a href="#减少检索机会" class="headerlink" title="减少检索机会"></a>减少检索机会</h4><p>关闭<strong>微信的QQ号搜索，微信的手机号搜索，支付宝的手机号搜索，QQ的手机号搜索，Telegram的手机号展示</strong>，以及各种平台的<strong>通讯录功能</strong>。</p>
<p>这会稍微增加一点调查难度。</p>
<h4 id="使用强加密邮箱"><a href="#使用强加密邮箱" class="headerlink" title="使用强加密邮箱"></a>使用强加密邮箱</h4><p>强加密邮箱通常采用端到端加密技术，相对而言是更加可控，它的安全性通常是不可妥协的。</p>
<p>但也有不方便的一点——主密钥丢失以后，通常还挺难恢复的，可能直接炸了。注意一下。</p>
<p>推荐两个：</p>
<p><a href="https://protonmail.com/">ProtonMail (protonmail.com)</a></p>
<p><a href="https://mail.riseup.net/">RiseUpMail (mail.riseup.net)</a></p>
<hr>
<h2 id="减少撞库机会"><a href="#减少撞库机会" class="headerlink" title="减少撞库机会"></a>减少撞库机会</h2><p>稍微解释一下什么是撞库。</p>
<h3 id="撞库"><a href="#撞库" class="headerlink" title="撞库"></a>撞库</h3><p>比如说，攻击者通过某种手段获取了一条账密信息——<code>Bob@gmail.com</code>, <code>BobLoveAlice1314520</code>。</p>
<p>他可以尝试，在不同的平台去利用这条账密信息尝试登录。有些平台会触发2FA（国内通常是手机，国外可以是手机、邮件、OTP等），这倒是还能防住，但是有些平台（特别是邮箱和一些小网站）是很容易直接账密登录的。</p>
<p>一旦撞库成功一次，就可以获取大量的个人信息，直接用于检索，钓鱼，甚至可以说是结案了。</p>
<p>这种攻击的可行性通常来自于用户的一种<strong>常见的坏习惯——在一堆平台使用几近相同甚至是完全相同的密码</strong>。</p>
<h3 id="预防撞库"><a href="#预防撞库" class="headerlink" title="预防撞库"></a>预防撞库</h3><p>显然，在每个平台上使用完全不同的密码是很费劲的一件事，也不好记忆，不太方便。</p>
<p>这里推荐几种稍微增加安全性的方式。</p>
<h4 id="异地登录保护"><a href="#异地登录保护" class="headerlink" title="异地登录保护"></a>异地登录保护</h4><p>这东西很多平台都有，有的记得打开（当然很多是自带的）。可以稍微增加一点撞库难度。</p>
<h4 id="稍微差异化的密码"><a href="#稍微差异化的密码" class="headerlink" title="稍微差异化的密码"></a>稍微差异化的密码</h4><p>如果你懒得用什么技术手段保管密码，又懒得记很复杂的密码，那就对每个平台的密码<strong>稍加差异化</strong>。</p>
<p>这可以稍微增加撞库的成本，或许可以触发尝试次数警告，冻结账户，拖延时间甚至是挫败撞库什么的。</p>
<h4 id="手机验证码2FA"><a href="#手机验证码2FA" class="headerlink" title="手机验证码2FA"></a>手机验证码2FA</h4><p>对于重要的平台，最好别嫌麻烦，加个<strong>手机验证码</strong>2FA是有助于防止撞库爆破这种情况的，特别是你密码习惯不太好的话。</p>
<h4 id="邮件验证码2fA"><a href="#邮件验证码2fA" class="headerlink" title="邮件验证码2fA"></a>邮件验证码2fA</h4><p>这<strong>邮件验证码</strong>其实比手机稍弱一些，甚至有时候会帮倒忙（所以说邮件安全要注意的）。</p>
<p>但其实，这个也看你的邮箱。至少，它也会给攻击者制造麻烦，并且会造成通知、警示的效果。</p>
<h4 id="Authenticator-OTP应用"><a href="#Authenticator-OTP应用" class="headerlink" title="Authenticator &#x2F; OTP应用"></a>Authenticator &#x2F; OTP应用</h4><p><strong>Microsoft Authenticator</strong>， <strong>Google Authenticator</strong>之类的应用能根据一个PSK和时间戳生成一个动态变更的OTP。它让撞库攻击变得很困难——除非你的手机被入侵，或认证被某种方式绕过。</p>
<h4 id="密钥管理应用"><a href="#密钥管理应用" class="headerlink" title="密钥管理应用"></a>密钥管理应用</h4><p><strong>1Pass</strong>，<strong>Bitwarden</strong>这样的应用只需要记忆一个主密钥，就可以自动化管理多平台账密，通常具有多端同步、自动填充、密钥生成等功能。</p>
<p>如果你想要使用多平台不同的随机长密钥，这是很好的选择。这能显著增加撞库的难度。</p>
<p>如果你的每个平台都使用了至少12字节的随机密钥，且互不相同，那么撞库的威胁对你而言是比较小的。</p>
<h4 id="生物识别"><a href="#生物识别" class="headerlink" title="生物识别"></a>生物识别</h4><p>指纹、虹膜、掌纹（不推荐人脸和声音）是目前绕过成本较高的生物识别技术，采用这种方式进行登录可以免除管理密码的麻烦，也能增加撞库的困难。</p>
<h4 id="硬件密钥"><a href="#硬件密钥" class="headerlink" title="硬件密钥"></a>硬件密钥</h4><p>硬件密钥显然是几乎无法绕过的，但也是很麻烦的。</p>
<hr>
<h2 id="注意支付手段"><a href="#注意支付手段" class="headerlink" title="注意支付手段"></a>注意支付手段</h2><p>支付手段可能会暴露你的一些个人信息。</p>
<h3 id="微信和支付宝"><a href="#微信和支付宝" class="headerlink" title="微信和支付宝"></a>微信和支付宝</h3><p><strong>微信收款码</strong>和<strong>支付宝收款码</strong>会暴露你<strong>真实姓名的最后一个字</strong>。</p>
<p>如果你想要避免这一点，请尝试使用<strong>赞赏码</strong>和<strong>口令红包</strong>。</p>
<p><strong>支付宝账号被搜索确定</strong>将会暴露你的<strong>性别、部分手机号和真实姓名的最后一个字</strong>。</p>
<h3 id="PayPal和虚拟信用卡"><a href="#PayPal和虚拟信用卡" class="headerlink" title="PayPal和虚拟信用卡"></a>PayPal和虚拟信用卡</h3><p>这种通常都要好一些，但我也不太了解，太菜了。</p>
<h3 id="加密货币"><a href="#加密货币" class="headerlink" title="加密货币"></a>加密货币</h3><p>只要你不直接提现到人民币，加密货币一般不会出什么大事。用加密货币支付服务通常具有较高的匿名性，特别是对于一些开不了口，上不了台面，见不得光的交易而言。</p>
<p>如果硬要提现，可以提现到境外的银行卡，信用卡，虚拟信用卡，再把钱转回来之类的。虽然吃点手续费，但是出事的概率更低。黑转灰，灰洗白。</p>
<p>仅仅作为支付手段的话，USDT，USDC和TRX是很不错的。</p>
<p>当然如果提现，最好找个靠谱的C2C商家，千万注意对方的身份和支付信息，如果和标注的不一致，请不要收款。如果收到黑钱，可能会被卷入很麻烦的事情。</p>
<hr>
<h2 id="快递信息"><a href="#快递信息" class="headerlink" title="快递信息"></a>快递信息</h2><p>这没什么好说的，数据泄露重灾区。最多要做的就是，注意自己销毁一下信息标签，还有就是填个化名吧。</p>
<p>用个不常用的手机号也挺好的。</p>
<hr>
<h2 id="基本的网络安全防范意识"><a href="#基本的网络安全防范意识" class="headerlink" title="基本的网络安全防范意识"></a>基本的网络安全防范意识</h2><p>这个东西简直是……可能耳朵都要听出茧子来了吧？但还是稍微讲讲。</p>
<h3 id="钓鱼链接"><a href="#钓鱼链接" class="headerlink" title="钓鱼链接"></a>钓鱼链接</h3><p>借贷、赌博、涉黄、钓鱼的短信、邮件链接不要乱点，看清楚再点。</p>
<p>不要以为反正点进去不输信息就没事（当然你输信息就，对吧，不用看了），有时候会被定位之类的，情况复杂得很，注意一下。</p>
<h3 id="深度伪造"><a href="#深度伪造" class="headerlink" title="深度伪造"></a>深度伪造</h3><p>音视频AI伪造很发达，总之熟人的一些请求也是需要找他们本人再三确认的，不要直接相信了。</p>
<h3 id="虚拟身份证明"><a href="#虚拟身份证明" class="headerlink" title="虚拟身份证明"></a>虚拟身份证明</h3><p>用SMS代收发这种服务来绕过你不太信任的一些平台的注册。</p>
<p><a href="https://sms-bus.com/">SMS Bus</a></p>
<p><a href="https://sms-activate.io/">SMS Activate</a></p>
<h3 id="底线意识"><a href="#底线意识" class="headerlink" title="底线意识"></a>底线意识</h3><p>不涉三就是不涉三，<strong>底线卡死</strong>，不要什么软磨硬泡的给个联系方式，给点什么信息，收个礼物什么的，甚至去搞线下。</p>
<h3 id="不明物品"><a href="#不明物品" class="headerlink" title="不明物品"></a>不明物品</h3><p>比如说你是个V，收了一堆礼物，请务必<strong>仔细检查</strong>一下，到底有没有定位器、录音器、针孔摄像头一类的东西。网络上再怎么熟络，交情再怎么深的人，也不是完全可信的。</p>
<hr>
<h2 id="一些简单的自查手段"><a href="#一些简单的自查手段" class="headerlink" title="一些简单的自查手段"></a>一些简单的自查手段</h2><p>这些东西，可以用来自查。可以看看自己哪些账号信息泄露了，这样可以提前做防范，有个心理预期。</p>
<p>可以尝试对自己进行几次调查看看，难度会不会很高。就用之前的那点，简单方法。</p>
<p>当然，你也可以用这种东西去查别人。<strong>技术就在那里，看你怎么用了</strong>。</p>
<p><a href="https://www.reg007.com/">REG007</a> —— 账号绑定关联等，仅用于自查</p>
<p><a href="https://qb.heikebook.com/index">Q绑查询-HeikeBook</a> —— QQ数据泄露，LoL数据泄露等</p>
<p><a href="https://haveibeenpwned.com/">Have I Been Pwned？</a> —— 一个简单的自查系统</p>
<p><a href="https://privacy.aiuys.com/">Privacy | 个人数据泄漏检测 (aiuys.com)</a> —— 简单的查询系统，数据不少</p>
<p><a href="https://ouotool.com/qq/direct">查隐藏QQ_QQ号码查询分析工具 (ouotool.com)</a> —— 隐藏QQ查询</p>
<p><a href="https://qq.ip138.com/idsearch/">身份证查询 (ip138.com)</a> —— 身份证号信息分析工具</p>
<p><a href="https://www.ip138.com/sj/">手机号归属地查询 (ip138.com)</a> —— 手机号信息分析工具</p>
<p><a href="https://www.ip138.com/">IP地址查询 (ip138.com)</a> —— IP地址信息分析工具</p>
<p><a href="https://qq.ip138.com/day/">万年历查询 (ip138.com)</a> —— 阴阳历转换 用于锁定生日等</p>
<hr>
<h2 id="社工库"><a href="#社工库" class="headerlink" title="社工库"></a>社工库</h2><p>简单解释一下社工库。</p>
<h3 id="什么是社工库？"><a href="#什么是社工库？" class="headerlink" title="什么是社工库？"></a>什么是社工库？</h3><p>社工库是一个灰产&#x2F;黑产数据库，其中包含了大量来自于互联网数据泄露事件、隐私暴露事件、信息安全事件、内鬼泄露、数据贩卖等灰色、黑色链条输入的数据。个人信息在这种数据库上关联起来，用于检索和定位。</p>
<p>其中最主要的信息泄露事件和领域包括：</p>
<p><strong>新浪微博，腾讯QQ，顺丰快递，超星学习通，英雄联盟，网贷平台</strong>等。</p>
<p>通常而言，以下几条信息是容易被关联在一起：</p>
<p><strong>QQ号，微博号，LoL用户名，LoL大区，曾用密码MD5，真实姓名，手机号，身份证号，家庭住址，学号</strong>。</p>
<p>社工库通常以<strong>Telegram Bot</strong>的方式提供服务。</p>
<p>免费用一般是可以的，签到送额度。用户通常可以免费检索，但是额度不高。要想自由使用，通常要付费。</p>
<p>付费通常会解锁一个较大的检索额度，并且会增加一些额外的模式，例如猎魔（类似于盲搜）——给出一定的范围，例如<strong>部分姓名，籍贯，出生日期范围&#x2F;生日，性别</strong>，随后社工库返还数十条记录，用于参考和大致锁定范围。</p>
<p>最有效的手段是雇佣社工库的专业团队，对某个人进行调查。这个服务一般会比较贵，但绝大多数个人都可以被完全调查出来，包括<strong>个人真实信息，开房记录，借贷记录，征信体系，犯罪历史，三网定位</strong>等等。这里就可能会超出一般的信息检索范畴，会用到一些……内部的帮助。这个我也不是很清楚。</p>
<h3 id="推荐几个社工库？"><a href="#推荐几个社工库？" class="headerlink" title="推荐几个社工库？"></a>推荐几个社工库？</h3><p>可以用来自查，也可以拿去查别人。</p>
<p>总之，还是那句话，<strong>技术就在那里，看你怎么用了</strong>。</p>
<p><a href="https://t.me/qbjSGKbot">情报局社工库</a></p>
<p><a href="https://t.me/AJL01_bot">暗精灵社工库</a></p>
<p><a href="https://t.me/DogeSGK_bot">狗狗社工库</a></p>
<p><a href="https://t.me/Zonesgk_bot?start=TZUYZTTPQ">X-ray社工库</a></p>
<p>这种东西，互联网上很多，可以自己去找。反正也是付费交易。你把钱付给他们，他们把你想要的东西交给你。</p>
<p>Q：用社工库违法吗？A：<strong>没错，但不太好抓，一般睁一只眼闭一只眼，不要宣扬和传播。</strong></p>
<p>Q：没有风险吗？A：<strong>有的，求别人办事最好说话客气点，少废话，直接给钱。还有不要用动漫头像。</strong></p>
<p>Q：能查敏感人物吗？A：<strong>不一定，有的要加钱，有的干脆不能，建议是不要，反正一般也用不着。</strong></p>
<hr>
<h2 id="一些忠告"><a href="#一些忠告" class="headerlink" title="一些忠告"></a>一些忠告</h2><p>简单写写。</p>
<h3 id="避免节奏"><a href="#避免节奏" class="headerlink" title="避免节奏"></a>避免节奏</h3><p>作为普通人，而非信息安全专家，想要保护自己免于网络暴力和开盒，最好的办法之一就是<strong>保持低调</strong>。</p>
<p>少带节奏，少和别人起冲突。看了就行，自己心里有个判断，有个态度，可以了。</p>
<p>喜欢说，可能会有人来找你麻烦，警察可能也会找你麻烦。</p>
<p>少说点，没什么人会注意到你，警察也睁一只眼闭一只眼。</p>
<p>不要以为就自己可以去开别人，别人同样也可以开你——<strong>网络暴力是相互的</strong>。</p>
<p>不要以为代理或者VPN的开关打开了，就是谁也抓不到你。公安基本照抓不误，除非你人在国外。</p>
<p>哪些事情，可能相对会比较危险？个人认为，<strong>饭圈，键政，对喷，乐子，VTuber，文援</strong>等。</p>
<p>不是说不能做这些事情，当然是可以的，这是你自己的自由。就是要特别注意一些。</p>
<h3 id="客气一些"><a href="#客气一些" class="headerlink" title="客气一些"></a>客气一些</h3><p>找社工库人工查人的时候最好态度好一点，简单明白说清楚自己的目的和需求，让你给钱就给钱，不要话多。</p>
<p>就算自己被讹，或者对方查不出来，也是纯纯活该，直接认了。这种财产，<strong>法律是不保护的</strong>。</p>
<p>不要以为自己一个TG，“匿名性”上来就可以为所欲为，人家查你，可能也是照查不误的。</p>
<p>等下直接被盒，挂在人工频道上，那就好玩了。</p>
<hr>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>本文简单介绍了一些个人隐私保护、信息安全方面的内容。包括隐私保护手段，自查工具、建议行为准则等等。</p>
<p>写得非常外行，内行肯定是见笑的，抱歉。</p>
<p>本文到此结束。</p>
]]></content>
      <categories>
        <category>Tech</category>
        <category>Security</category>
      </categories>
      <tags>
        <tag>Crypto</tag>
        <tag>Cyber Security</tag>
      </tags>
  </entry>
  <entry>
    <title>通过简单的CloudFlare Warp让VPS解锁ChatGPT</title>
    <url>/2023/10/18/%E9%80%9A%E8%BF%87%E7%AE%80%E5%8D%95%E7%9A%84CloudFlare-Warp%E8%AE%A9VPS%E8%A7%A3%E9%94%81ChatGPT/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>ChatGPT之前封锁了很多大机房的IP段，这导致Vultr、Digital Ocean等常用的VPS供应商机房访问OpenAI的服务会被屏蔽。</p>
<p>本文介绍如何简单地配置CloudFlare Warp进行出站流量转发，以绕过OpenAI的屏蔽策略，访问OpenAI的服务。</p>
<span id="more"></span>

<h3 id="部署过程"><a href="#部署过程" class="headerlink" title="部署过程"></a>部署过程</h3><p>非常简单，只需要一行命令行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -fsSL git.io/warp.sh) d</span><br></pre></td></tr></table></figure>

<p>部署已完成，所有出站流量都走CloudFlare Warp。可能会引入些许延迟和轻微降速，但是几乎无感。</p>
<p>喜欢的可以去给脚本的作者点个Star：<a href="https://github.com/P3TERX/warp.sh">P3TERX&#x2F;warp.sh: Cloudflare WARP Installer | WARP 一键安装脚本 (github.com)</a></p>
<p>更详细的文档在作者的文档当中也已经说明。</p>
]]></content>
      <categories>
        <category>Tech</category>
        <category>Network</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Network</tag>
        <tag>Circumvention</tag>
        <tag>Proxy</tag>
        <tag>VPS</tag>
      </tags>
  </entry>
</search>
